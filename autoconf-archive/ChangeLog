# Copyright (c) 2022 Autoconf Archive Maintainers <autoconf-archive-maintainers@gnu.org>
#
# Copying and distribution of this file, with or without modification, are
# permitted in any medium without royalty provided the copyright notice and
# this notice are preserved. This file is offered as-is, without any warranty.

2022-02-11  Peter Simons  <simons@cryp.to>

	Re-format macros into the canonical format.

	Merge pull request #246 from vapier/master
	AX_CC_FOR_BUILD: deprecate in favor of AX_PROG_CC_FOR_BUILD

	Merge pull request #244 from manxorist/cxx20
	AX_CXX_COMPILE_STDCXX: add C++20 support

	Merge pull request #243 from rmathar/master
	detect qtmake-qt5, moc-qt5 etc in ax_have_qt.m4

	Merge pull request #242 from ossama-othman/fix-ax-valgrind-check
	AX_VALGRIND_CHECK: Fix "nothing to be done".

	Merge pull request #241 from earlchew/ax_valgrind_check-addprefix
	VALGRIND_CHECK_RULE: Correct spelling of $(addprefix)

	Merge pull request #240 from chuckatkins/detect-nvhpc
	AX_COMPILER_VENDOR: Add support for the NVIDIA HPC Compiler

	Merge pull request #239 from jpalus/ax_cc_maxopt-autoconf-2.70
	AX_CC_MAXOPT: adjust to new way of testing if var is set

	Merge pull request #237 from kiplingw/patch-1
	ax_gcc_x86_cpu_supports.m4: Fix AC_LANG clobbered...

	Merge pull request #236 from bastien-roucaries/fromdebian
	path_bdd from debian

2022-01-19  Mike Frysinger  <vapier@gentoo.org>

	AX_CC_FOR_BUILD: deprecate in favor of AX_PROG_CC_FOR_BUILD
	The AX_PROG_CC_FOR_BUILD has seen a lot more updates than
	AX_CC_FOR_BUILD, and is generally way more complete.  The latter
	hardcoded `gcc` as the native compiler fallback and lacks any of
	the standard $build- prefix searches.

	It also uses non-standard cache vars -- it's using the bfd_cv_xxx
	namespace instead of the ax_cv_xxx namespace everything else does.

	Otherwise, the macros largely have the same intention: to find a
	compiler for the build system, and setup the exe extension.  So
	deprecate AX_CC_FOR_BUILD and have it redirect automatically.

2021-12-25  Jörn Heusipp  <osmanx@problemloesungsmaschine.de>

	AX_CXX_COMPILE_STDCXX: add C++20 support

2021-12-10  mathar  <mathar@mpia-hd.mpg.de>

	detect qtmake-qt5, moc-qt5 etc in ax_have_qt.m4

2021-11-30  Ossama Othman  <ossama.othman@intel.com>

	AX_VALGRIND_CHECK: Bump the M4 serial number.

2021-11-30  Ossama Othman  <ossama.othman@intel.com>

	AX_VALGRIND_CHECK: Correct recursive target names.
	Recursive targets associated with AM_EXTRA_RECURSIVE_TARGETS() macro
	calls should end with "-local", not "-am".  Correct the
	check-valgrind{-vgtool}-am rules accordingly.  This addresses a
	problem where the calling "make check-valgrind" resulted in "nothing
	to be done".

	See the Automake manual Section "Recursing subdirectories" for
	details:
	https://www.gnu.org/software/automake/manual/automake.html#Subdirectories

2021-11-30  Ossama Othman  <ossama.othman@intel.com>

	AX_VALGRIND_CHECK: Fix recursive rule generation.
	Move the AM_EXTRA_RECURSIVE_TARGETS() macro calls inside of the
	AX_VALGRIND_CHECK definition to force the AM_EXTRA_RECURSIVE_TARGETS()
	macro calls to be processed as part of AX_VALGRIND_CHECK. The
	recursive targets were otherwise not generated by Automake when using
	an installed copy of the `ax_valgrind_check.m4' file
	(e.g. `/usr/share/aclocal/ax_valgrind_check.m4').

2021-11-18  Earl  <earl@timberdragon.com>

	VALGRIND_CHECK_RULE: Correct spelling of $(addprefix)

2021-11-05  Chuck Atkins  <chuck.atkins@kitware.com>

	AX_COMPILER_VENDOR: Add support for the NVIDIA HPC Compiler
	This specifically detects the NVIDIA HPC compiler.  The "nvhpc"
	label is explicitly chosen here insted of "nvidia" to distinguish
	from other NVIDIA compilers (cuda, etc.)

2021-08-30  Jan Palus  <jpalus@fastmail.com>

	AX_CC_MAXOPT: adjust to new way of testing if var is set
	autoconf 2.70 changed default value set in $ac_test_* from "set" to "y"
	see https://git.savannah.gnu.org/cgit/autoconf.git/commit/?id=76754e0
	instead of checking for specific value, just check if var is empty

2021-08-15  Adam Chyła  <adam@chyla.org>

	AX_PROG_ROBOT: fix version checking
	- fix issue when two numbers version (X.Y) is not detected

2021-08-11  Kip  <kip@thevertigo.com>

	ax_gcc_x86_cpu_supports.m4: Fix AC_LANG clobbered...
	AX_GCC_X86_CPU_SUPPORTS expands _AX_GCC_X86_CPU_INIT, which in turn expands an AC_LANG_PUSH([C]) without a corresponding AC_LANG_POP([C])...

2021-08-09  Bastien Roucariès  <rouca@debian.org>

	Modernize ax_path_bdb
	Run AC_SUBST on principal variables and clean up

	Use AS_IF in ax_path_bdb.m4
	Simplify the code and cleaner

	Improve AX_PATH_BDB_NO_OPTIONS
	Run detection of local install even if no crosscompile because we are now cross compile safe

	Cleanup _AX_PATH_BDB_PATH_FIND_HIGHEST
	Improve this function and add tracing.

	Use _AX_PATH_BDB_ENV_GET_VERSION in local install check
	Do not hardcode test and use generic test that is usuable in cross compile

	Improve ax_path_bdb
	Use default value 0 for minimal version

	Harden fail path of header detection of ax_path_bdb

	Fix ax_path_bdb in case of crosscompile
	We could safely run the env test now

	Simplify detection of versioned lib
	Use a for loop along lib instead of if else

	Allow linking in case of cross compile
	Check linking even if cross compile

	Use private name for variable
	Follow variable style of autoconf

	Factorize header test of path bdb

	Use AC_COMPUTE_INT for computing db version
	Better portability and better reporting of error

	Detect header db.h using classical construct
	Detect header db.h using the classical AC_COMPILE_IFELSE instead of home made test.
	Will allow latter factorisation in case of cross compile

2021-06-17  Tim Ruffing  <crypto@timruffing.de>

	AX_PROG_CC_FOR_BUILD: Add workaround for ac_cv_c_compiler_gnu issue

	AX_PROG_CC_FOR_BUILD: support C99 and C11 variables

2021-06-17  Pieter Lexis  <pieter.lexis@powerdns.com>

	Modernize ax_check_sign.
	This changes the obsolete AC_TRY_COMPILE to the newer
	AC_COMPILE_PROGRAM.

2021-06-17  Vincent Danjean  <Vincent.Danjean@ens-lyon.org>

	AX_PKG_SWIG: fix version checking
	- when SWIG is found but no minimal version is required,
	  execute action-if-found
	- when only a partial version is given as minimal version,
	  correctly set minor and/or patch to 0 if missing
	  Without the fix, AX_PKG_SWIG([4]) is the same as AX_PKG_SWIG([4.4.4])

2021-06-17  Richard B Winters  <rik@mmod.co>

	 Add Boost::Random support to AX_BOOST_<X>

	Add Boost::Atomic support to AX_BOOST_<X>

	Add support for Microsoft's C++ Rest SDK

2021-06-17  Petr Menšík  <pemensik@redhat.com>

	Define PYTHON_PLATFORM_SITE_PKG=
	Python site-path is defined only for platform independent modules.
	Platform dependent modules might need autoconf more often, export also
	site-path for platform dependent code, such as compiled C libraries
	wrappers.

	Support sysconfig python module in python_devel
	distutils are going to be deprecated in Python 3.12. Support and prefer
	sysconfig module over distutils.sysconfig for fetching system
	definitions.

2021-06-12  David Seifert  <soap@gentoo.org>

	Revert "AX_PTHREAD: target > host"
	This reverts commit 2567e0ce0f3a11b535c6b527386197fb49ff172b.

	* `AC_CANONICAL_HOST` is the system on which the actual binary will run,
	  `AC_CANONICAL_TARGET` is the system for which code is generated. The
	  Autoconf manual even mentions that

	    --target=target-type
	      the type of system for which any compiler tools in the package produce code (**rarely needed**).

2021-02-19  Peter Simons  <simons@cryp.to>

	AX_CHECK_PCRE2: cosmetic change to fix the #serial number

2021-02-19  Michael Orlitzky  <michael@orlitzky.com>

	AX_ABSOLUTE_HEADER: replace AC_FOREACH with m4_foreach_w
	The AC_FOREACH macro is deprecated in favor of m4_foreach_w. This
	eliminates the associated warning in newer versions of autoconf.

2021-02-19  Ignacy Gawedzki  <ignacy.gawedzki@green-communications.fr>

	AX_BOOST_SERIALIZATION: make sure tests run with a clean $ax_lib variable
	The ax_lib variable needs to be emptied before the tests, otherwise it might
	still contain the value from some unrelated previous test.

2021-02-19  Max Horn  <max@quendi.de>

	AX_PROG_CXX_FOR_BUILD: match changes made to AX_PROG_CC_FOR_BUILD recently
	- save/restore GXX
	- honor `./configure --build=BUILD`
	- use AC_LANG_PUSH and AC_LANG_POP to save and restore global variables
	  used for running tests like ac_compile and ac_link
	- use pushdef/popdef to save and restore ac_tool_prefix, cross_compiling
	  and am_cv_CXX_dependencies_compiler_type (not sure if we need the latter
	  but this mimicks what AX_PROG_CC_FOR_BUILD does)

2021-02-19  Matthieu Schaller  <matthieu.schaller@gmail.com>

	AX_LIB_HDF5: fix ax_lib_hdf5 on systems with verbose h5cc -show
	On some systems, the installation of h5cc is such that `h5cc -show` produces
	more than one line. This breaks the macro and produces an invalid Makefile.

	This proposed change just calls `head` before the call to `awk` to make sure
	only the first line (the relevant one) is used.

2021-02-19  Peter Simons  <simons@cryp.to>

	AX_CHECK_PCRE2: search for an installed libpcre2-8 library
	Submitted in <https://savannah.gnu.org/patch/index.php?9900>.

2021-02-19  Zack Weinberg  <zackw@panix.com>

	AX_PTHREAD: use AS_ECHO instead of $as_echo
	AS_ECHO(["text"]) is the documented way to perform an 'echo' safely.
	$as_echo is an internal, undocumented shell variable that was part of
	the implementation of AS_ECHO; it was never intended to be used directly.

	The code in ax_pthread.m4 would work with autoconf 2.69, but with
	unreleased development versions of Autoconf from January 2013 until
	March 2020 (which did not set $as_echo at all) it would have malfunctioned
	unpredictably.  With versions after March 2020 it would work correctly
	but trigger -Wobsolete warnings.

2021-02-19  Jens Rehsack  <sno@netbsd.org>

	AX_PTHREAD: target > host
	Even if cross-compiling is not the most used use-case, it's much more
	important where we build for then where we run configure stage on (see
	autoconf-manual "18.6.3 Hosts and Cross-Compilation").

	AX_PTHREAD.M4: ensure C++ is handled analogous
	Since at least AIX behaves for CC_r/xlC_r as it does for cc_r/xlc_r and so on,
	use the same logic for CXX <-> PTHREAD_CXX as provided for CC <-> PTHREAD_CC
	to avoid code & issue duplication.

2021-02-19  Paul Wise  <pabs3@bonedaddy.net>

	AX_PYTHON: add newer versions of Python
	Python 3.8 was released on 2019-10-14.
	Python 3.9 alpha 1 was released on 2019-11-19.

2021-02-18  Peter Simons  <simons@cryp.to>

	Merge pull request #222 from bircoph/master
	AX_BOOST_BASE: add e2k to the list of lib64 architectures

	Merge pull request #220 from chyla/robot
	add ax_prog_robot.m4

	Merge pull request #219 from CheyenneWills/fallthrough-fix
	ax_gcc_func_attribute.m4: test fails for the fallthrough attribute with clang

	Merge pull request #218 from jicama/master
	ax_cxx_compile_stdcxx.m4: Restore check for default C++ version support

	Merge pull request #217 from rrthomas/ax_cpu_vendor-cache-fix
	ax_cpu_vendor: rename output variable to prevent autoconf warnings

2020-07-14  Michael Shigorin  <mike@altlinux.org>

	AX_BOOST_BASE: add e2k to the list of lib64 architectures

2020-06-02  Adam Chyła  <adam@chyla.org>

	update serial

	fix malformed license section

	remove non ascii characters

	add ax_prog_robot.m4

2020-05-20  Cheyenne Wills  <cheyenne.wills@gmail.com>

	ax_gcc_func_attribute.m4: test fails for the fallthrough attribute with clang
	The test for the fallthrough attribute fails due to other compiler
	warnings when using clang.  The following warnings are generated:

	   warning: no case matching constant switch condition '0'
	   warning: control reaches end of non-void function [-Wreturn-type]

	Because of these additional warnings, the test always results in a
	failure for the fallthrough attribute.

	Update ax_gcc_func_attribute.m4 to eliminate the warnings that are
	masking the test for the fallthrough attribute.

	Note, tested the entire suite of attribute tests using clang and only
	the fallthrough test contained warnings that caused the test to fail.

2020-05-15  Jason Merrill  <jason@redhat.com>

	ax_cxx_compile_stdcxx.m4: Restore check for default C++ version support
	Commit bbb60ca79952c20ee0b187208533d98206b156d1 removed this check because
	it can't support the user requesting noext.  But if the user didn't specify
	ext or noext, using the default mode should be fine.  So this patch restores
	the check if the second argument is empty.

2020-04-18  Reuben Thomas  <rrt@sc3d.org>

	ax_cpu_vendor: rename output variable to prevent autoconf warnings
	The current version of AX_CPU_VENDOR causes autoconf 2.69 to give the
	warning:

	  AC_CACHE_VAL(ax_cpu_vendor, ...): suspicious cache-id, must contain _cv_ to be cached

	Hence, rename ax_cpu_vendor to ax_cv_cpu_vendor.

2020-04-18  Reuben Thomas  <rrt@sc3d.org>

	ax_subdirs_configure.m4: update to make cache files for subdirs work better

2020-03-13  Pau Espin Pedrol  <pespin@sysmocom.de>

	m4/ax_boost_base.m4: Fix debian multiarch_libsubdir path for arch armv7l
	Without this patch, building on an RPI4 ends up with
	BOOST_LDFLAGS=-L/usr/lib while libs are actually under
	/usr/lib/arm-linux-gnueabihf, and configure will later file during
	AX_BOOST_THREAD macro.

2020-03-13  Peter Simons  <simons@cryp.to>

	ax_gcc_func_attribute: fix serial number

	Merge pull request #215 from chenming1986/gcc-attr
	ax_gcc_func_attribute: Revise the detection of unknown attributes

	Merge pull request #207 from jannick0/ax_prog_cc_for_build
	ax_prog_cc_for_build.m4: bug fixes

2020-03-02  Ming Chen  <ming.chen1986@gmail.com>

	ax_gcc_func_attribute: Revise the detection of unknown attributes
	GCC outputs a warning when Wstrict-prototypes is on, in such case the
	attribute detection always fails even if the attribute is actually
	supported. This change checks for the "-Wattributes" warning in
	conftest.err instead of the existence of the file.

2020-02-08  Jannick  <thirdedition@gmx.net>

	ax_prog_cc_for_build.m4: bump serial to 18 (from 9)

	ax_prog_cc_for_build.m4: add call for AC_CANONICAL_BUILD

2020-02-08  Jannick  <thirdedition@gmx.net>

	ax_prog_cc_for_build.m4: use AC_LANG_PUSH([C]) and AC_LANG_POP([C])
	AC_LANG_PUSH([C]) makes sure that the global configure variables (like
	ac_ext, ac_cpp, ac_compile, ac_link, ac_compiler_gnu) required by the internal
	compile and link functions are defined for the C language for the BUILD
	system.  AC_LANG_POP([C]) ensures that the current language before calling
	AX_PROG_CC_FOR_BUILD is restored.

	AC_LANG_PUSH and AC_LANG_POP are preferable over manually defining the
	global ac_... language-related variables (incl. temporary SAVE variables).

	NOTE that any changes to the set of global variables, language specific variables
	(as defined by AC_LANG_PUSH([C]) and AC_LANG_POP([C])) shall be reflected
	in the pushdef/popdef blocks.

2020-02-08  Jannick  <thirdedition@gmx.net>

	ax_prog_cc_for_build.m4: bug fix - determine EXEEXT and OBJEXT for BUILD
	Prior to this commit, the variables ac_exeext and ac_objext remain undefined,
	however they are announced to be passed on to Makefile via the variables
	BUILD_EXEEXT and BUILD_OBJEXT.  For defining the former call the macros
	_AC_COMPILER_EXEEXT and _AC_COMPILER_OBJEXT using the BUILD compiler.

	NOTE: This commit makes use of the **internal** macros _AC_COMPILER_EXEEXT
	and _AC_COMPILER_OBJEXT, which, as of now, appears to be OK if EXEEXT and
	OBJEXT for the BUILD compiler should be determined with AX_PROG_CC_FOR_BUILD.

2020-02-08  Jannick  <thirdedition@gmx.net>

	ax_prog_cc_for_build.m4: bug fix - prevent using HOST cache values
	ax_prog_cc_for_build.m4: push&pop the following variables for BUILD
	which prevents using the HOST cache values:
	- ac_cv_prog_cc_c89
	- am_cv_prog_cc_c_o
	- am_cv_CC_dependencies_compiler_type

2020-02-08  Jannick  <thirdedition@gmx.net>

	ax_prog_cc_for_build.m4: bug fix - run tests with BUILD compiler
	Tested with autoconf 2.69: This is to fix that the compilation tests for
	BUILD use the HOST compiler, regardless of configure's --build flag.

	The compilation test functions in the configure script (like
	'ac_fn_c_try_compile' and 'ac_fn_c_try_cpp') use the global variables
	ac_ext, ac_cpp, ac_compile and ac_link.  Thus, the push&pop technique
	applied prior to this commit implies that the BUILD compilation test
	are run with the HOST compiler.
	Use an old-fashioned variable-save-technique.

2020-02-08  Jannick  <thirdedition@gmx.net>

	ax_prog_cc_for_build.m4: bug fix - honor configure's --build flag
	Prior to this commit, ./configure --build=BUILD is currently ignored, such
	that gcc found first on PATH is detected for BUILD, regardless of what
	was set in the parameter --build.

	This commit fixes this bug and allows to pass a BUILD platform triplet to
	configure which is different from gcc found first on PATH.

	* ax_prog_cc_for_build.m4:
	- use ac_build_tool_prefix defined to the first non-void variable of
	  'build' and 'build_alias' (push and pop).  Note that if configure is not
	  called with --build=BUILD, gcc first found on PATH is used for BUILD.

2020-02-08  Jannick  <thirdedition@gmx.net>

	ax_prog_cc_for_build.m4: add 'GCC_FOR_BUILD' as given in documentation

	ax_prog_cc_for_build.m4: remove reference to obsolete macro 'AC_EXEEXT'
	Cf. https://www.gnu.org/software/autoconf/manual/autoconf-2.69/html_node/Obsolete-Macros.html

2020-02-07  Peter Simons  <simons@cryp.to>

	Merge pull request #204 from cr-marcstevens/master
	Fix ax_pthread.m4: try to include -lpthread in PTHREAD_LIBS for GCC & Clang since automatic usage is not guaranteed

	Merge pull request #208 from rurban/fortify
	ax_add_fortify_source.m4: improve for -Wcpp

2020-01-26  Peter Kokot  <peterkokot@gmail.com>

	Merge pull request #210 from lpsinger/ax_gcc_builtin-cpu_supports
	Add __builtin_cpu_supports and friends to AX_GCC_BUILTIN

	Merge pull request #205 from simark/epoll
	ax_have_epoll: avoid -Wunused-but-set-variable errors

	Merge pull request #211 from icota/2019-12-android-boost-thread
	ax_boost_thread: do not set -pthread on Android

2020-01-06  Peter Kokot  <peterkokot@gmail.com>

	Merge pull request #212 from kvilhaugsvik/sqlite3
	ax_lib_sqlite3: fix "unary operator expected"

	Merge pull request #203 from Sjors/2019/11/want_boost_process
	Use want_boost_process instead of want_boost

	Merge pull request #213 from LocutusOfBorg/fix-boost
	ax_boost_python.m4: fix missing "-l" parameter, resulting into a link…

2020-01-03  Gianfranco Costamagna  <costamagnagianfranco@yahoo.it>

	ax_boost_python.m4: fix missing "-l" parameter, resulting into a link failure when used.
	configuring a project with something like:
	--with-boost-libdir=/usr/lib/$(DEB_HOST_MULTIARCH) --with-boost-python='boost_python3.7'

	tanslates the build into a "boost_python37" link line

	checking whether boost_python37 is the correct library... yes

	/bin/bash ../libtool  --tag=CXX   --mode=link mpicxx  -Wall -g -O2 -fdebug-prefix-map=/<<PKGBUILDDIR>>=. -fstack-protector-strong -Wformat -Werror=format-security -release 2.3.4  -L/usr/lib/i386-linux-gnu -lboost_system -lpython3.7m -Wl,-z,relro -Wl,-z,now -o libFoundation.la -rpath /usr/lib/i386-linux-gnu libFoundation_la-console.lo libFoundation_la-Counter.lo libFoundation_la-Matrix3.lo libFoundation_la-Quaternion.lo libFoundation_la-vec3.lo libFoundation_la-Timer.lo libFoundation_la-StringUtil.lo libFoundation_la-realdist.lo libFoundation_la-PathSearcher.lo libFoundation_la-Runnable.lo libFoundation_la-PathUtil.lo libFoundation_la-Rng.lo libFoundation_la-BoundingSphere.lo libFoundation_la-BoundingBox.lo libFoundation_la-cube_eq.lo -lboost_filesystem boost_python37 -lpython3.7m -lmpi++ -lmpi

	note the missing "-l" on python, while it is there for the filesystem link.

2020-01-03  Sveinung Kvilhaugsvik  <sveinung84@users.sourceforge.net>

	ax_lib_sqlite3: fix "unary operator expected"

2019-12-31  Igor Cota  <igor@codexapertus.com>

	ax_boost_thread: do not set -pthread on Android
	The android libc, bionic, provides built-in support for pthreads, so no additional linking is necessary.
	Leaving -pthread breaks the build, see protocolbuffers/protobuf#1373

2019-12-29  Leo Singer  <leo.singer@ligo.org>

	Add __builtin_cpu_supports and friends to AX_GCC_BUILTIN
	Add x86 builtins related to cpuid support to AX_GCC_BUILTIN.

2019-12-25  Reini Urban  <rurban@cpan.org>

	ax_add_fortify_source.m4: improve for -Wcpp
	gcc-9 warns when -O is not enabled.

	fix AX_ADD_FORTIFY_SOURCE for msys2
	msys2 just dropped _FORTIFY_SOURCE support.
	See https://github.com/msys2/MINGW-packages/issues/5803
	Try to actually link it.

2019-11-28  Simon Marchi  <simon.marchi@efficios.com>

	ax_have_epoll: avoid -Wunused-but-set-variable errors
	When building with -Werror -Wunused-but-set-variable, the code snippets
	in this file generate a warning, causing the test to spuriously fail.
	Remove the "rc" variables, since they're not used.

	Sample config.log output:

	    configure:22489: checking for Linux epoll(7) interface
	    configure:22515: ccache gcc -o conftest -g3 -O0 -Wall -Werror -Wextra -Wno-type-limits -Wno-missing-declarations -Wno-missing-field-initializers -Wno-si      gn-compare -Wno-implicit-fallthrough -Wno-unused-parameter -I/home/smarchi/install/include -DHAVE_LINUX_VERSION_H -L/home/smarchi/install/lib conftest.c       -lurcu-cds  >&5
	    conftest.c: In function 'main':
	    conftest.c:184:9: error: variable 'rc' set but not used [-Werror=unused-but-set-variable]
	     int fd, rc;
	             ^~
	    cc1: all warnings being treated as errors

2019-11-26  cr-marcstevens  <github@marc-stevens.nl>

	Note that for GCC and Clang -pthread generally implies -lpthread, except when -nostdlib is passed. This is problematic using libtool to build C++ shared libraries with pthread: [1] https://gcc.gnu.org/bugzilla/show_bug.cgi?id=25460 [2] https://bugzilla.redhat.com/show_bug.cgi?id=661333 [3] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=468555 To solve this, first try -pthread together with -lpthread for GCC and Clang.
	Changes:
	- added support for combination "cflags,ldflags" style option to try
	- check for Clang early
	- for GCC and Clang try "-pthread,-lpthread" first, followed by original options (-pthread, etc.)
	- Perform check for Clang flag to suppress warning when linking with -pthread later
	- removed line "ax_pthread_clang_warning=0" (unused)

2019-11-11  Sjors Provoost  <sjors@sprovoost.nl>

	Use want_boost_process instead of want_boost

2019-11-05  Sjors Provoost  <sjors@sprovoost.nl>
	    Luke Dashjr  <luke-jr+git@utopios.org>

	Add ax_boost_process

2019-10-23  Reini Urban  <rurban@cpan.org>

	add AX_GCC_FUNC_ATTRIBUTE(gnu_format)
	newer gcc warns about function might be a candidate for
	gnu_printf format attribute [-Wsuggest-attribute=format]

	Usage: AX_GCC_FUNC_ATTRIBUTE(gnu_format)
	and:
	  #ifdef HAVE_FUNC_ATTRIBUTE_GNU_FORMAT
	    __attribute__ ((format (gnu_printf, 1, 2)))
	  #elif HAVE_FUNC_ATTRIBUTE_FORMAT
	    __attribute__ ((format (printf, 1, 2)))
	  #endif

2019-10-03  Simon Marchi  <simon.marchi@efficios.com>

	ax_pthread.m4: avoid unused-but-set-parameter warning
	With gcc's warning -Wunused-but-set-parameter enabled (which is enabled
	with -Wextra) and -Werror, configuring with the AX_PTHREAD macro fails
	with:

	    configure:6783: checking whether pthreads work with -pthread
	    configure:6877: ccache gcc -o conftest -g3 -O0 -Werror -Wall -Wextra  -fmax-errors=1 -fdiagnostics-color=always -Wall -DGLIB_VERSION_MAX_ALLOWED=GLIB_VERSION_2_22 -pthread   conftest.c   >&5
	    conftest.c: In function 'routine':
	    conftest.c:37:51: error: parameter 'a' set but not used [-Werror=unused-but-set-parameter]
	                             static void routine(void *a) { a = 0; }
	                                                       ^
	    cc1: all warnings being treated as errors

	Change the code to make it use, not only set, the parameter.

2019-09-13  fanquake  <fanquake@gmail.com>

	Improve Boost library error messages

2019-09-05  Henrik Bengtsson  <hb@aroma-project.org>

	BUG FIX: Fixing a _R_CHECK_LENGTH_1_CONDITION_=true bug
	If a package exists, the test for its existence produces an error with _R_CHECK_LENGTH_1_CONDITION_=true (introduced in R 3.4.0), e.g.

	$ _R_CHECK_LENGTH_1_CONDITION_=true R --silent --vanilla -e 'if(is.na(packageDescription("BH"))) stop("not found")'
	> if(is.na(packageDescription("BH"))) stop("not found")
	Error in if (is.na(packageDescription("BH"))) stop("not found") :
	  the condition has length > 1
	Execution halted

	This is because 'is.na(packageDescription("BH"))' resolved to a logical vector of 15(!) FALSE values when package 'BH' is installed.  If it is not installed, then it resolves to TRUE.

	Bumping 'serial' (because that's what other PRs do)

2019-08-31  Quang Vu  <vhquang@gmail.com>

	ax_check_openssl: improve message for openssl lookup

2019-07-17  Geoffrey M Oxberry  <goxberry@gmail.com>

	ax_lapack: add dylib glob to with_lapack
	Prior to this commit, the `with_lapack` case statement checked for
	dynamic libraries with `.so` suffixes (used on *nix operating
	systems), but did not check for dynamic libraries with `.dylib`
	suffixes (used on macOS operating systems). This commit adds globs to
	the `with_lapack` case statement that check for macOS shared libraries
	using `.dylib` suffixes.

	ax_blas: add macOS shared lib globs to with_blas
	Prior to this commit, the `with_blas` case statement checked for
	dynamic libraries with `.so` suffixes (used on *nix operating
	systems), but did not check for dynamic libraries with `.dylib`
	suffixes (used on macOS operating systems). This commit adds globs to
	the `with_blas` case statement that check for macOS shared libraries
	using `.dylib` suffixes.

2019-07-14  Wang Xuerui  <git@xen0n.name>

	ax_boost_base: fix incomplete coverage of MIPS64 systems
	The previous patch was based on an outdated version of the macro, taken
	from nghttp2, that switched on `uname -m` instead of canonicalized host
	arch.  Fix the switch arm so that all MIPS64 regardless of endianness
	and ISA level (like `mipsisa64r6el`) are correctly matched.

2019-07-13  Wang Xuerui  <git@xen0n.name>

	ax_boost_base: fix libsubdirs preference for MIPS64
	Currently there're 3 well-known ABIs in use on MIPS64 systems, with
	the respective libdir as follows:

	* n64: `lib64`,
	* n32: `lib32`,
	* o32: `lib`.

	Probe all three of them.

2019-05-24  Reuben Thomas  <rrt@sc3d.org>

	ax_cc_maxopt.m4: retain setting of CFLAGS by configure
	AX_CC_MAXOPT checks whether CFLAGS was set by the user; if so, the user’s
	setting is respected. This behavior is retained, of course.

	However, AX_CC_MAXOPT was then setting CFLAGS="". This overrode the default
	setting by configure, which usually includes -g. Hence, if CFLAGS was not
	set by the user, retain the default setting, to preserve the ability to
	debug.

	A typical default setting from configure is "-g -O2". This means that
	AX_CC_MAXOPT might typically set CFLAGS to "-g -O2 -O3". This is fine,
	because the later -O3 will override the earlier -O2. (The only assumption is
	that all compilers that AX_CC_MAXOPT knows behave in this sane way.)

2019-05-22  Cedric Cellier  <rixed@happyleptic.org>

	ax_have_qt: workaround qmake bug when building out of tree
	Makefile generated by qmake include paths relative to the build
	directory that is assumed to be current.

2019-05-17  Peter Simons  <simons@cryp.to>

	ax_int128: add canonic formatting for the HTML renderer

2019-05-16  Reuben Thomas  <rrt@sc3d.org>

	ax_int128.m4: new macro AX_HAVE_INT128

2019-04-26  Ralf Habacker  <ralf.habacker@freenet.de>

	ax_have_qt.m4: Fix not getting variables from the generated Makefile on Windows
	Under Windows, the generated Makefile does not contain the required
	information by default, because it is contained in other Makefiles
	for the Release and Debug build variants. It is therefore necessary
	to use only one build variant.

2019-04-23  Jannick  <thirdedition@gmx.net>

	ax_tls.m4: Fix bug and update macros
	- replace obsolete AC_TRY_COMPILE with AC_COMPILE_IFELSE
	- fix bug of empty else branch in shell code when 2nd argument empty
	- Increase serial number from 14 to 15.
	- If second argument to macro AX_TLS is empty or null, the else branch
	  of the generated shell code was empty and caused a shell error. Fix
	  this bug by typing the null statement ':' in this case.
	- Same if first macro argument is null.
	- Add comma in AC_DEFINE description.

2019-03-02  Mischa Spiegelmock  <mischa@mvstg.biz>

	find the resource compiler for Qt5 as well

2019-03-01  Enji Cooper  <yaneurabeya@gmail.com>

	Unbreak testing for `-std=c++11` with `clang++` with `-Werror -Wnon-virtual-dtor`
	Earlier autoconf tests in the [Kyua project](https://github.com/jmmv/kyua)
	enable `-Werror -Wnon-virtual-dtor`, which fails because of the fact that
	the `Base` and `Derived` classes have non-virtual destructors with
	virtual methods. Thus, add a set of virtual destructors for both `Base` and
	`Derived` to quell the error and have `clang++` be properly detected as a
	C++-11 capable compiler.

	Bump serial and add name to copyright for the change.

	Tested with:
	- clang++ 7.0.1
	- g++ 8.2.0

2019-02-18  Reuben Thomas  <rrt@sc3d.org>

	ax_c_arithmetic_rshift.m4: add required call to AC_LANG_SOURCE

2019-02-14  Peter Simons  <simons@cryp.to>

	AX_COMPILER_VENDOR: fix comment formatting

2019-02-14  John Zaitseff  <J.Zaitseff@zap.org.au>

	ax_compiler_vendor.m4: Correct the detection of the IBM compiler

	ax_compiler_vendor.m4: Bump version number and copyright year

	ax_compiler_vendor.m4: Clarify why some compilers are listed early

	ax_compiler_vendor.m4: Make copyright lines consistent with other M4 files

	ax_compiler_vendor.m4: Add detection of the NEC SX compiler

	ax_compiler_vendor.m4: Update macro documentation to mention Fortran

	ax_compiler_vendor.m4: Reformat the macro for readability

	ax_compiler_vendor.m4: Make preprocessor directives start in column 1
	Some compilers require preprocessor directives to start in the first
	column, particularly the Portland PGI Fortran compilers.

	ax_compiler_vendor.m4: Enable detection of the Sun Fortran compilers

	ax_compiler_vendor.m4: Rearrange the Portland PGI compiler detection order
	Although the Portland PGI 18.3 pgcc C compiler is detected correctly, the
	pgc++ C++ compiler is misidentified as gnu: pgc++ obviously defines
	__GNUC__ as well as __PGI, although pgcc does not.

	ax_compiler_vendor.m4: Bug fix: remove superfluous space

2019-02-14  Peter Simons  <simons@cryp.to>

	Trivial cosmetic to make the generator happy.

2019-02-14  John Zaitseff  <J.Zaitseff@zap.org.au>

	ax_cflags_warn_all.m4: Avoid prepending empty flags

2019-02-14  John Zaitseff  <J.Zaitseff@zap.org.au>

	ax_cflags_warn_all.m4: Prepend flags instead of appending them
	With many compilers (such as the Intel C compilers), flags specified
	later in the command line override those specified earlier.
	Unfortunately, this means that the user can no longer specify
	warning-related options on the command line.  This patch fixes this issue
	by using AX_PREPEND_FLAG.

	In particular, this patch allows the user to specify "CFLAGS=-w3" on the
	./configure command line for the Intel C compiler, which will no longer
	be overridden by this macro's "-w2" option.

2019-02-14  John Zaitseff  <J.Zaitseff@zap.org.au>

	ax_prepend_flag.m4: New macro AX_PREPEND_FLAG
	The AX_PREPEND_FLAG macro adds a flag to the front of a flags shell
	variable, similar to how AX_APPEND_FLAG adds such flags to the end.  It
	should be used when adding compiler options that are position dependent:
	where those options that were previously defined (such as by the user on
	the command line) should override thoses added with AX_PREPEND_FLAG.

	ax_cflags_warn_all.m4: Bug fix: modern Intel compilers don't accept "-warn all"

	ax_cflags_warn_all.m4: Bug fix: the PGI compilers do not understand "-Wall"

	ax_cflags_warn_all.m4: Rewrite the documentation to provide greater clarity

	ax_cflags_warn_all.m4: Nicely indent remaining macros

2019-02-14  John Zaitseff  <J.Zaitseff@zap.org.au>

	ax_cflags_warn_all.m4: Rewrite AX_FLAGS_WARN_ALL to use AX_COMPILER_VENDOR
	Using AX_COMPILER_VENDOR allows significantly more robust selection of
	appropriate compiler flags.  In the old code, for example, the Sun
	(Oracle) Compiler Suite would accept Intel's "-warn all" detection, with
	rather disastrous results.

	All current compiler flags are incorporated into the new code without
	modification.

2019-02-14  John Zaitseff  <J.Zaitseff@zap.org.au>

	ax_cflags_warn_all.m4: Bump version number and add new copyright holder

2019-02-14  Peter Simons  <simons@cryp.to>

	AX_PTHREAD: avoid a -Wunused-variable warning on PTHREAD_PRIO_INHERIT
	The PTHREAD_PRIO_INHERIT check can trigger a -Wunused-variable warning, which
	can be turned into an error when -Werror is used, with the consequence that
	PTHREAD_PRIO_INHERIT appears to be missing.

	Suggested by Vincent Lefèvre in https://savannah.gnu.org/patch/?9750.

2019-02-07  Philip Withnall  <withnall@endlessm.com>

	ax_code_coverage: Fix a recursive variable definition

2019-02-05  Ossama Othman  <ossama.othman@intel.com>

	ax_is_release: Support git worktrees.
	Detect git worktrees in the git-directory case.  Git worktrees contain
	a `.git' file rather than a directory.

2019-01-25  Jonas Witschel  <diabonas@gmx.de>

	ax_code_coverage: fix self-referencing variable error in distcheck

2019-01-23  Ignacy Gawędzki  <ignacy.gawedzki@green-communications.fr>

	ax_check_gnu_make: Fix setting of ifGNUmake and ifnGNUmake.
	The addition of support for ifnGNUmake introduced a bug that made
	ifGNUmake be set to "#" in the case GNU Make is detected.

2019-01-23  Christian Feld  <c.feld@fz-juelich.de>

	Identify xlc from version 16 on as `ibm` and not as `clang`.
	xlc from version 16 on does neither define __xlc__, __xlC__, __IBMC__, nor
	__IBMCPP__ by default. Thus, it does not identify as vendor ibm but as clang.
	It does define __ibmxl__, though. Adding this macro to the list of ibm macros
	identifies xlc as ibm again.

	Closes https://github.com/autoconf-archive/autoconf-archive/pull/179.

2018-12-29  Reini Urban  <rurban@cpan.org>

	AX_ASM_INLINE: accept asm also

2018-11-14  Ossama Othman  <ossama.othman@intel.com>

	ax_check_enable_debug: Correct NDEBUG regression.
	Reintroduce change (6e6c447) that addressed NDEBUG redefinition when
	using both the AX_CODE_COVERAGE and AX_CHECK_ENABLE_DEBUG macros.  It
	was lost in the previous patch to ax_check_enable_debug.m4 (d049eeb).

2018-10-30  Ossama Othman  <ossama.othman@intel.com>

	Fix AX_CODE_COVERAGE 'distclean' related comments
	The local Automake distclean target is distclean-local, not
	dist-clean-local.  Update the AX_CODE_COVERAGE macro documentation,
	accordingly.

2018-10-19  Peter Simons  <simons@cryp.to>

	AX_SWIG_ENABLE_CXX: don't set $SWIG unless it was actually detected
	Suggested-by: Christian Ferrari <camauz@yahoo.com>

2018-08-25  Daniel Black  <daniel@linux.ibm.com>

	ax_gcc_archflag: include POWER7 -> POWER10
	POWER6 is missing - couldn't find hardware to test (and it was
	a long time ago).

	Tested on P7 - P9.

	Added POWER10 as its in development and unlikely to change.

	Closes https://github.com/autoconf-archive/autoconf-archive/pull/175.

2018-08-05  Peter Simons  <simons@cryp.to>

	Merge pull request #173 from petk/patch-ac-help-string
	Replace obsolete AC_HELP_STRING with AS_HELP_STRING

2018-08-05  Maximilian Heinzler  <m.heinzler@heinzler.de>

	Fix doxygen error message
	Show the actual unsatisfied dependency instead of repeating the currently tested feature.

2018-07-31  Peter Kokot  <peterkokot@gmail.com>

	Replace obsolete AC_HELP_STRING with AS_HELP_STRING
	Autoconf made several macros obsolete including AC_HELP_STRING somewhere
	in 2003 in Autoconf 2.59 version. Macro should be replaced with
	AS_HELP_STRING.

2018-07-29  Peter Kokot  <peterkokot@gmail.com>

	Merge pull request #170 from petk/patch-ac-compile-1
	Replace AC_TRY_COMPILE and AC_LANG_

2018-07-28  Peter Kokot  <peterkokot@gmail.com>

	Merge pull request #171 from petk/patch-ac-compile-2
	Replace obsolete AC_TRY_COMPILE with AC_COMPILE_IFELSE

	Fix typos

2018-07-27  Peter Kokot  <peterkokot@gmail.com>

	Replace obsolete AC_TRY_COMPILE with AC_COMPILE_IFELSE
	Autoconf made several macros obsolete including the AC_TRY_COMPILE in
	2000 and since Autoconf 2.50:
	http://git.savannah.gnu.org/cgit/autoconf.git/tree/ChangeLog.2

	These macros should be replaced with the current AC_COMPILE_IFELSE
	instead.

	Refs:
	- https://www.gnu.org/software/autoconf/manual/autoconf-2.69/html_node/Obsolete-Macros.html
	- https://www.gnu.org/software/autoconf/manual/autoconf-2.69/html_node/AC_005fACT_005fIFELSE-vs-AC_005fTRY_005fACT.html

2018-07-26  Peter Kokot  <peterkokot@gmail.com>

	Replace AC_TRY_COMPILE and AC_LANG_
	Autoconf 2.50 in 2001 made several macros obsolete. These include macros
	for temporary changing the language - AC_LANG_SAVE, AC_LANG_CPLUSPLUS,
	AC_LANG_C, and AC_LANG_RESTORE. Instead of these the AC_LANG_PUSH and
	AC_LANG_POP macros should be used with later Autoconf versions.

	AC_TRY_COMPILE macros should be replaced with AC_COMPILE_IFELSE.

	Refs:
	- http://git.savannah.gnu.org/cgit/autoconf.git/tree/NEWS
	- https://www.gnu.org/software/autoconf/manual/autoconf-2.69/html_node/Language-Choice.html
	- https://www.gnu.org/software/autoconf/manual/autoconf-2.69/html_node/Obsolete-Macros.html

2018-07-26  Peter Kokot  <peterkokot@gmail.com>

	Replace AC_TRY_LINK and AC_LANG_
	Autoconf 2.50 in 2001 made several macros obsolete. These include macros
	for temporary changing the language - AC_LANG_SAVE, AC_LANG_CPLUSPLUS,
	and AC_LANG_RESTORE. Instead of these the AC_LANG_PUSH and
	AC_LANG_POP macros should be used with later Autoconf versions.

	AC_TRY_LINK macros should be replaced with AC_LINK_IFELSE and
	AC_LANG_PROGRAM.

	Refs:
	- http://git.savannah.gnu.org/cgit/autoconf.git/tree/NEWS
	- https://www.gnu.org/software/autoconf/manual/autoconf-2.69/html_node/Language-Choice.html
	- https://www.gnu.org/software/autoconf/manual/autoconf-2.69/html_node/Obsolete-Macros.html

2018-07-25  Peter Simons  <simons@cryp.to>

	Merge pull request #164 from gdraheim/all-permissive
	all-permissive for macros from Guido Draheim / Maarten Bosmans

	Merge pull request #167 from petk/patch-ac-try-link
	Replace obsolete AC_TRY_LINK macros with AC_LINK_IFELSE

2018-07-24  Peter Kokot  <peterkokot@gmail.com>

	Replace obsolete AC_TRY_LINK_FUNCTION macros
	Autoconf 2.50 introduced new macros in favor of the AC_TRY_FOO. Since
	Autoconf 2.55 the AC_TRY_LINK_FUNC macro has been additionally marked
	as obsolete and suggested to be replaced with AC_LINK_IFELSE and
	AC_LANG_CALL.

	Refs:
	- http://git.savannah.gnu.org/cgit/autoconf.git/tree/NEWS
	- https://www.gnu.org/software/autoconf/manual/autoconf-2.69/html_node/Obsolete-Macros.html

2018-07-24  Peter Kokot  <peterkokot@gmail.com>

	Replace obsolete AC_TRY_LINK macros with AC_LINK_IFELSE
	Autoconf 2.50 (released in 2001) made several macros obsolete including
	the AC_TRY_LINK which should now be replaced with the AC_LINK_IFELSE.

	Refs:
	- https://www.gnu.org/software/autoconf/manual/autoconf-2.69/html_node/AC_005fACT_005fIFELSE-vs-AC_005fTRY_005fACT.html
	- https://www.gnu.org/software/autoconf/manual/autoconf-2.69/html_node/Obsolete-Macros.html

2018-07-23  Peter Kokot  <peterkokot@gmail.com>

	Replace obsolete AC_TRY_CPP with AC_PREPROC_IFELSE
	The AC_TRY_CPP macro has been made obsolete in Autoconf 2.50 which was
	released in 2001. It should be replaced with AC_PREPROC_IFELSE macro.

	Refs:
	- https://www.gnu.org/software/autoconf/manual/autoconf-2.69/html_node/AC_005fACT_005fIFELSE-vs-AC_005fTRY_005fACT.html
	- https://www.gnu.org/software/autoconf/manual/autoconf-2.69/html_node/Running-the-Preprocessor.html

2018-07-23  Peter Kokot  <peterkokot@gmail.com>

	Replace obsolete AC_TRY_RUN with AC_RUN_IFELSE
	Autoconf made several macros obsolete including the AC_TRY_RUN and in
	2000 and since Autoconf 2.50:
	http://git.savannah.gnu.org/cgit/autoconf.git/tree/ChangeLog.2

	These macros should be replaced with the current AC_RUN_IFELSE instead.

	This patch was created with the help of the autoupdate script.

	Reference docs:
	- https://www.gnu.org/software/autoconf/manual/autoconf-2.69/html_node/Obsolete-Macros.html
	- https://www.gnu.org/software/autoconf/manual/autoconf-2.59/autoconf.pdf

2018-07-22  Guido Draheim  <guidod@gmx.de>

	all-permissive for macros from Guido Draheim / Maarten Bosmans

	all-permissive for macros from Guido Draheim / Maarten Bosmans

	all-permissive for macros from Guido Draheim / Maarten Bosmans

	all-permissive for macros from Guido Draheim / Maarten Bosmans

	all-permissive for macros from Guido Draheim / Maarten Bosmans

2018-07-21  Guido Draheim  <guidod@gmx.de>

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

	all-permissive for macros from Guido Draheim (only author)

2018-07-16  Wolfgang Stöggl  <c72578@yahoo.de>

	AX_BOOST_BASE: add powerpc64 powerpc64le to archs
	- Add further possibilities for values of $host_cpu.
	  This fixes issues in distros like Fedora, where
	  $host_cpu is powerpc64 for ppc64 and powerpc64le for ppc64le

	Closes https://github.com/autoconf-archive/autoconf-archive/pull/162.

2018-06-30  Stefan Weil  <sw@weilnetz.de>

	AX_CHECK_COMPILE_FLAG: released under all-permissive license
	Replace GPL3 + Autoconf exception by all-permissive license.

	See discussion at https://github.com/tesseract-ocr/tesseract/pull/1559.

2018-06-30  Stefan Weil  <sw@weilnetz.de>

	Fix typos found by codespell

2018-06-08  Will Thompson  <will@willthompson.co.uk>

	ax_compiler_flags_cflags: fix disabling C-only warnings
	https://github.com/autoconf-archive/autoconf-archive/pull/147 introduced
	a regression where, because -Wdeclaration-after-statement etc. are
	appended to the compile flags after the user-supplied list of warnings
	to disable, it is impossible to disable these warnings.

2018-05-29  Carnë Draug  <carandraug+dev@gmail.com>

	ax_jni_include_dir.m4: require AC_CANONICAL_HOST to make host_os available

2018-05-21  Alexander Lakhin  <exclusion@gmail.com>

	ax_lib_postgresql: Double-quote the literal with square brackets

2018-05-05  Krzesimir Nowak  <qdlacz@gmail.com>

	Some cleanups in C++17 checking code
	There is a released version of clang that supports C++17, so drop all
	the ifdefs that made clang to skip some checks.

	Also, a __cplusplus macro is specified to expand to 201703L, so fix
	the check accordingly.

2018-04-21  Andreas Schwab  <schwab@suse.de>

	AX_BOOST_BASE: add riscv64 to the list of lib64 architectures

2018-04-19  Krzesimir Nowak  <krzesimir@kinvolk.io>

	ax_cxx_compile_stdcxx.m4: Drop the check for default C++ version support
	The problem with the check is that it can't detect whether the version
	is with extensions or not. So it can't take the "noext" or "ext"
	option into account.

	This may be a problem when an extended version of C++ has a feature
	that conflicts with another feature from the C++ standard and we have
	no way to tell the macro to add a "-std" flag anyway.

	An example:

	    using namespace std::complex_literals;
	    std::complex<double> c = 1.0;
	    c += 1.0i;
	    std::cout << "abs" << c << " = " << abs(c) << '\n';

	Here, the "1.0i" constant is either a GCC extension if compiled with
	-std=gnu++14 or a standard C++ operator if compiled with
	-std=c++14. If a GCC extension is used, the snippet fails to
	compile. Unfortunately, recent GCC versions default to gnu++14, so
	this code fails to compile by default.

	Dropping the check forces the macro to evaluate compiler flags with
	taking the "ext"/"noext" option into account.

	Issue spotted by Frédéric Mangano-Tarumi.

2018-03-23  Peter Hill  <zed.three@gmail.com>

	AX_LIB_HDF5: fix order of flags
	When iterating over flags from h5cc, the HDF5_{CPPFLAGS,LDFLAGS,LIBS}
	variables were assembled in reverse order. This causes problems when
	linking against static libraries

2018-03-20  Peter Simons  <simons@cryp.to>

	AX_CODE_COVERAGE: re-format header into canon layout

	Merge remote-tracking branch 'github/master'

2018-03-19  Bastien Roucariès  <bastien.roucaries+debian@gmail.com>

	Use non localised date for ax_am_macros
	Do not punk utf-8 in Makefile due to date

2018-03-18  Bastien Roucariès  <bastien.roucaries+debian@gmail.com>

	Force use of GNU make
	GNU make was required so check it use

	Do not use coverage rules outside topdir
	It was not supported so speed up rules

	Use AX_ADD_AM_MACRO_STATIC
	Avoid some error in case of no coverage included

	Expand enable/disable code coverage
	Try to simplify this file

2018-03-18  Terry Droeger  <terry.droeger@gmail.com>

	fix serial number for previous fix

	fix header file path and version check conditional

2018-03-14  Maximilian Heinzler  <m.heinzler@heinzler.de>

	Remove warning about C++17
	Now that C++17 has been standardized this warning can be removed.

2018-03-13  Peter Simons  <simons@cryp.to>

	AX_LIB_POSTGRESQL: re-format to canonic layout and fix serial number

	AX_COMPILER_VERSION: bump serial number

2018-03-13  Vasil Dimov  <vd@FreeBSD.org>

	fix checks for boost chrono and unit_test
	The two test programs could produce a compiler warnings (or errors if
	-Werror is engaged) about unused variables and fail the checks. It is
	better to have test programs that do not produce warnings.

	Closes https://github.com/peti/autoconf-archive/pull/148.

2018-03-13  Bastien Roucariès  <bastien.roucaries+debian@gmail.com>

	Robustify
	Check pkg-config return

2018-03-12  Bastien Roucariès  <bastien.roucaries+debian@gmail.com>

	Populate like pkgconfig the variables

	Use pkg-config for postgresql

	Add action found/not found to PostgreSQL

	Modernize ax_lib_postgresql
	Avoid a compilation failure on debian

2018-03-09  Bastien Roucariès  <bastien.roucaries+debian@gmail.com>

	Fix version extraction with old sdcc

	Support sdcc compiler

2018-02-13  Peter Simons  <simons@cryp.to>

	AX_DIST_RPM: various fixes
	- At some point macros was added to aminclude_static.am instead of
	  aminclude.am. Change description.

	- Inserted make conditional so rules don't mess around in subdirectories.
	  Putting .spec files here via dist-hook breaks rpmbuild.

	- Run gawk with LC_ALL=C to produce english dates in RPMChangeLog understood by
	  rpmbuild.

	- Escape $PLATFORM_SUFFIX so variable given at configure time is used instead
	  of env variable present at the time aclocal is run.

	- Change .i. to just .. in rpm target. i* was probably meant to match i386 but
	  does not match x86_64.

	If there is any suggestions to improving this just let me know. The check for
	being at the top-level makefile seems a bit ugly but I can't come up with a
	better solution. Checking for MAKELEVEL == 0 doesn't work.

2018-02-13  Ricardo Wurmus  <rekado@elephly.net>

	m4: Add AX_R_PACKAGE macro.
	* m4/ax_r_package.m4: New file.

2018-02-13  Kip Warner  <kip@thevertigo.com>

	ax_var_{push,pop}.m4 were both missing auxiliary macros found in the other...

2018-01-15  Reuben Thomas  <rrt@sc3d.org>

	ax_python.m4: improve documentation slightly
	Remove explicit, duplicate (and out-of-date!) mention of Python versions in
	the documentation at the top of the file.

2018-01-15  Peter Simons  <simons@cryp.to>

	Merge pull request #147 from rurban/cflags
	ax_compiler_flags_cflags: c++ fixes

2018-01-15  Reini Urban  <rurban@cpan.org>

	ax_compiler_flags_cflags: c++ fixes
	Several warning flags are incompatible with c++:
	-Wnested-externs -Wmissing-prototypes -Wstrict-prototypes -Wdeclaration-after-statement
	-Wold-style-definition -Wimplicit-function-declaration -Wjump-misses-init

2018-01-15  Reini Urban  <rurban@cpan.org>

	ax_compiler_flags_ldflags: harden
	Add -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack

	but not yet the brand-new textonly, retpolineplt linker flags. Let's wait
	what gcc decides on the flags for Spectre, clang went with retpolineplt.

2018-01-11  Peter Simons  <simons@cryp.to>

	Merge pull request #144 from akopytov/master
	AX_GCC_ARCHFLAG: update Broadwell CPUID patterns.

2018-01-10  Alexey Kopytov  <akopytov@gmail.com>

	AX_GCC_ARCHFLAG: update Broadwell CPUID patterns.
	Update Broadwell patterns in ax_gcc_archflag.m4 to match Intel
	documentation. Per "Intel® 64 and IA-32 Architectures Software
	Developer’s Manual", Vol. 4, Table 2-1 "CPUID Signature Values of
	DisplayFamily_DisplayModel" the following Family/Model combinations are
	possible for Broadwell CPUs:

	- 06_3DH
	- 06_47H
	- 06_4FH
	- 06_56H

	Before this patch only the first combination was recognized, with all
	other Broadwell models falling into the '*??6??:*:*:*' case
	corresponding to Core 2.

2018-01-10  Philip Chimento  <philip@endlessm.com>

	AX_PKG_CHECK_MODULES: Normalize whitespace in package lists
	It can make configure.ac files more readable to list the packages on
	separate lines. Strip the newlines and extra whitespace with
	m4_normalize.

2018-01-03  Bojan Nikolic  <bojan@bnikolic.co.uk>

	AX_BOOST_THREAD: correct bug in case statement for solaris and mingw32
	Closes https://github.com/peti/autoconf-archive/pull/142.

2017-11-29  Enrico M. Crisostomo  <enrico.m.crisostomo@gmail.com>

	Fix build errors

	Update file header

	Add ax_prog_date.m4
	This macro tries to determine the type of the date (1) command and some of
	its non-standard capabilities.

2017-11-24  Evgeny Lensky  <surfernsk@gmail.com>

	Fix check for system libraries in both lib64 and lib
	if host_cpu = [i?86] libsubdirs = "", but it is necessary libsubdirs = "lib"
	Invalid execution, superfluous comma.

2017-11-14  Harenome Ranaivoarivony-Razanajato  <ranaivoarivony-razanajato@hareno.me>

	AX_PROG_HELP2MAN: fix default behaviour
	This commit fixes the default behaviour of the AX_PROG_HELP2MAN macro
	when the input program list is empty. The new implementation correctly
	uses the $(PACKAGE_NAME) variable as the default target as opposed to
	the previous implementation which produced incorrect make rules.

2017-11-11  Corey Farrell  <git@cfware.com>

	AX_GCC_FUNC_ATTRIBUTE: Add support for 'sentinel' attribute.

2017-11-10  Werner Lemberg  <wl@gnu.org>

	s/illegal/invalid/

2017-10-05  Reini Urban  <rurban@cpan.org>

	AX_COMPILER_FLAGS: add new gcc flags
	-Wduplicated-cond since gcc 6
	-Wduplicated-branches since gcc 7
	-Wlogical-op since gcc 4.3
	-Wrestrict since gcc 7
	-Wnull-dereference since gcc 6
	-Wjump-misses-init since gcc 4.5
	-Wdouble-promotion since gcc 4.6

	See also https://kristerw.blogspot.de/2017/09/useful-gcc-warning-options-not-enabled.html

2017-09-28  Peter Simons  <simons@cryp.to>

	AX_SUBDIRS_CONFIGURE: cosmetic

2017-09-28  Peter Simons  <simons@cryp.to>

	AX_TLS: check for thread_local storage qualifier keyword
	The AX_TLS macro tests for thread local storage support. It checks a variety of
	non-standard extensions, but forgets to try the official C++11 keyword
	thread_local as well.

	Submitted via https://savannah.gnu.org/patch/?9424.

2017-09-28  Peter Simons  <simons@cryp.to>

	AX_CHECK_DEFINE: fix warning about unused variable
	If the compiler flags include -Werror=unused, compiling the test source in
	AX_CHECK_DEFINE fails with a compile error if the define exists, resulting in
	AX_CHECK_DEFINE assuming the define is not set.

	Submitted via https://savannah.gnu.org/patch/?9452.

2017-09-28  Stanislav Brabec  <sbrabec@suse.com>

	Add support for fallthrough in AX_GCC_FUNC_ATTRIBUTE
	If two case statements are not separated by break, new gcc issues
	warning. This warning can be suppressed by __attribute((fallthrough)).
	Add test for it.

2017-09-28  Reini Urban  <rurban@cpan.org>

	m4: update AX_ASM_INLINE
	to use AC_COMPILE_IFELSE

	m4: update AX_COMPILE_CHECK_SIZEOF
	replace obsolete AC_TRY_COMPILE with AC_COMPILE_IFELSE([AC_LANG_PROGRAM

2017-09-27  Dmitry Eremin-Solenikov  <dbaryshkov@gmail.com>

	ax_valgrind_check: support make 3.8x
	define smth = was introduced only in GNU Make 4.0. Use older form to
	support GNU Make 3.8x

	ax_valgrind_check: run check-valgrind recursively
	Switch check-valgrind and check-valgrind-$TOOL into recursive Automake
	targets. It is still required to put @VALGRIND_CHECK_RULES@ into each
	directory with tests, but it is now possible to run `make check-valgrind'
	from top-level directory.

2017-08-28  Max Satula  <maksym.satula@gmail.com>

	Fix AX_LIB_ORACLE_OCI macro for plain C
	1. Use C compiler, not C++.
	2. Split LDFLAGS into LDFLAGS and LIBS.
	   However, merge them back to ORACLE_OCI_LDFLAGS afterwards
	   to preserve interface backward compatibility.
	3. Replace C++ style comments with C style.

	Resolves mloskot/autotools-modules#2

2017-08-23  Olaf Mandel  <olaf@mandel.name>

	AX_OPEN62541_*: adapt to v0.2 of the open62541 lib
	 * The AX_OPEN62541_CHECK_H macro now uses a slightly different default
	   list of headers
	 * The AX_OPEN62541_PATH macro adds another directory to the include
	   path

2017-08-16  Peter Simons  <simons@cryp.to>

	AX_BOOST_BASE: fix revision number

	AX_CHECK_GL: fix revision number

	Merge remote-tracking branch 'github/master'

2017-08-16  Bastien Roucariès  <bastien.roucaries+debian@gmail.com>

	Use AS_IF ansd follow progress
	Simplify checking of path

2017-08-15  Bastien Roucariès  <bastien.roucaries+debian@gmail.com>

	Further simplification of ax_boost_base

	Factorize version expanding in libboost detection

	Factorize base program

	Simplify cpu detection by using canonical host

	Privatize ac_boost_lib_path

	Use private variable for ac_boost_path
	Do not cluter global name space

	Use helper function for boost
	Simplify the code path

	Use m4sh in ax_boost_base

2017-08-15  Helmut Grohne  <helmut@subdivi.de>

	Fix crossbuild for AX_BOOST_BASE
	gource fails to cross build from source for wicked reasons. It
	terminates with:

	| Could not link against -lGLU !

	But that is a red herring. GLU is found. It just happens that ax_lib
	contains something old. The problem here is that BOOSTLIBDIR ends up
	being empty. It is derived from BOOST_LDFLAGS e.g. in AX_BOOST_SYSTEM or
	AX_BOOST_FILESYSTEM. Those latter macros expect that BOOST_LDFLAGS
	contains a -L flag. That flag goes missing during cross compilation. In
	AC_BOOST_BASE, the variable "libsubdirs" is properly set up to contain
	the multiarch libdir of the host architecture first. However, it is only
	searched for native compilation. For Debian systems, removing the cross
	compiling guard would likely resolve the issue. I'm less sure that this
	is universally correct though. Maybe a good solution would be to split
	"libsubdirs" into the multiarch directory (which would always be
	searched) and the others, which would only be searched for native
	compilation. I am attaching a patch for this approach.

2017-08-15  Bastien Roucariès  <bastien.roucaries+debian@gmail.com>

	Do not forget to save LDFLAGS
	ax_check_gl forget to save LDFLAGS

	Thanks to  Jerome Benoit <calculus@rezozer.net>

	debian-bug; https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=848363

2017-08-15  Bastien Roucariès  <bastien.roucaries+debian@gmail.com>

	Add newer version of python
	Add newer version of python. Thanks to debian

2017-08-12  Harenome Ranaivoarivony-Razanajato  <ranaivoarivony-razanajato@hareno.me>

	AX_PROG_HELP2MAN: new macro
	AX_PROG_HELP2MAN is a macro which helps using help2man to automatically
	produce man pages. It checks whether help2man is available on the
	system, adds the --disable-help2man option to the configure script and
	sets various variables for use in configure or Makefile.am files.

2017-08-01  Nico Madysa  <nico.madysa@tu-dresden.de>

	AX_BOOST_BASE: Make tests more portable.
	This commit makes `test` calls in AX_BOOST_BASE more uniform.
	Comparisons with the empty string are replaced with the `-n` and `-z`
	arguments. Comparisons with non-empty strings are done in the common portable
	way (e.g. `test "x$succeesed" = "xyes"`). The fragile `-a` argument is
	replaced by `&&`.

2017-08-01  Nico Madysa  <nico.madysa@tu-dresden.de>

	AX_BOOST_BASE: Fix missing BOOST_LDFLAGS.
	AX_BOOST_BASE first checks if Boost is installed in a standard location
	and sets BOOST_CPPFLAGS and BOOST_LDFLAGS accordingly.

	If Boost cannot be found, these variables are reset. Further proceedings
	depend on whether the actual location was passed in via
	--with-boost=<path> or not. If it was, BOOST_CPPFLAGS is determined
	automatically based on the given path. This automatic detection, however, did
	not include BOOST_LDFLAGS.

	Consequently, if Boost is in a non-standard location that is given via
	--with-boost, the user would also have to specify --with-boost-libdir.

	This commit fixes this issue by also determining BOOST_LDFLAGS
	automatically in this particular branch of execution. The performed
	check is very similar to the one done in various other locations of the
	macro.

2017-08-01  Peter Simons  <simons@cryp.to>

	Merge remote-tracking branch 'github/master'

2017-08-01  Harenome Ranaivoarivony-Razanajato  <ranaivoarivony-razanajato@hareno.me>

	AX_SUBDIRS_CONFIGURE: fix empty argument handling
	This commit fixes the way empty arguments are handled (i.e nothing is
	done) in AX_SUBDIRS_CONFIGURE as opposed to the previous implementation
	which could set wrong variables when empty arguments were provided.

2017-07-25  Bastien Roucariès  <bastien.roucaries+debian@gmail.com>

	Create a negative gnu make variable
	The makefile variable `ifnGNUmake' is set to #, otherwise
	it is set to the empty string. This is useful for including a special
	features in a Makefile, which can be handled
	by other versions of make or to specify else like clause.

	Allow action found action not found for  ax_check_gnu_make.m4
	Improve action to be done

	Move git ignore to top
	It is better for semantic to assign variable at top of rules

2017-07-05  Karl-Johan Alm  <karljohan-alm@garage.co.jp>

	AX_JNI_INCLUDE_DIR: Do not use AC_CHECK_FILE as it is unavailable on some systems.

2017-06-27  Simon McVittie  <smcv@debian.org>

	AX_PYTHON_DEVEL: Swap values of PYTHON_EXTRA_LIBS, PYTHON_EXTRA_LDFLAGS
	The LIBS and SYSLIBS Python configuration variables are lists of
	libraries, with typical values (on Debian GNU/Linux) being

	    LIBS = -lpthread -ldl -lutil
	    SYSLIBS = -lm

	so they should clearly be in a LIBS variable, not LDFLAGS.
	Conversely, the LINKFORSHARED Python configuration variable contains
	miscellaneous linker options, with its value on Debian being

	    -Xlinker -export-dynamic -Wl,-O1 -Wl,-Bsymbolic-functions

	so it should be in the LDFLAGS.

	This matters when linking statically or using a particularly
	pedantic linker: LDFLAGS appear on the linker command-line before
	the object files to be linked and (with some linkers) cannot satisfy
	undefined symbols, whereas LIBS appear after the object files in
	dependency order.

2017-06-15  Marvin Schmidt  <marv@exherbo.org>

	AX_RUBY_EXT: Use RbConfig instead of deprecated Config module

2017-06-05  David Seifert  <soap@gentoo.org>

	Move AX_RECURSIVE_EVAL to its own file
	* `AX_RECURSIVE_EVAL` is useful on its own, and consumers
	  should not be required to pull in the whole of
	  `AX_COMPUTE_RELATIVE_PATHS` to use it.

2017-04-25  Vasil Velichkov  <vasil_vel@abv.bg>

	Fix initialization of CODE_COVERAGE_GENHTML_OPTIONS
	There is no variable with name CODE_COVERAGE_GENHTML_OPTIONS_DEFAULTS so
	use the CODE_COVERAGE_GENHTML_OPTIONS_DEFAULT variable instead

2017-04-21  Peter Simons  <simons@cryp.to>

	AX_SUBDIRS_CONFIGURE: fix documentation layout for proper HTML rendering

2017-04-21  Harenome Ranaivoarivony-Razanajato  <ranaivoarivony-razanajato@hareno.me>

	AX_SUBDIRS_CONFIGURE: new macro
	AX_SUBDIRS_CONFIGURE is a macro akin to AC_CONFIG_SUBDIRS which allows
	to run other configure scripts. AX_SUBDIRS_CONFIGURE attempts to follow
	the same rules as AC_CONFIG_SUBDIRS such as:

	- command line arguments from the parent configure script are given to
	  the child configure script.
	- some arguments are modified (for instance `--cache-file`, `--srcdir`)

	However, as opposed to AC_CONFIG_SUBDIRS, AX_SUBDIRS_CONFIGURE takes 4
	additional parameters which correspond to:

	- arguments that must always be passed down to child configure scripts.
	- arguments that may be merged with existing arguments.
	- arguments that must replace existing arguments.
	- arguments that must never be passed to the configure scripts.

	Subdirectories recorded with AX_SUBDIRS_CONFIGURE are added to the new
	`subdirs_extra` variable instead of `subdirs`.

2017-04-06  Peter Simons  <simons@cryp.to>

	AX_ELISP: replace unicode characters with simpler ASCII variants

	AX_PROG_EMACS: replace unicode characters with simpler ASCII variants

2017-04-06  Thien-Thi Nguyen  <ttn@gnu.org>

	AX_ELISP: New submission
	I am submitting this to the Autoconf Archive in case it
	might be more widely useful than for EDB, its original home.
	As elisp.m4, it was mentioned in passing here:
	http://lists.gnu.org/archive/html/gnu-emacs-sources/2016-11/msg00001.html

	* m4/ax_elisp.m4: New file.

2017-04-06  Thien-Thi Nguyen  <ttn@gnu.org>

	AX_PROG_EMACS: New submission
	* m4/ax_prog_emacs.m4: New file.

2017-03-29  Peter Simons  <simons@cryp.to>

	AX_SYS_LARGEFILE_SENSITIVE: fix spelling of immediately

	Fix serial numbers after spelling fixes from cf2bd2c981de.

2017-03-28  Josh Soref  <jsoref@users.noreply.github.com>

	spelling: versions

	spelling: version

	spelling: variable

	spelling: useful

	spelling: upon

	spelling: unusable

	spelling: unsupported

2017-03-29  Josh Soref  <jsoref@users.noreply.github.com>

	spelling: unknown

2017-03-28  Josh Soref  <jsoref@users.noreply.github.com>

	spelling: understand

	spelling: supposed

	spelling: superfluous

	spelling: successful

	spelling: success

	spelling: succeeds

	spelling: subtract

	spelling: statement

	spelling: squeeze

	spelling: specified

	spelling: shortcircuit

	spelling: sharedstatedir

	spelling: separator

	spelling: separate

	spelling: search

	spelling: running

	spelling: respectively

	spelling: represents

	spelling: relative

	spelling: provide

	spelling: probabilistic

	spelling: preferably

	spelling: overridden

	spelling: output

	spelling: optimization

	spelling: normally

	spelling: needed

	spelling: modified

	spelling: moaning

	spelling: minimum

	spelling: merrily

	spelling: library

	spelling: instead

	spelling: instantiations

	spelling: instance

	spelling: installation

	spelling: increments

	spelling: implicitly

	spelling: implementation

	spelling: identifier

	spelling: filenames

	spelling: explicitly

	spelling: existence

	spelling: executed

	spelling: executable

	spelling: example

	spelling: especially

	spelling: equivalent

	spelling: environment

	spelling: dynamically

	spelling: directory

	spelling: directories

	spelling: detection

	spelling: dependency

	spelling: deliberately

	spelling: constructed

	spelling: consequence

	spelling: cleansing

	spelling: changelog

	spelling: borlandc

	spelling: bit specific

	spelling: binary

	spelling: available

	spelling: autoconf

	spelling: at least

	spelling: anything

	spelling: always

	spelling: addressable

	spelling: additionally

	spelling: absolute

2017-03-23  Rafał Rzepecki  <divided.mind@gmail.com>

	Make the version check in AX_RUBY_DEVEL actually work

2017-03-22  Rafał Rzepecki  <divided.mind@gmail.com>

	Fix AX_RUBY_DEVEL
	- Use AX_WITH_PROG instead of the obsolete AX_WITH_RUBY
	- Use RbConfig instead of the obsolete mkmf/config

2017-03-21  Peter Simons  <simons@cryp.to>

	AX_COMPILER_FLAGS_C(XX)FLAGS: only use -Wno-suggest-attribute=format if compiler supports it
	Submitted in https://savannah.gnu.org/patch/index.php?9243.

	Suggested-by: Attila <attila@stalphonsos.com>

2017-03-21  Christophe Fergeau  <cfergeau@redhat.com>

	ax_valgrind_check: Don't eat check-valgrind errors
	Currently, after running 'make check-valgrind', $? will always be 0 even
	if there was an error during the test. This differs from make check
	which will return a non-0 exit code when there was a test failure, and
	gets in the way of using 'make check-valgrind' during CI.

	This commit switches from using make -k on each individual target to
	running make -k on all the targets at once. This way, we will run the
	tests for all targets even if one fails, while still reporting a non-0
	exit code if there was a test failure.

	Patch based on a suggestion from Frediano Ziglio <fziglio@redhat.com>

2017-03-14  Igor Gnatenko  <ignatenko@redhat.com>

	ax_python_devel: check success of import by return code rather than by stderr
	In Python 3.7, when you have C locale it will be automatically coerced
	to C.UTF-8 and warning will be printed to stderr. This breaks AX_PYTHON_DEVEL.

2017-03-10  Mike Frysinger  <vapier@gentoo.org>

	punt long obsolete AX_C_BIGENDIAN_CROSS
	The standard AC_C_BIGENDIAN has supported cross-compiling since 2002
	as part of its 2.53 release.  There's no need to include the AX macro
	anymore.

2017-02-27  Peter Simons  <simons@cryp.to>

	Merge pull request #114 from akopytov/master
	Add support for Cavium ThunderX2 CN99xx to AX_GCC_ARCHFLAG.

2017-02-27  gmbonnet  <guillaumebonnet10@gmail.com>

	AX_IS_RELEASE: use srcdir instead of top_srcdir
	Autoconf 2.69 does not set the ${top_srcdir} environment variable in configure scripts any more.

2017-02-26  Alexey Kopytov  <akopytov@gmail.com>

	Add support for Cavium ThunderX2 CN99xx to AX_GCC_ARCHFLAG.
	This patch adds code to detect Cavium ThunderX2 CN99xx (formely Broadcom
	Vulcan) to AX_GCC_ARCHFLAG.

2017-02-13  Peter Simons  <simons@cryp.to>

	ax_check_enable_debug: indent with blanks instead of tabs

	ax_check_aligned_access_required: cosmetic fix in documentation

	Merge pull request #112 from proski/aligned
	Improve AX_CHECK_ALIGNED_ACCESS_REQUIRED

2017-02-13  Ben Small  <bentsm@noreply.github.com>

	Correct library name of Boost.Chrono

2017-02-12  Pavel Roskin  <plroskin@gmail.com>

	Improve AX_CHECK_ALIGNED_ACCESS_REQUIRED
	Square brackets were overquoted. Avoid square brackets, use quadrigraph
	for "#".

	Invert the logic so that a crash in the test would count as "yes" for the
	aligned address requirement.

	When cross-compiling, assume that address alignment is needed, warn the
	user.

	Use AC_RUN_IFELSE and AC_LANG_PROGRAM, they use sane quoting and take
	care of the main function.

	Don't include stdio.h, it's not needed for malloc() or anything else.

2017-02-11  Emanuele Aina  <emanuele.aina@collabora.com>

	AX_CHECK_ENABLE_DEBUG: Do not conflict with -DNDEBUG
	Since -DNDEBUG is equivalent to "#define NDEBUG 1", explicitly set
	the value to ensure that both definitions are equivalent and won't
	lead to compiler warnings.

	This makes AX_CHECK_ENABLE_DEBUG compatible with AX_CODE_COVERAGE, as
	the latter causes -DNDEBUG to be set.

	In particular, if AX_COMPILER_FLAGS is also used and thus -Werror
	is set (which is the default in that case) this avoids the following
	build failure:

	./config.h:38:0: error: "NDEBUG" redefined [-Werror]

	Submitted in <https://savannah.gnu.org/patch/?9226>

2017-02-08  Mike Frysinger  <vapier@gentoo.org>

	switch gnu.org sites to https

2017-01-26  Rafael de Lucena Valle  <rafaeldelucena@gmail.com>

	AX_EXT: update to detect Altivec and VSX instructions on new machines

2017-01-25  Gordon Byrnes  <gordon@ghbweb.com>

	Find Java directories on recent macOS versions
	Find the Java directories within the Xcode bundle on macOS 10.8 and
	later.

2017-01-21  David Seifert  <soap@gentoo.org>

	Add new macro AX_ADD_FORTIFY_SOURCE

2017-01-17  Peter Simons  <simons@cryp.to>

	Merge pull request #103 from proski/socklen-werror
	AX_TYPE_SOCKLEN_T: fix "-Wall -Werror" compatibility

2017-01-17  Heinrich Schuchardt  <xypron.glpk@gmx.de>

	ax_tls.m4: _Thread_local storage-class specifier
	ISO/IEC 9899:2011 defines the _Thread_local storage-class specifier.
	We should test for it before testing for any pre C11 specifiers.

2017-01-06  Alexey Kopytov  <akopytov@gmail.com>

	Add code to detect ThunderX to AX_GCC_ARCHFLAG.
	Update AX_GCC_ARCHFLAG to detect ThunderX (an AArch64 CPU by Cavium) and
	set -march/-mcpu accordingly depending on the CPU generation and
	compiler support.

2016-12-27  Jens Geyer  <jensg@apache.org>

	Added macro to detect .NET core <https://github.com/dotnet/core> version.

2016-12-24  Pavel Roskin  <plroskin@gmail.com>

	AX_TYPE_SOCKLEN_T: fix "-Wall -Werror" compatibility
	The len variable is unused, which causes a compile error resulting in a
	failure to detect socklen_t.

	Also fix a potential warning about implicit type conversion while
	initializing len.

2016-12-06  Peter Simons  <simons@cryp.to>

	ax_prog_xsltproc: drop tabs from m4 source code

	ax_prog_xsltproc: bump serial number

2016-12-06  Jeremy C. Reed  <reed@reedmedia.net>

	ax_prog_xsltproc: improve portability

2016-12-06  Peter Simons  <simons@cryp.to>

	ax_boost_thread.m4: bump serial number

2016-12-06  Michael Truog  <mjtruog@gmail.com>

	AX_BOOST_THREAD: support for more platforms
	The current ax_boost_thread.m4 macro can fail on some platforms and this change
	improves its support. I don't remember the exact platforms that fail with the
	current version (without this patch), but I think Ubuntu 16.04.1 LTS on aarch64
	had problems. I know it was a newer release of Ubuntu and possibly past FreeBSD
	usage, though I made these changes locally more than 1 year ago.

	This patch also changes whitespace because it was hard to discern the intended
	indentation in places (it appeared like previous authors didn't care).

	Submitted via <https://savannah.gnu.org/patch/index.php?9153>.

2016-12-06  Michael Truog  <mjtruog@gmail.com>

	cleanup Java macros (remove binary blobs)
	This patch removes opaque binary usage within the java macros. It is very
	disturbing that binary data was included in these macros. I confirmed that the
	binary data matched the comments, however, future changes could easily make
	them deviate, making it very easy to insert arbitrary source code into any
	project.

	I also removed usage of the -r flag from rm usage which didn't make sense.

2016-12-06  Michael Catanzaro  <mcatanzaro@gnome.org>

	AX_GENERATE_CHANGELOG: pass --no-decorate to git-log by default
	Otherwise, if log.decorate is specified in git config, local ref names
	will wind up printed in the changelog.

2016-12-06  William Price  <>

	AX_BOOST_BASE: fix issue whereby --with-boost-libdir options were lost
	If the macro AX_BOOST_BASE does not detect a simple "system" layout for boost,
	it tries to find it in versioned directories. Unfortunately, that path of logic
	set BOOST_LDFLAGS to null. Other parts of the code already check
	ac_boost_lib_path before altering BOOST_LDFLAGS, except for one place.

2016-12-06  Peter Simons  <simons@cryp.to>

	AX_PKG_SWIG: add support for swig 3.0
	Suggested-by: keith.bostic@mongodb.com

2016-12-06  Kevin Locke  <kevin@kevinlocke.name>

	ax_code_coverage: remove lcov version check
	The version check does not support the latest version of lcov (1.12).
	The history of this module[1][2][3][4] does not reveal a rationale for
	the check and its utility seems dubious.  Rather than applying yet another
	temporary fix, remove the check.

	Note:  The issue of version check removal was raised on
	autoconf-archive-maintainers[5] without response.

	1.  https://git.gnome.org/browse/gnome-common/log/macros2/gnome-code-coverage.m4
	2.  https://bugzilla.gnome.org/show_bug.cgi?id=606720
	3.  https://git.gnome.org/browse/glib/log/configure.ac
	4.  https://bugzilla.gnome.org/show_bug.cgi?id=501057
	5.  https://lists.gnu.org/archive/html/autoconf-archive-maintainers/2016-07/msg00000.html

2016-12-06  Kevin Locke  <kevin@kevinlocke.name>

	ax_code_coverage: avoid GNU Make extensions
	ifeq/ifneq is a GNU Make extension which doesn't work with BSD Make and
	others, resulting in errors such as:

	    Missing dependency operator
	    Need an operator
	    warning: duplicate script for target "ifeq" ignored

	Although it would be preferable to use the Automake conditionals
	(AM_CONDITIONAL) in the make rules, this does not appear to be possible
	within AC_SUBST content.  Instead, build the rules using shell variable
	concatenation and only AC_SUBST the ones which should be used.

2016-12-06  Krzesimir Nowak  <qdlacz@gmail.com>

	CXX_COMPILE_STDCXX: Check alternative flags too

	CXX_COMPILE_STDCXX: Add checks for C++17 compiler

2016-11-28  Nick Gasson  <nick@nickg.me.uk>

	Add returns_nonnull to ax_gcc_func_attributes.m4
	This was a recent addition to GCC

2016-11-16  Michael Stapelberg  <stapelberg@users.noreply.github.com>

	ax_extend_srcdir: also accept absolute paths

2016-11-10  Philip Chimento  <philip.chimento@gmail.com>

	ax_compiler_flags_ldflags: Fix options for macOS linker
	The linker on macOS does not understand --as-needed, and speaks
	--fatal-warnings with a slightly different accent.

2016-10-06  Peter Simons  <simons@cryp.to>

	ax_extend_srcdir: avoid non-ASCII characters if possible

	ax_extend_srcdir: fix up formatting so the HTML and info renderers are happy

2016-10-06  Michael Stapelberg  <michael@stapelberg.de>

	Add AX_EXTEND_SRCDIR macro.
	Please refer to the file itself for documentation.

2016-10-06  Michael Stapelberg  <michael@stapelberg.de>

	ax_enable_builddir: require AC_CANONICAL_TARGET
	Without AC_CANONICAL_TARGET, I get the following error when running
	./configure:

	    checking build system type... x86_64-unknown-linux-gnu
	    checking host system type... x86_64-unknown-linux-gnu
	    mkdir: cannot create directory '': No such file or directory
	    mkdir: cannot create directory '': No such file or directory
	    ./configure: line 2470: /conftest.tmp: Permission denied
	    configure: error: could not change to default builddir "./"

	With AC_CANONICAL_TARGET (either called explicitly in configure.ac, or
	required in AX_ENABLE_BUILDDIR), ./configure works as expected:

	    checking build system type... x86_64-unknown-linux-gnu
	    checking host system type... x86_64-unknown-linux-gnu
	    checking target system type... x86_64-unknown-linux-gnu
	    continue configure in default builddir "./x86_64-unknown-linux-gnu"
	    ....exec /nix/store/nyj6xd7s1n1w8c0xdwk5ddhi7bjcyi9x-bash-4.3-p46/bin/bash .././configure "--srcdir=.." "--enable-builddir=x86_64-unknown-linux-gnu" "linux
	    gnu"
	    checking build system type... x86_64-unknown-linux-gnu
	    checking host system type... x86_64-unknown-linux-gnu
	    checking target system type... x86_64-unknown-linux-gnu
	    checking for gsed... sed
	    […]

2016-10-05  Peter Simons  <simons@cryp.to>

	Remove obsolete macros.

	ax_define_sub_path: mark as obsolete
	See https://github.com/peti/autoconf-archive/pull/97 for rationale.

2016-10-05  Michael Stapelberg  <michael@stapelberg.de>

	Remove extraneous whitespace to make ifelse() work

2016-10-01  Simon McVittie  <smcv@debian.org>

	ax_compiler_flags_*: fix underquoting causing infinite recursion
	These macros would fail with infinite recursion if used twice for the
	same variable, for example

	    AX_COMPILER_FLAGS_CFLAGS([WARN_CFLAGS], ... some options ...)
	    AX_COMPILER_FLAGS_CFLAGS([WARN_CFLAGS], ... more options ...)

	In particular, invoking AX_COMPILER_FLAGS, followed by
	AX_COMPILER_FLAGS_CFLAGS with more "yes" options has this failure mode.

	This is because the first time through the macro, we define
	ax_warn_cflags_variable = "WARN_CFLAGS" as expected. The second time,
	because the first parameter is underquoted, its value is substituted
	before calling m4_define, so we inadvertently define
	WARN_CFLAGS = "WARN_CFLAGS". The next time WARN_CFLAGS is mentioned,
	attempts to expand it will recurse forever, because m4 does not
	special-case a macro that appears in its own expansion like cpp does.

2016-09-29  Peter Simons  <simons@cryp.to>

	Merge pull request #95 from smcv/ax-is-release-dash-version
	AX_IS_RELEASE: add dash-version policy

2016-09-28  Simon McVittie  <simon.mcvittie@collabora.co.uk>

	AX_IS_RELEASE: add dash-version policy
	This is particularly useful in conjunction with git-version-gen,
	as provided by gnulib.

2016-09-27  P. F. Chimento  <philip.chimento@gmail.com>

	AX_CODE_COVERAGE: Define CODE_COVERAGE_LIBS
	The previous change seems to have defined LDFLAGS twice rather
	than LIBS and LDFLAGS.

2016-09-23  Nick Papior  <nickpapior@gmail.com>

	Updated OpenMP flag detection for latest Intel compilers
	- icc/ifort will deprecate -openmp in the future,
	  -qopenmp will replace it.

2016-09-16  Peter Simons  <simons@cryp.to>

	ax_gcc_x86_cpu_supports: drop trailing blanks

2016-09-16  Dag-Erling Smørgrav  <des@des.no>

	ax_gcc_builtin: add __builtin_bswap16

2016-08-31  Andrew Stoltz  <astoltz@gmx.com>

	Fix reference to LIBMYSQLCPPCONN_CXXFLAGS

2016-08-19  Philip Withnall  <philip.withnall@collabora.co.uk>

	AX_CODE_COVERAGE: Rename CODE_COVERAGE_LDFLAGS to CODE_COVERAGE_LIBS
	Since it’s supposed to be added to the Makefile’s target_LIBS variable,
	this is a lot clearer.

	Continue to support CODE_COVERAGE_LDFLAGS, but it’s deprecated.

2016-08-19  Peter Simons  <simons@cryp.to>

	Merge pull request #89 from ptomato/ax-prog-gjs-2
	ax_prog_gjs: Look in pkg-config as well as path

2016-08-19  Thomas Zimmermann  <tdz@users.sourceforge.net>

	AX_IS_RELEASE: Support out-of-tree builds

2016-08-16  Philip Chimento  <philip.chimento@gmail.com>

	ax_prog_gjs: Look in pkg-config as well as path
	This looks in pkg-config for the GJS executable, since the gjs-1.0
	package provides it as a pkg-config variable. However, not all versions
	of GJS do, so we fall back to checking in the path.

2016-08-01  Michel Normand  <normand@linux.vnet.ibm.com>

	remove useless ppc64le trailing word in libsubdirs
	this is a typo correction of previous commit 1f9acf39e6b3
	as per original patch from https://savannah.gnu.org/patch/index.php?8473

2016-07-27  Reuben Thomas  <rrt@sc3d.org>

	Add AX_LUAROCKS_ROCK

2016-06-24  Olaf Mandel  <olaf@mandel.name>

	AX_OPEN62541_PATH: set AM_DISTCHECK_CONFIGURE_FLAGS
	When configuring --with-open62541=<path>, the make distcheck target
	often failed because the open62541 library was not found on the system.

	So set the AM_DISTCHECK_CONFIGURE_FLAGS variable with the required
	values (absolute paths in case the user defined relative paths).

2016-06-24  Olaf Mandel  <olaf@mandel.name>

	AX_OPEN62541_PATH: fix use of non-inst shared lib
	If the open62541 library is not installed and the shared library is to
	be used, the --with-open62541=<path> option to contigure setting
	CPPFLAGS and LDFLAGS is not enough: other checks by configure may
	compile test binaries with the library linked in and then try to execute
	then. The execution fails because of the not found shared library object
	and gives a wrong test result. Likewise, some make targets (like check)
	need to execute compiled binaries.

	So modify AX_OPEN62541_PATH() so it exports LD_LIBRARY_PATH with the
	absolute path of the build dir for the rest of the configure script to
	use and define a Makefile variable OPEN62541_LDPATH, which contains
	LD_LIBRARY_PATH=$LD_LIBRARY_PATH:<abs_path_to_build>.

2016-06-15  Peter Simons  <simons@cryp.to>

	Merge pull request #81 from olaf-mandel/ax_check_open62541
	Add AX_CHECK_OPEN62541_{H,LIB} macros

2016-06-15  Olaf Mandel  <olaf@mandel.name>

	Refactor open62541 macros into separate files
	Split the macros from the ax_check_open62541.m4 file into multiple
	files and rename them:

	AX_CHECK_OPEN62541_H()   -> AX_OPEN62541_CHECK_H()
	AX_CHECK_OPEN62541_LIB() -> AX_OPEN62541_CHECK_LIB()

	And add the new AX_OPEN62541_PATH(), which containes the shared
	functionality previously handled by both old AX_CHECK_* macros.

	Also add a forgotten feature promissed in the documentation: the
	--with-open62541-shared and --with-open62541-static options can be
	used to change the order in which the libraries are searched for.

2016-06-15  Peter Simons  <simons@cryp.to>

	Merge pull request #82 from joelfrederico/master
	HDF5 type variable

2016-06-15  Joel Frederico  <joelfred@slac.stanford.edu>

	ax_lib_hdf5.m4: Fixed, using AS_CASE instead of m4_bmatch

	ax_lib_hdf5.m4: Fixed to test for parallel instead of just assuming it

	ax_lib_hdf5.m4: env var HDF5_TYPE indicates parallel or serial

2016-06-14  Karlson2k  <k2k@narod.ru>

	ax_count_cpus.m4: better support NetBSD

2016-06-14  Olaf Mandel  <olaf@mandel.name>

	Add AX_CHECK_OPEN62541_{H,LIB} macros
	These macros search for the header and library files for the open62541
	library [1]. Support both the amalgamation header and the individual
	header file layout. Support both the shared and static library, searched
	for in a configurable order. Support for adding the library source
	directory and the build directory to the search path if the library is
	not installed on the system.

	[1]: <http://open62541.org/>

2016-06-14  Karlson2k  <k2k@narod.ru>

	ax_count_cpus.m4: support "NPROCESSORS_ONLN" getconf parameter used on some systems (NetBSD, OpenBSD)

	ax_count_cpus.m4: improve compatibility with shells which doesn't redirect stderr for "command not found" messages

2016-06-13  Karlson2k  <k2k@narod.ru>

	ax_count_cpus.m4: improve compatibility with various shells

2016-05-28  Julian Ospald  <hasufell@posteo.de>

	AX_CHECK_OPENSSL: use AC_CHECK_TOOL for pkg-config
	Some distros provide prefixed pkg-config. This patch ensures
	the right tool is picked.

	See https://www.gnu.org/software/autoconf/manual/autoconf.html#Generic-Programs
	for details

2016-05-10  David Seifert  <soap@gentoo.org>

	Update ax_with_curses.m4 and ax_with_curses_extra.m4 to match PKG_CHECK_MODULES
	* Ultimately, ax_with_curses.m4 and ax_with_curses_extra.m4 should fall out of
	  use once ncurses pkg-config files have become ubiquitous in the ecosystem.
	  Until then, the precious variables have been renamed to match the style of
	  PKG_CHECK_MODULES, such that a later replacement of the macros can be
	  performed with a simple sed.

2016-05-08  Mike Frysinger  <vapier@gentoo.org>

	fix include errors w/AX_CXX_COMPILE_STDCXX_1[14]
	The search path for `include` is the current working directory, so trying
	to include other m4 files directly only works if they live in the same dir
	as where you're running `aclocal`.  Otherwise we end up with errors like:
		$ cd lcd4linux-0.10.1-RC2
		$ aclocal
		/usr/share/aclocal/ax_cxx_compile_stdcxx_14.m4:32: file 'ax_cxx_compile_stdcxx.m4' does not exist

	Use the AX_REQUIRE_DEFINED macro instead to make sure the macro we want
	exists.

2016-05-06  Benjamin Eikel  <benjamin@eikel.org>

	AX_HAVE_QT: Silent make for variable setting
	Add "-s" to make arguments. Without, make's output (like "Entering directory")
	gets assigned to output variables.

2016-04-16  Karlson2k  <k2k@narod.ru>

	AX_COUNT_CPUS: updated description to clarify what's counted

	AX_COUNT_CPUS: rewritten and updated additional detection methods Completely new additional detection method added for Darwin, FreeBSD and Solaris. Updated additional methods for Linux, MinGW/MSys, Msys2 and Cygwin.

	AX_COUNT_CPUS: added generic and new specific detection for various platforms. Generic detection should work on many current platforms Added platform-specific detection methods for Solaris, FreeBSD and MSys2 Added improved and stable detection methods for Linux, Darwin, MinGW/MSys2 and Cygwin

	AX_COUNT_CPUS: added real detection on MinGW

	AX_COUNT_CPUS: added protection from garbage in CPU_COUNT

2016-04-14  Karlson2k  <k2k@narod.ru>

	AX_COUNT_CPUS: added optional ACTION-IF-DETECTED and ACTION-IF-NOT-DETECTED

2016-04-13  Eric Bavier  <bavier@member.fsf.org>

	AX_BUILD_DATE_EPOCH: New macro

2016-04-12  P. F. Chimento  <philip.chimento@gmail.com>

	ax_check_girs_gjs: Fix misleading error message
	The error message printed when this macro failed to find what it was
	looking for, was misleading: it implied that if you were looking for the
	Gtk-1.0 API then installing the Gtk-3.0 API would do. That isn't the
	case, so fix the message.

2016-03-31  Peter Simons  <simons@cryp.to>

	Merge pull request #72 from olaf-mandel/ax_code_coverage
	AX_CODE_COVERAGE: fix problems with (dist)clean

	Merge pull request #73 from olaf-mandel/ax_prog_doxygen
	AX_PROG_DOXYGEN: cleanup doxygen_sqlite3.db

2016-03-30  Olaf Mandel  <olaf@mandel.name>

	AX_PROG_DOXYGEN: cleanup doxygen_sqlite3.db
	Add the file doxygen_sqlite3.db to DX_CLEANFILES. This file is
	generated by (some?) newer versions of doxygen.

	AX_CODE_COVERAGE: fix problems with (dist)clean
	 * Make the find command actually remove any *.gcda files left over
	   by lcov -z
	 * Also remove *.gcno files
	 * Make distclean remove all code-coverage-clean files as well

	AX_VALGRIND_CHECK: make disabling configurable
	Add a new command AX_VALGRIND_DFLT() to configure the use of
	individual valgrind tools in the configure.ac file. These settings
	can still be overwritten on the configure commandline.

2016-03-29  Olaf Mandel  <olaf@mandel.name>

	AX_VALGRIND_CHECK: add disabling individual tools
	Add support for the configure options:
	--disable-valgrind-drd
	--disable-valgrind-helgrind
	--disable-valgrind-memcheck
	--disable-valgrind-sgcheck

	These can be used to fine-tune which Valgrind tools to use.

2016-03-29  Olaf Mandel  <olaf@mandel.name>

	AX_VALGRIND_CHECK: support silent rules
	Use the standard autoconf $(V) variable to conditionally hide the
	commands executed for check-valgrind: this makes the output from any
	test script much more apparent as it is not hidden in clutter.

	Hide the outer list of commands in check-valgrind completely with
	$(AM_V_at) and define a new $(valgrind_v_use) for the individual
	check-valgrind-* calls. The $(valgrind_v_use) call writes:

	  USE    $(patsubst check-valgrind-%,%,$@):

	Note that this only works inside rules of the form check-valgrind-* .

2016-03-29  Olaf Mandel  <olaf@mandel.name>

	AX_VALGRIND_CHECK: refactor new tool-rules
	The addition of individual rules for each individual valgrind-tool
	caused some copy&paste codeing: refactor that as a GNU make canned
	recipe. Also fix up the .PHONY rules.

	Breaking change: removes the undocumented internal rule
	check-valgrind-tool.

2016-03-22  Peter Simons  <simons@cryp.to>

	Merge pull request #70 from dryman/x86_cpu_support
	macros for X86 instruction set tests

	Merge pull request #69 from SoapGentoo/modernize-ncurses
	AX_WITH_CURSES: Enable pkg-config support

2016-03-22  dryman  <idryman@gmail.com>

	macros for X86 instruction set tests
	Added two macros: ax_check_x86_features.m4, and ax_gcc_x86_cpu_supports.m4

	It checks if the host cpu supports various instruction set: mmx, sse, popcnt,
	avx, avx2, etc. If the instruction were supported, it would export
	HAVE_XXX_INSTRUCTIONS C preprocessor macros and add the instruction set flag to
	X86_FEATURES_CFLAGS variable. By default it would also set CFLAGS, but this can
	be disabled by the ACTION-IF-FOUND hook.

2016-03-21  David Seifert  <soap@gentoo.org>

	AX_WITH_CURSES: Enable pkg-config support, fallback now requires -ltinfo for ncurses 6

2016-03-21  Enrico M. Crisostomo  <enrico.m.crisostomo@gmail.com>

	Update CXXCPP after updating CXX.
	Rewrap text.

	Rewrap.

2016-03-20  Peter Simons  <simons@cryp.to>

	AX_PTHREAD: import draft 4 from https://savannah.gnu.org/patch/?8186

	ax_check_gl*: drop trailing whitespace

2016-03-20  Luca Boccassi  <luca.boccassi@gmail.com>

	ax_valgrind_check: add a target for each tool
	Often not all tools can be ran cleanly on a codebase. This means that
	make check-valgrind will never complete successfully, which is a
	problem especially when using ax_valgrind_check on a continous
	integration system.

2016-03-09  Peter Simons  <simons@cryp.to>

	Merge pull request #66 from dryman/opengl
	Improved three opengl autoconf macros

2016-03-09  dryman  <idryman@gmail.com>

	Fix ax_restore/save_flags_with_prefix.m4
	Need to use AC_DEFUN instead of m4_define

2016-03-09  dryman  <idryman@gmail.com>

	Improved three opengl autoconf macros
	Main features added:
	- Support action-if-found and not-found hook
	- Export HAVE_GL, HAVE_GLU, and HAVE_GLUT preprocessor symbol
	- Add necessary flags to CFLAGS/LIBS by default, but can be disabled by
	  overwritting action-if-found hook.
	- Fail the configure script if lib not found. This feature can be disabled by
	  overwritting action-if-not-found hook
	- Fix problems on Mac OSX. Been tested on Linux (Ubuntu) and OSX
	- Use --with-xquartz-gl instead of --with-gl=x for using X11 on OSX

	Two new macros added:
	- ax_save_flags_with_prefix.m4: save flags and pushes flag with prefix to the
	  flag.
	  AX_SAVE_FLAGS_WITH_PREFIX([GL],[[CFLAGS],[LIBS]]) would expands to
	    gl_saved_flag_cflags="$CFLAGS"
	    gl_saved_flag_libs="$LIBS"
	    CFLAGS="$GL_CFLAGS $CFLAGS"
	    LIBS="$GL_LIBS $LIBS"
	- ax_restore_flags_with_prefix.m4: restore the flags.

2016-03-05  Luca Boccassi  <luca.boccassi@gmail.com>

	Add C++ support to ax_code_coverage.m4
	Simply define CODE_COVERAGE_CXXFLAGS with the same value as
	CODE_COVERAGE_CFLAGS. Tested on libzmq (a C++ project).

2016-03-04  Peter Simons  <simons@cryp.to>

	Merge pull request #61 from olaf-mandel/ax_code_coverage
	AX_CODE_COVERAGE: quote CODE_COVERAGE_RULES

	Merge pull request #62 from olaf-mandel/ax_prog_doxygen
	AX_PROG_DOXYGEN: quote DX_RULES

	Merge pull request #60 from olaf-mandel/ax_gnu_autotest
	AX_GNU_AUTOTEST: quote some static strings

2016-03-03  Olaf Mandel  <olaf@mandel.name>

	AX_GNU_AUTOTEST: quote some static strings
	Some static strings in AC_SUBST() were underquoted: fix that.

	AX_PROG_DOXYGEN: quote DX_RULES
	Quote the DX_RULES assignment to prevent some other M4 macro from
	modifying the text. Also transition from direct if-statements to AS_IF
	for the same reasons: to prevent undesired macro replacements.

	AX_CODE_COVERAGE: quote CODE_COVERAGE_RULES
	Quote the CODE_COVERAGE_RULES assignment to prevent some other
	M4 macro from modifying the static text.

	AX_VALGRIND_CHECK: quote VALGRIND_CHECK_RULES
	Quote the VALGRIND_CHECK_RULES assignment to prevent some other
	M4 macro from modifying the static text.

2016-03-03  Olaf Mandel  <olaf@mandel.name>

	AX_VALGRIND_CHECK: fix logic around AC_CHECK_PROG
	There are two problems in the logic around the first AC_CHECK_PROG()
	call:

	1. If AC_CHECK_PROG() fails to find valgrind, with neither configure
	   option --enable-valgrind nor --disable-valgrind, then the
	   enable_valgrind variable ends up being set incorrectly to yes.

	2. If configure was started with --disable-valgrind, then there is no need
	   to run AC_CHECK_PROG() at all.

2016-03-03  Olaf Mandel  <olaf@mandel.name>

	AX_VALGRIND_CHECK: clean up configure message
	When running configure, the displayed text contained two interleaved
	messages. Got:

	checking whether to enable Valgrind on the unit tests... checking for valgrind... valgrind
	yes

	instead of the probably intended:

	checking whether to enable Valgrind on the unit tests... yes
	checking for valgrind... valgrind

	In addition, the first message seems to convey no additional information
	compared to the second message: if valgrind is not found (and there is no
	--enable-valgrind error), then the result of the check is "no" as
	displayed for the executable check. And in all other cases, the result is
	"yes". So remove the first message completely: this takes care of the
	mangled status messages.

2016-02-29  Peter Simons  <simons@cryp.to>

	AX_GCC_VAR_ATTRIBUTE: fix spelling error
	https://savannah.gnu.org/patch/index.php?8815

2016-02-29  Joshua Judson Rosen  <jrosen@harvestai.com>

	AX_CXX_COMPILE_STDCXX: don't break "make CXXFLAGS=..."
	Make C++ std-selection macros modify $(CXX), not $(CXXFLAGS).

	Using $(CXXFLAGS) prevents users from being able to
	rebuild with different CXXFLAGS (e.g.: to try out
	different optimisations or to change debug levels)
	unless they re-run ./configure with their CFLAGS.

	This is more like what the mainline Autoconf macros do
	(e.g.: AC_PROG_CC_C99, AC_PROG_CC_STD, etc. modify $(CC),
	not $(CCFLAGS)), presmuably for much the same reasons:
	if you need to specify a standard to the compiler,
	it doesn't really make sense to separate that from
	$(CC)/$(CXX) since $(CC)/$(CXX) aren't usable without it.

2016-02-29  Michael Welsh Duggan  <md5i@cs.cmu.edu>

	CXX_COMPILE_STDCXX: fix regression introduced in ccd1d4f54b
	AX_CXX_COMPILE_STDCXX doesn't set HAVE_CXX when [mandatory] is given as
	an argument. This bug has existed since commit ccd1d4f54b07b46b.

2016-02-29  Peter Simons  <simons@cryp.to>

	AX_LIB_NETCDF4: initial version
	This macro detects NetCDF: http://www.unidata.ucar.edu/software/netcdf/.

	AX_PTHREAD: various improvements
	See https://savannah.gnu.org/patch/?8186 for further details.

	AX_FC_CHECK_DEFINE: initial version

2016-02-29  Jorge Bellon  <jorge.bellon@bsc.es>

	Add ax_var_pop.m4 and ax_var_push.m4 macros.

2016-02-26  Olaf Mandel  <olaf@mandel.name>

	AX_CODE_COVERAGE: fix invalid chars in testname
	There was a warning about invalid characters in the testname from
	lcov: anything except letters, digits and the underscore causes
	this. So replace such characters with underscores (lcov does this
	anyway if we don't).

	Needs to either call $(subst ) for each undesired character or
	needs to execute a system command because GNU make does not
	provide regular expressions. Chose here to implement characters
	individually. Currently only strips dots and dashes, but these
	should be the most common culprits.

2016-02-26  Olaf Mandel  <olaf@mandel.name>

	AX_CODE_COVERAGE: add BRANCH_COVERAGE variable
	Add a new CODE_COVERAGE_BRANCH_COVERAGE variable that can be used
	to provide --rc lcov_branch_coverage=[01] options to lcov and
	--rc genhtml_branch_coverage=[01] options to genhtml. These may be
	desirable to the user since the default for branch coverage changed
	in some "recent" lcov version.

	This is achieved by adding a LCOV_SHOPTS variable (for SHared
	OPTionS) to the default LCOV_OPTIONS one. And the filtering call of
	lcov gets a symmetric LCOV_RMOPTS variable (which is currently
	empty).

	In addition, ensure that all LCOV_{SHOPTS,OPTIONS,RMOPTS} and
	GENHTML_OPTIONS have a corresponding _DEFAULT variable: this became
	desirable here because of the new defaults for LCOV_SHOPTS and
	GENHTML_OPTIONS; the LCOV_RMOPTS_DEFAULT is there only for
	symmetry.

2016-02-01  Philip Withnall  <philip.withnall@collabora.co.uk>

	AX_CODE_COVERAGE: Support multiple directories to extract coverage data
	Support multiple directories being passed to CODE_COVERAGE_DIRECTORY.

2016-02-01  Philip Withnall  <philip.withnall@collabora.co.uk>

	Use AM_DISTCHECK_CONFIGURE_FLAGS instead of DISTCHECK_CONFIGURE_FLAGS
	DISTCHECK_CONFIGURE_FLAGS (no prefix) is for the user to override the
	distcheck configure flags. The AM_-prefixed version is for build systems
	to use.

	https://www.gnu.org/software/automake/manual/html_node/Checking-the-Distribution.html

2016-01-28  Philip Chimento  <philip@endlessm.com>

	Add GJS macros
	This adds three macros to the library:

	AX_PROG_GJS - Check for the GJS JavaScript interpreter
	AX_CHECK_GIRS_GJS - Check for importability of GObject introspection
	   module(s) in GJS
	AX_CHECK_GIR_SYMBOLS_GJS - Check for the presence of particular symbols
	   in a GObject introspection module imported into GJS

2016-01-17  Benjamin Green  <bengreen5@yahoo.com>

	Added support for the MSYS2/mingw system.

2016-01-11  Victor Bogado  <bogado@amazon.com>

	Fix ax_boost_system for new versions of boost.
	Newer version of boost::system have a breaking change that makes
	the test on ax_boost_system fail even though the library is
	present.

	Changed the test to use another construct that did not change. Also
	reseted the "CXX_FLAG" to an empty value in case of it having a
	"-Werror" that also makes the test break.

2016-01-11  Jeroen Meijer  <jjgmeijer@gmail.com>

	Add ax_zmq.m4 and ax_czmq.m4.
	- ax_zmq.m4 tests for an appropiate zmq version
	- ax_czmq.m4 tests for an appropiate czmq version

	Closes https://github.com/peti/autoconf-archive/pull/54.

2015-12-17  Peter Simons  <simons@cryp.to>

	Merge pull request #52 from swofford/fix-ax_gcc_cpuid
	fix AX_GCC_X86_CPUID/AX_GCC_X86_CPUID_COUNT for 32-bit PIC compilations

2015-12-17  Dave Swofford  <david.swofford@duke.edu>

	fix AX_GCC_X86_CPUID/AX_GCC_X86_CPUID_COUNT for 32-bit PIC compilations
	The problem is that the EBX register cannot be used when position independent code is being generated.
	The solutions to save and restore the EBX register.  See, e.g.:
	  http://stackoverflow.com/questions/12221646/how-to-call-cpuid-instruction-in-a-mac-framework

2015-12-16  Nate Bargmann  <n0nb@n0nb.us>

	Fix second pass bug in _AX_WITH_CURSES_CHECKEXTRA
	Found bug where when _AX_WITH_CURSES_CHECKEXTRA is called a second time
	on the same library, e.g. ncurses, the previous setting of
	_AX_WITH_CURSES_CHECKEXTRA_cv_var to 'yes' would be changed to 'no' just
	due to the tested header file not being available on the second pass.

	This was found when AX_WITH_CURSES has 'with_ncurses' set to 'yes' and
	'with_ncursesw' set to 'no' forcing _AX_WITH_CURSES_CHECKEXTRA to be
	called twice in succession since ax_cv_curses_which is set to 'ncurses'
	and the panel.h header file is tested as ncurses/panel.h and panel.h.

	The system in question is OpenSuSE LEAP 42.1 which installs
	/usr/include/ncurses/panel.h and not /usr/include/panel.h.

2015-11-23  Murray Cumming  <murrayc@murrayc.com>

	AX_BOOST_PYTHON: Update for the AX_PYTHON_DEVEL change.
	Because AX_PYTHON_DEVEL now provides PYTHON_LIBS instead of PYTHON_FLAGS,
	this script needs to be updated accordingly.
	This lets AX_BOOST_PYTHON actually find the boost python library
	on newer systems that ignore the -l flags if they appear before the
	source file on the command line.

	I'm not sure why I needed to add PYTHON_LIBS to LIBS in the AC_CACHE_CHECK()
	line, though it apparently wasn't necessary to use PYTHON_LDFLAGS there
	before. I suspect that much of this file doesn't really make sense.

2015-11-23  Markus Armbruster  <armbru@pond.sub.org>

	AX_APPEND_COMPILE_FLAGS, AX_APPEND_LINK_FLAGS: Optional INPUT arg
	Behaves exactly like the optional INPUT argument of
	AX_CHECK_COMPILE_FLAG, AX_CHECK_LINK_FLAG.

	Motivation: I'd like to add -fstack-protector-strong.  The obvious
	solution is AX_APPEND_COMPILE_FLAGS([-fstack-protector-strong]).

	Unfortunately, some ports of the GNU toolchain reportedly pass this
	test, then fail to link.  That's because the compiler accepts the
	flag, duly emits references to helper code in libc (on my system:
	___stack_chk_guard()), but libc doesn't provide, and linking fails.

	The new argument lets me cover this failure mode:

	    AX_APPEND_LINK_FLAGS([-fstack-protector-strong], [], [],
	        [AC_LANG_SOURCE([[
	    int
	    main(int argc, char *argv[])
	    {
	        char arr[64], *dst = arr, *src = argv[0];
	        while ((*dst++ = *src++)) ;
	    }
	        ]])])

2015-11-23  Moritz Klammler  <moritz@klammler.eu>

	Unify macros for checking C++11/14/... compiler support.
	* m4/ax_cxx_compile_stdcxx.m4: New macro file added.

	(AX_CXX_COMPILE_STDCXX): New macro added.  The code is based on
	the former (serial version number 13) `AX_CXX_COMPILE_STDCXX_11`
	macro, generalized to check for arbitrary versions of the standard
	selected via an additional argument.

	(_AX_CXX_COMPILE_STDCXX_testbody_11): New internal macro added.
	Defined in terms of `_AX_CXX_COMPILE_STDCXX_testbody_new_in_11`.

	(_AX_CXX_COMPILE_STDCXX_testbody_14): New internal macro added.
	Defined in terms of `_AX_CXX_COMPILE_STDCXX_testbody_new_in_11`
	and `_AX_CXX_COMPILE_STDCXX_testbody_new_in_14`.

	(_AX_CXX_COMPILE_STDCXX_testbody_new_in_11): New internal macro
	added.  Test code to check for features added in C++14.  It is
	based on the code previously found in the
	`_AX_CXX_COMPILE_STDCXX_11_testbody` macro, defined in
	`m4/ax_cxx_compile_stdcxx_11.m4` but heavily refactored and
	extended with additional checks.

	(_AX_CXX_COMPILE_STDCXX_testbody_new_in_14): New internal macro
	added.  Test code to check for features added in C++14.

	* m4/ax_cxx_compile_stdcxx_11.m4:

	(AX_CXX_COMPILE_STDCXX_11): Make this macro an alias for the new
	`AX_CXX_COMPILE_STDCXX` macro with the version set to C++11.

	(_AX_CXX_COMPILE_STDCXX_11_testbody): Internal macro deleted.

	* m4/ax_cxx_compile_stdcxx_14.m4: New macro file added.

	(AX_CXX_COMPILE_STDCXX_14): New macro added.  This macro is an
	alias for the new `AX_CXX_COMPILE_STDCXX` macro with the version
	set to C++14.

	* m4/ax_cxx_compile_stdcxx_0x.m4 (AX_CXX_COMPILE_STDCXX_0X): Mark
	macro as obsolete.  The macro `AX_CXX_COMPILE_STDCXX_11` should be
	used instead.  I couldn't test this macro on my system because it
	uses a lot of obsolete macros my Autoconf complains about and
	errors out.

2015-11-23  Peter Simons  <simons@cryp.to>

	Merge branch 'code-coverage' of https://github.com/olaf-mandel/autoconf-archive into olaf-mandel-code-coverage.

2015-11-23  Olaf Mandel  <olaf@mandel.name>

	AX_PROG_DOXYGEN: allow AC_CONFIG_FILES([Doxyfile])
	To allow substitutions in the used Doxyfile, two changes are needed:

	1. also substitute everything put in the environment (except DOCDIR)
	2. allow Doxyfiles to also reside in the builddir

	The latter change is a potentially breaking one! The old behaviour was
	to always prefix $(srcdir)/ to the location provided as the second
	(and forth, sixth, ...) parameter. This needs to be dropped to allow
	for searching in the build directory. To compensate, the default now
	is $(srcdir)/Doxyfile.

	So the following still works:

	DX_INIT_DOXYGEN([foo])
	DX_INIT_DOXYGEN([foo], , [dest-dir])

	While this needs to be changed:
	   DX_INIT_DOXYGEN([foo], [Doxyfile])
	-> DX_INIT_DOXYGEN([foo], [$(srcdir)/Doxyfile])

2015-11-23  Olaf Mandel  <olaf@mandel.name>

	AX_PROG_DOXYGEN: support multiple Doxyfiles
	Allow the DX_INIT_DOXYGEN() macro to take more than one Doxyfile
	and/or output-directory argument. This may be of interest e.g. for
	both public and internal documentation.

	This keeps as much backwards-compatibility as possible: of the
	preexisting variables, only DX_ENV is changed slightly (removed
	DOCDIR).

2015-11-23  Olaf Mandel  <olaf@mandel.name>

	AX_PROG_DOXYGEN: fix doxygen-ps rule
	In the rule for $(PACKAGE).ps depended on by doxygen-ps the
	undefined variable MAKEINDEX_PATH was used instead of the correct
	variable DX_MAKEINDEX. Fixed.

	AX_PROG_DOXYGEN: add support for silent rules
	Any warnings of Doxygen are much easier to see if there are not
	several lines of commands interspersed.

2015-11-23  Olaf Mandel  <olaf@mandel.name>

	AX_PROG_DOXYGEN: provide a DX_RULES substitution
	Convert the previously provided aminclude.am snippet in the
	documentation into a AC_SUBST substitution. This allows for easy
	upgrades to the DX_INIT_DOXYGEN macro without the user having to
	manually update the corresponding section of their Makefile.am.

	As autoconf substitutions are not recursive, also convert all
	@DX_DOCDIR@ and @PACKAGE@ substitutions in the snippet to using
	variables. And as AM_CONDITIONAL also relies on substitution,
	remove all AM_CONDITIONAL calls and instead use a separate
	variable for each of the sections previously enclosed in an if-block.

2015-11-23  Emil Mikulic  <emikulic@gmail.com>

	Add 1.12 to list of lcov versions.
	This version is in Debian now and seems to work fine with the existing macros.

2015-10-13  Olaf Mandel  <olaf@mandel.name>

	AX_CODE_COVERAGE: add CPPFLAGS to skip assertions
	The assert() statement is a very helpful tool for quality assurance
	in nearly every kind of software project. But during code coverage
	it unnecessarily decreases the branch coverage percentage as
	assertions should never fail. This is probably not what the user
	expects as the branch contained inside the assert() statement is not
	visible in the code.

	So in a workflow where first the "check" target is run to see if any
	test fails (e.g. because of a failing assertion) and then the code
	coverage is consulted to see how much of the code was exercised, the
	assertions should not be counted.

	Implement this by adding a variable CODE_COVERAGE_CPPFLAGS which is
	defined to -DNDEBUG if CODE_COVERAGE_ENABLED.

2015-10-10  Olaf Mandel  <olaf@mandel.name>

	AX_CODE_COVERAGE: further silence rules for V=0
	Expand on the pre-existing code_coverage_quiet variables that add
	the --quiet option to lcov and genhtml calls if V=0. This way, any
	warnings are much more visible.

	Completely silence builds for V=0:
	 * hide the two "outer" make invokations of check-code-coverage
	 * display short replacement texts for the three commands inside of
	   code-coverage-capture

2015-10-01  Elliott Sales de Andrade  <quantum.analyst@gmail.com>

	Push C language before testing HDF5 libraries.
	The test uses the C compiler wrapper, so tell autoconf that that should
	be the current language.

2015-09-25  Murray Cumming  <murrayc@murrayc.com>

	AX_PYTHON_DEVEL: provide PYTHON_LIBS, not PYTHON_LDFLAGS
	Because -L and -l are LIBS arguments, not LDFLAGS arguments.
	Calling it PYTHON_LDFLAGS suggested wrongly that they should be
	used in LDFLAGS, which can cause the -L and -l arguments to
	be ignored when they are not in the expected position in the list
	of command line arguments. This is a problem, for instance,
	with the command line generated by AC_LINK_IFELSE.

2015-09-16  Utz-Uwe Haus  <uhaus@cray.com>

	AX_CXX_COMPILE_STDCXX_11: Support for Cray's crayCC compiler (CCE 8.4)
	Cray Compilation Environment 8.4 has full C++11 support through
	"-h std=c++11" command line switch that we didn't test against

2015-09-03  Michael Petch  <mpetch@capp-sysware.com>

	Fixes for AX_EXT / AX_GCC_X86_AVX_XGETBV / AX_GCC_X86_CPUID.
	Submitted in https://savannah.gnu.org/patch/?8730.

2015-09-02  Christian Hergert  <christian@hergert.me>

	AX_COMPILER_FLAGS_LDFLAGS: use AX_APPEND_LINK_FLAGS
	Not all compilers will verify the correctness of flags to the linker, so
	we need to explicitly use the linker when verifying flags.

2015-08-31  consultit  <consultit@katamail.com>

	AX_PYTHON_EMBED: fix quoting

2015-08-30  James Cowgill  <james410@cowgill.org.uk>

	Restore flags properly in ax_check_glu.m4 and ax_check_glx.m4
	applied-upstream:yes
	bug-debian: http://bugs.debian.org/795479

2015-08-30  consultit  <consultit@katamail.com>

	AX_PYTHON_EMBED: update to support python 3.4

	AX_PYTHON: update to support python 3.4

2015-08-26  Peter Simons  <simons@cryp.to>

	AX_LIB_ORACLE_OCI: avoid non-ASCII characters in comments

2015-08-26  Joost van Baal-Ilić  <joostvb+git@uvt.nl>

	Add support for Oracle 12: do not try to link to nnz10 but to nnz12

2015-08-26  Michael Petch  <mpetch@capp-sysware.com>

	AX_EXT: add support for AVX2/AVX512 and other CPU extensions

2015-08-21  Olaf Mandel  <olaf@mandel.name>

	Add AX_GNU_AUTOTEST macro
	Full documentation in ax_gnu_autotest.m4, but TL;DR:

	 * Write tests/testsuite.at as normal
	 * Add to configure.ac: AX_GNU_AUTOTEST
	 * Add to Makefile.am or Makefile.in in top_srcdir:
	   @AX_GNU_AUTOTEST_DEFAULT@
	 * autoreconf && ./configure && make check

	The macro supports multiple test-suites, Makefiles in different
	locations and many more features.

2015-08-07  Paul Norman  <penorman@mac.com>

	Check for attribute support with C++11 macro
	Some compilers pass the other tests while not implementing this
	part of the C++11 specification. The test used also does not
	cause warnings with GCC or Clang, and can be used with -Werror.

2015-07-09  Peter Simons  <simons@cryp.to>

	ax_prog_bison_version: use canonic text formatting

2015-07-09  Jonathan Rajotte  <jonathan.rajotte-julien@efficios.com>

	Add GNU Bison version check
	Valid from Bison v1.29b until now[1].

	[1]http://git.savannah.gnu.org/cgit/bison.git/commit/?id=e79137accc7ea0352cd4677ff22818f9c68d4eab

2015-07-09  Jonathan Rajotte  <jonathan.rajotte-julien@efficios.com>

	ax_prog_flex_version: initial version
	Version check valid starting from http://sourceforge.net/p/flex/flex/ci/712c03b38fb35f9d7f16e0fdd27441c3efda0071/tree/.

2015-07-09  Mitchell Rosen  <mrosen@machinezone.com>

	ax_valgrind_check: Fix a bash-4-ism
	The ‘2&>’ syntax requires a recent version of bash. Use ‘>… 2>&1’
	instead to reduce the requirement.

2015-07-09  Batchyx  <batchman@free.fr>

	ax_append_flag: Fix regression if flag has a ','.
	Commit 0ea2e3 ("Add case of variable contain $1 at end of FLAG") broke
	the case when a flag contains a comma (such as "-Wl,--as-needed"),

	Quote the AS_VAR_APPEND invocation to avoid this problem.

2015-07-07  Reuben Thomas  <rrt@sc3d.org>

	ax_lua.m4: add Lua 5.3 support (thanks, Diab Jerius)

2015-05-23  T.v.Dein  <tlinden@cpan.org>

	AX_BERKELEY_DB_CXX: improve support for FreeBSD
	Submitted in https://savannah.gnu.org/patch/?8672.

2015-05-16  Peter Simons  <simons@cryp.to>

	ax_compute_standard_relative_paths: cosmetic chance to fix the #serial number

2015-05-16  Bastien ROUCARIÈS  <roucaries.bastien@gmail.com>

	Update ax_compute_standard_relative_paths to new autoconf path
	Add and update new autoconf path.

2015-05-12  Olly Betts  <olly@survex.com>

	ax_cxx_compile_stdcxx_11.m4: Support HP aCC
	This compiler needs +std=c++11 to enable C++11 mode:
	http://h21007.www2.hp.com/portal/download/files/unprot/aCxx/PDF_Release_Notes/769149-001.pdf

2015-05-06  Kurt von Laven  <kurt@endlessm.com>

	ax_python_module[_version]: Add Python 3 support.
	Permit dependency checking of both Python 2 and Python 3 modules.
	Default to Python 3 if unspecified.

	ax_python_module: Replace tabs with spaces.

2015-04-21  Peter Simons  <simons@cryp.to>

	ax_compiler_flags_cxxflags: fix #serial number

	ax_compiler_flags_cflags: fix #serial number

	ax_boost_program_options.m4: fix #serial number

2015-04-21  Ting-Wei Lan  <lantw@src.gnome.org>

	ax_compiler_flags: Prevent using bash substring expansion
	Substring expansion such as ${flag:5} is not supported by POSIX, and
	it can cause error for systems not using bash as their default shell.

2015-04-21  Pauli Nieminen  <suokkos@gmail.com>

	Optimize boost program options detection
	Boost program options_description depend on many heavy parts of boost
	leading to very long compilation times with it. For configure detection
	it is better ot use program_options/errors.hpp where error class has
	been right from begin.

2015-04-21  Moritz Klammler  <moritz@klammler.eu>

	Removed non-ASCII characters in comments.
	These characters caused the `macro2m4.py` script to terminate with an error:

	    $ make maintainer-all
	    ...
	    python ./macro2m4.py "m4/ax_compiler_flags_cflags.m4" "stage/ax_compiler_flags_cflags.m4"
	    Traceback (most recent call last):
	    File "./macro2m4.py", line 56, in <module>
	      m = Macro(m4File, computeSerialNumber=True)
	    File "~/src/autoconf-archive/macro.py", line 62, in __init__
	      (header,body) = loadFile(filePath).split("\n\n", 1)
	    File "~/src/autoconf-archive/macro.py", line 8, in loadFile
	      return fd.read()
	    File "/usr/lib/python3.4/encodings/ascii.py", line 26, in decode
	      return codecs.ascii_decode(input, self.errors)[0]
	    UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 3615: ordinal not in range(128)
	    cfg.mk:35: recipe for target 'stage/ax_compiler_flags_cflags.m4' failed
	    make: *** [stage/ax_compiler_flags_cflags.m4] Error 1

	This error might only occur when using Python 3.

	Since all affected characters were apostrophes in comments, I simply replaced
	them with ASCII character 39.

	The serial numbers of the files were incremented.

2015-04-17  Enrico M. Crisostomo  <enrico.m.crisostomo@gmail.com>

	Look for make using the current environment instead of spawning a new shell. Extract the GNU Make version and store it into a variable.

2015-04-11  Peter Simons  <simons@cryp.to>

	Merge pull request #30 from Kurt-von-Laven/master
	ax_python_module_version: Add initial macro.

2015-04-06  Sree Harsha Totakura  <sreeharsha@totakura.in>

	ax_lib_postgresql: do not set HAVE_POSTGRESQL to 1 when the given required version is not found
	This commit also unsets corresponding _CPPFLAGS, _LDFLAGS and, _LIBS variables.

2015-04-06  Sree Harsha Totakura  <sreeharsha@totakura.in>

	ax_lib_postgresql: add POSTGRESQL_LIBS variable
	This new variable contains `-lpq' when HAVE_POSTGRESQL is set to 1.

	Reported-by: Claus Fischer <claus.fischer@clausfischer.com>

2015-04-01  Kurt von Laven  <kurt@endlessm.com>

	ax_python_module_version: Add initial macro.
	The Python module version macro builds on top of the existing Python
	module macro authored by Andrew Collier. The Python module macro checks
	that a Python module is installed, and the Python module version macro
	tests that a Python module is installed at a given version or higher.

2015-03-28  Peter Simons  <simons@cryp.to>

	Merge pull request #28 from wsfulton/ax_path_generic-spaces
	AX_PATH_GENERIC fixes for flags containing spaces

2015-03-28  William S Fulton  <wsf@fultondesigns.co.uk>

	ax_path_generic.m4 fix when the _CFLAGS and _LIBS are provided and they contain a space
	For example:
	./configure PCRE_LIBS='-L/home/me/pcre/lib -lpcre'

2015-03-28  Vadim Zeitlin  <vz-swig@zeitlins.org>

	Don't use non-portable "==" in shell tests.
	Use POSIX "=" instead of "==" which is not supported at least by FreeBSD
	/bin/sh.

2015-03-28  William S Fulton  <wsf@fultondesigns.co.uk>

	AX_BOOST_BASE: Support for native Windows header only libraries
	Native Windows versions of Boost (for Visual C++) have a different
	layout to other platforms. Typically, one has:

	<root>\boost\version.hpp

	This patch adds support for header only libraries.

2015-03-04  Rouven Spreckels  <n3vu0r@nevux.org>

	AX_CXX_COMPILE_STDCXX_11: fix test for for clang with [-Werror,-Wunused-variable]
	See https://savannah.gnu.org/patch/index.php?8608 for further details.

2015-02-27  Reuben Thomas  <rrt@sc3d.org>

	ax.lua.m4: fix Lua prefix path detection
	Patch from Orion Poplawski. I added a couple of minor (and relevant!)
	comment fixes.

	This fixes lua prefix path detection by unquoting a configure shell
	variable that needs to be expanded at run time and by passing in the
	proper arguments.

2015-02-26  Reuben Thomas  <rrt@sc3d.org>

	ax_lua.m4: fix a typo
	And hence bump the copyright year

2015-02-24  Peter Simons  <simons@cryp.to>

	AX_CXX_COMPILE_STDCXX_11: revert "cosmetic change to the copyright lines to make our formatter happy"
	This reverts commit 51d888a54d07aca1a9621e65fb28c3113d5000e6.

2015-02-23  Philip Withnall  <philip.withnall@collabora.co.uk>

	ax_compiler_flags: Eliminate ‘minimum’ and ‘maximum’ warning levels
	These went against the whole concept of providing a baseline set of
	warnings which is set by the module maintainer, since it allowed
	individual developers to opt out of certain classes of warning.

	Remove them, leaving the ‘no’, ‘yes’ and ‘error’ levels. This maintains
	API compatibility of the macros by marking various EXTRA-* variables as
	unused, but still handling them, and merging their values with the
	preceding EXTRA-* variables. For example, all extra ‘maximum’ and
	‘error’ flags are now included in the ‘yes’ level of warnings.

2015-02-23  Philip Withnall  <philip.withnall@collabora.co.uk>

	ax_check_enable_debug: Use $ax_is_release as default for IS-RELEASE
	This makes it easier to use AX_IS_RELEASE together with
	AX_CHECK_ENABLE_DEBUG.

	Now you can do:
	    AX_IS_RELEASE([git-directory])
	    AX_CHECK_ENABLE_DEBUG()
	instead of:
	    AX_IS_RELEASE([git-directory])
	    AX_CHECK_ENABLE_DEBUG(,,,[$ax_is_release])

2015-02-23  Philip Withnall  <philip.withnall@collabora.co.uk>

	ax_compiler_flags: Use $ax_is_release as default for IS-RELEASE param
	This makes it easier to use AX_IS_RELEASE together with
	AX_COMPILER_FLAGS.

	Now you can do:
	    AX_IS_RELEASE([git-directory])
	    AX_COMPILER_FLAGS()
	instead of:
	    AX_IS_RELEASE([git-directory])
	    AX_COMPILER_FLAGS(,,[$ax_is_release])

2015-02-23  Philip Withnall  <philip.withnall@collabora.co.uk>

	ax_compiler_flags: Clarify the EXTRA-* variables are for warnings only
	They are not for general purpose compiler flags.

2015-02-23  Philip Withnall  <philip.withnall@collabora.co.uk>

	ax_compiler_flags: Automate addition of -Wno-error=* flags
	We need to add a -Wno-error=* flag for each -Wno-* flag as some
	compilers will re-enable the warning as an error if -Wall is passed in
	the user’s CFLAGS after we’ve specific -Werror.

	Previously this was done manually for the -Wno-* flags in
	AX_COMPILER_FLAGS_CFLAGS and AX_COMPILER_FLAGS_CXXFLAGS. However, this
	ignored the cases where the user was passing -Wno-* flags as extra-flags
	to the macros.

	Factor this out and automate it so -Wno-error=* flags will be tested and
	appended for any -Wno-* flag specified by the user in extra-flags.

2015-02-23  Philip Withnall  <philip.withnall@collabora.co.uk>

	ax_compiler_flags_cflags: Remove -Waggregate-return
	Historically, this flag has been used because certain old C compilers
	didn’t support it — that’s not really relevant any more. It was also
	used to warn the developer about the potential for overflowing the
	stack. However, I believe the benefits of being able to pass small
	structures (e.g. a GdkRectangle) by value outweights the likelihood of
	putting a huge structure on the stack and overflowing it.

	Within GNOME, a coding standard exists to not return aggregates by value
	because it is hard to generate introspected bindings for such code.
	g-ir-scanner should warn about this instead.

2015-02-20  David King  <dking@redhat.com>

	ax_compiler_flags: Only check for C++ if AC_PROG_CXX is called
	The previous behavior of the macro was to use a C compiler, but when C++
	support was added, it created an unconditional dependency on a C++
	compiler. This is undesirable for most C projects, and slows down
	configure considerably by adding unnecessary checks.

	Add an internal _AX_COMPILER_FLAGS_LANG macro, with the desired language
	as the first argument. Only require the macro for the corresponding
	compiler warning flags if AC_PROG_lang has been called. Enable C support
	by default.

2015-02-20  David King  <dking@redhat.com>

	ax_compiler_flags_cflags: Ensure the current language is C

2015-02-17  Emmanuele Bassi  <ebassi@gnome.org>

	ax-is-release: Add micro-version policy
	The are various projects that use the micro version of $PACKAGE_VERSION
	as an indication of whether the code is a release or if it's a snapshot
	of the source under revision control.

	The micro-version policy follows the existing minor-version policy in
	spirit, if not in regular expression.

2015-02-15  Uli Schlachter  <psychon@znc.in>

	AX_CXX_COMPILE_STDCXX_0X: Fix for -Werror=missing-declarations
	This fixes the following error:

	  conftest.cpp:49:14: error: no previous declaration for 'void
	  test_template_alias_sfinae::test()' [-Werror=missing-declarations]

2015-02-11  Jens Geyer  <jensg@apache.org>

	Added macro to detect Haxe <http://haxe.org> version.

2015-02-11  Peter Johansson  <trojkan@gmail.com>

	AX_APPEND_FLAG: fix regression
	AX_APPEND_FLAG has changed behaviour compared to earlier versions: it
	adds the FLAG also when the variable contains FLAG. I traced down the
	altered behaviour to the two lines

	 [case " AS_VAR_GET(FLAGS) " in
	    *" $1 "*)

	which have changed to

	  AS_CASE([AS_VAR_GET(FLAGS)],
	    ["* $1 *|*$1"]

	besides that AS_CASE is used (which is good imho) the pattern has
	changed and the space around FLAGS in the first argument of AS_CASE has
	gone. This means that e.g. if FLAGS is "alpha beta gamma" that will not
	match the pattern "* $1 *|*$1" for $1 being any of 'alpha', 'beta', or
	'gamma'. I think that is unexpected behaviour.

	This patch restores the original semantics.

	For further details can be found at:

	  http://lists.gnu.org/archive/html/autoconf-archive-maintainers/2015-02/msg00000.html

2015-02-09  Philip Withnall  <philip.withnall@collabora.co.uk>

	ax_compiler_flags: Disable specific flags as errors as well as warnings
	See the new comments for details. Disable specific flags (which were
	already disabled) as errors as well as warnings, to prevent -Wall from a
	build bot effectively re-enabling them as errors.

	Based on
	http://cgit.freedesktop.org/telepathy/telepathy-glib/tree/m4/tp-compiler-warnings.m4#n22.
	Thanks to Simon McVittie.

2015-02-09  Philip Withnall  <philip.withnall@collabora.co.uk>

	ax_compiler_flags: Add a --disable-Werror option
	This will override --enable-compile-warnings and allow fatal warnings to
	be unconditionally disabled.

2015-02-05  Peter Simons  <simons@cryp.to>

	Merge pull request #19 from amigadave/master
	ax_compiler_flags: Add C++ compiler warning checks

2015-02-05  David King  <dking@redhat.com>

	ax_compiler_flags: Adapt for AX_COMPILER_FLAGS_CXXFLAGS
	Use the new AX_COMPILER_FLAGS_CXXFLAGS macro in AX_COMPILER_FLAGS to
	test for available C++ compiler warning options, and AC_SUBST them as
	WARN_CXXFLAGS. Pass the EXTRA-*-CFLAGS variables to
	AX_COMPILER_FLAGS_CXXFLAGS, to avoid an explosion of arguments, and as
	most C++ warnings are also valid C warnings.

2015-02-05  David King  <dking@redhat.com>

	ax_compiler_flags_cxxflags: Add new macro for C++ compiler warnings
	Add a new AX_COMPILER_FLAGS_CXXFLAGS macro, which acts similarly to
	AX_COMPILER_FLAGS_CFLAGS, but for the C++ compiler.

	Modify the default set of warnings slightly, to remove
	-Waggregate-return, because using it makes it difficult to write
	idiomatic C++ code. Add -Wno-overloaded-virtual as a C++-specific
	warning. Remove C-specific warnings such as -Wnested-externs,
	-Wmissing-prototypes, -Wstrict-prototypes,
	-Wdeclaration-after-statement, -Wold-style-definition and
	-Wimplicit-function-declaration.

2015-02-05  Peter Simons  <simons@cryp.to>

	AX_CXX_COMPILE_STDCXX_11: fix #serial number

	AX_CXX_COMPILE_STDCXX_11: cosmetic change to the copyright lines to make our formatter happy

2015-02-05  Philip Withnall  <philip@tecnocode.co.uk>

	ax_generate_changelog: Add a new rule to generate ChangeLogs from git
	See the macro documentation for more details.

2015-02-04  Alexey Sokolov  <sokolov@google.com>

	ax_cxx_compile_stdcxx_11: add a test for SFINAE with template aliases.

2015-02-04  Peter Simons  <simons@cryp.to>

	AX_COMPILER_VERSION: strip trailing whitespace

	AX_COMPILER_FLAGS_GIR: strip trailing whitespace

	AX_IS_RELEASE: cosmetic

2015-02-04  Philip Withnall  <philip.withnall@collabora.co.uk>

	ax_check_enable_debug: Add an IS-RELEASE argument to change the default
	If IS-RELEASE is ‘yes’, the default value for --enable-debug is changed
	to ‘no’, automatically disabling debug (unless explicitly enabled with
	--enable-debug=[yes|profile|info]) for release builds.

2015-02-04  Philip Withnall  <philip.withnall@collabora.co.uk>

	ax_is_release: Add AX_IS_RELEASE to check for compiling release tarballs
	This is a macro providing various different policies for determining
	whether the code being configured and compiled is from a stable release,
	or from a development version. This allows various configuration
	settings, such as whether debug is enabled, to be disabled for stable
	releases.

	A typical example of a policy is to enable stable releases when the .git
	directory is not present.

2015-01-30  Reuben Thomas  <rrt@sc3d.org>

	ax_lua.m4: bump serial by 2
	Missing from previous commit; add 2 to include this commit

	ax_lua.m4: add precautionary casts to number
	Based on a patch from David Favro

2015-01-30  John Peterson  <jwpeterson@gmail.com>

	Test that we can actually #include <omp.h> successfully, not just prototype an OpenMP function.
	This original version of this configure test actually passes on Apple
	LLVM version 6.0 (clang-600.0.51) (based on LLVM 3.5svn), which
	doesn't support OpenMP but also doesn't barf when passed -fopenmp.
	This can lead to a false positive in codes which need to include the
	omp.h header.  The new version of the test addresses this issue.

2015-01-29  David King  <amigadave@amigadave.com>

	ax_compiler_flags_cflags: Fix argument indexes

2015-01-26  Peter Simons  <simons@cryp.to>

	Re-format AX_COMPILER_FLAGS_* into canon and bump the #serial numbers.

2015-01-26  Philip Withnall  <philip.withnall@collabora.co.uk>

	ax_compiler_flags_gir: Add a compiler flags macro for g-ir-scanner
	g-ir-scanner is a tool used within a lot of GNOME projects to generate
	introspection data from C APIs. It has a couple of warning flags (and is
	not likely to gain any more in the future), and chaining them to
	--enable-compile-warnings would be useful.

	Integrate AX_COMPILER_FLAGS_GIR into AX_COMPILER_FLAGS so that it’s
	enabled by default.

2015-01-26  Philip Withnall  <philip.withnall@collabora.co.uk>

	ax_compiler_flags: Split out into separate macros per tool
	Unfortunately, the API for AX_COMPILER_FLAGS does not scale for more
	than two tools, due to the number of parameters required.

	Without breaking API, split AX_COMPILER_FLAGS out into:
	 • AX_COMPILER_FLAGS_CFLAGS
	 • AX_COMPILER_FLAGS_LDFLAGS
	and use both of these in the implementation of AX_COMPILER_FLAGS.

	This means that support for a new tool can be implemented as a separate
	macro, and used inside AX_COMPILER_FLAGS if deemed necessary, without
	necessarily needing to add new EXTRA-* parameters for it — if people
	want to add extra parameters for the tool, they can invoke
	AX_COMPILER_FLAGS_* manually.

2015-01-26  Philip Withnall  <philip.withnall@collabora.co.uk>

	ax_compiler_flags: Document approach for locally disabling warnings
	Instead of using ‘-Wno-*’ to disable a warning which the compiler is
	erroneously emitting, use #pragmas to disable it for a specific source
	code line.

2015-01-16  Philip Withnall  <philip.withnall@collabora.co.uk>

	ax_compiler_flags: Add two extra warning CFLAGS
	-Wimplicit-function-declaration and -Wreturn-type. These are implicitly
	activated by -Wall on GCC, but might not be on other compilers. Best to
	be explicit.

2015-01-14  Peter Simons  <simons@cryp.to>

	AX_CXX_ERASE_ITERATOR_TYPE: fix formatting

2015-01-12  Bastien ROUCARIÈS  <roucaries.bastien@gmail.com>

	Add ax_cxx_erase_constant_iterator.m4
	Test wether iterator of stl for erase are const iterator

2015-01-06  Bastien ROUCARIÈS  <roucaries.bastien@gmail.com>

	Improve m4/ax_check_enable_debug.m4
	Use AS_IF and AS_CASE

	Add case of variable contain $1 at end of FLAG
	Current case does not test if $1 was just added

	Modernize ax_append_flag, ax_check_*_flag
	Use AS_VAR* macro and AS_CASE

	Use gcov location with lcov

	Detect gcov program in m4/ax_code_coverage.m4

2015-01-05  Philip Withnall  <philip.withnall@collabora.co.uk>

	ax_valgrind_check: Support running without libtool
	Support running the macro in projects which have not used LT_INIT.

2015-01-04  Bastien ROUCARIÈS  <roucaries.bastien@gmail.com>

	Improve ax_gcc_version.m4

2015-01-04  Peter Simons  <simons@cryp.to>

	AX_COMPILER_VERSION: avoid use of Unicode characters in documentation

2015-01-04  Bastien ROUCARIÈS  <roucaries.bastien@gmail.com>

	Add obsolete header to ax_cxx_compiler_vendor.m4 and ax_have_opengl.m4

	Add tcc to compiler version

	Add tcc to m4/ax_compiler_vendor.m4

	Add ax_compiler_version
	Allow to check compiler version portably

	Add __CODEGEARC__ to detection of borland compiler

	Modernize ax_cxx_dtor_after_atexit.m4

	Clarify why ax_cxx_dtor_after_atexit.m4
	Use reference to c++ standard

2015-01-03  Vaclav Zeman  <wilx@users.sourceforge.net>

	Check for constructor attribute with and without priority support.

2014-12-29  Bastien ROUCARIÈS  <roucaries.bastien@gmail.com>

	Modernize ax_cxx_default_template_parameters.m4

	Modernize ax_cxx_templates.m4

	Modernize  m4/ax_cxx_const_cast.m4

	Modernize AX_CXX_COMPLEX_MATH_IN_NAMESPACE_STD

	Modernize ax_cxx_bool.m4
	Use modern autoconf construct like AS_IF

	Use AX_COMPILER_VENDOR for AX_CXX_COMPILER_VENDOR

	Add AC_OBSOLETE to m4/ax_have_opengl.m4

2014-12-28  Peter Simons  <simons@cryp.to>

	AX_CHECK_GLX: fix #serial number (and minor cosmetic)

	AX_HAVE_OPENGL: drop trailing whitespace (and fix the #serial number in the process)

2014-12-28  Bastien ROUCARIÈS  <roucaries.bastien@gmail.com>

	Use ax_check_gl* for ax_have_opengl
	BTW depreceate it.

2014-12-28  Bastien ROUCARIÈS  <roucaries.bastien@gmail.com>

	Improve compatibility with ax_have_opengl
	Create have_* variable

	Create even two version for have_glut and have_GLUT (for compatibility reasons)

2014-12-28  Bastien ROUCARIÈS  <roucaries.bastien@gmail.com>

	Add ax_check_glx.m4
	Allow to detect glx if needed.

2014-12-28  Bastien ROUCARIÈS  <roucaries.bastien@gmail.com>

	Prepare to replace ax_have_opengl by call of ax_check_gl
	Add a new parameter --with-mesa in order to be compatible with ax_have_opengl.m4
	convention.

	This new parameter allow to choose order of detection of opengl lib.

2014-12-27  Emil Mikulic  <emikulic@gmail.com>

	AX_CODE_COVERAGE requires AC_PROG_SED.

2014-12-18  Tim Perkins  <tprk77@gmail.com>

	ax_lua.m4: serial number, oops.
	Changing some text so the serial number catches up with git.

2014-12-17  Tim Perkins  <tprk77@gmail.com>

	ax_lua.m4: make Lua pieces work with Lua 5.0.
	Plus some other minor changes, like a warning for the cross compling stuff.

2014-12-13  Peter Simons  <simons@cryp.to>

	AX_LUA: cosmetic

2014-12-13  Tim Perkins  <tprk77@gmail.com>

	ax_lua.m4: proper use of sed.

2014-12-10  Peter Simons  <simons@cryp.to>

	Merge pull request #9 from pwithnall/ax-pkg-check-modules-args
	AX_PKG_CHECK_MODULES: Add ACTION-IF-[NOT-]FOUND arguments

2014-12-10  Philip Withnall  <philip.withnall@collabora.co.uk>

	AX_PKG_CHECK_MODULES: Add ACTION-IF-[NOT-]FOUND arguments
	So that AX_PKG_CHECK_MODULES can be used in every situation which
	PKG_CHECK_MODULES is currently used in. The new arguments have been
	inserted part-way through the argument list, so this breaks API for
	invocations where the PUBLIC-VARIABLE or PRIVATE-VARIABLE arguments have
	been specified. It is assumed that very few invocations do this.

	This increases the macro serial.

2014-12-10  Tim Perkins  <tprk77@gmail.com>

	Revert "AX_LUA: fix initialization of ac_cv_header_lua_h."
	This reverts commit 825427776a2a1223b64c29c9a458ee31874a8e82.

	Conflicts:
		NEWS

2014-12-08  Philip Withnall  <philip.withnall@collabora.co.uk>

	AX_VALGRIND_CHECK: Refactor a little to ensure log files are cleaned
	Add the log files to MOSTLYCLEANFILES and take the opportunity to
	refactor the code a little to reduce duplication for different Valgrind
	tools.

	Note that the valgrind_*_flags variables are necessary because the
	sgcheck tool has an odd --tool=exp-sgcheck argument, rather than
	--tool=sgcheck. This is because it is experimental. I want the
	autoconf macro to consistently refer to it as sgcheck so that nothing
	changes when it becomes non-experimental.

2014-12-08  Philip Withnall  <philip.withnall@collabora.co.uk>

	AX_VALGRIND_CHECK: Add a macro to enable Valgrind on `make check`
	See the documentation in the macro file for a full description.

2014-12-03  Kevin Cernekee  <cernekee@gmail.com>

	AX_CHECK_VSCRIPT: initial version
	Further details can be found at <https://savannah.gnu.org/patch/?8582>.

2014-11-30  Philip Withnall  <philip.withnall@collabora.co.uk>

	AX_COMPILER_FLAGS: Add macro enabling a consistent set of compiler flags
	See the documentation comment at the top of the file for a full
	description of what this macro does.

	AX_PKG_CHECK_MODULES: Add pkg-config wrapper splitting private deps
	See the documentation in the macro file for a full description.

2014-11-13  Vinson Lee  <vlee@freedesktop.org>

	AX_PROG_FLEX: Also accept gflex.
	On OpenBSD flex 2.5.35 is called gflex.

2014-10-26  Chun-Chung Chen  <cjj@u.washington.edu>

	AX_LIB_HDF5: remove extra space from include path flag
	The code parsing the output of h5cc for the "Installation point:" results in an
	extra leading space. The space creeps into HDF5_CPPFLAGS and breaks the include
	path flag into two tokens, e.g., "-I" and "/usr/include". While this may be
	legal and doesn't affect the compilation, it does break some library
	tools (e.g., when the macro is used in building a dynamic library that uses
	pkg-config).

2014-10-23  Peter Simons  <simons@cryp.to>

	AX_PERL_MODULE_VERSION: use more portable syntax for shell arithmetic

2014-10-22  karypid  <karypid@yahoo.co.uk>

	Support standard Oracle JDK installation layout on Mac OS X.

2014-10-17  kedzie  <mark.kedzierski@gmail.com>

	Fixed variable name type (ax_prog_javah_bin_dir) and follow javah symlink to java installation folder to find jni.h

2014-10-16  Peter Simons  <simons@cryp.to>

	AX_BOOST_PYTHON: use unique names for local variables

2014-10-15  Sree Harsha Totakura  <sreeharsha@totakura.in>

	AX_LIB_POSTGRESQL: substitute CPPFLAGS rather than CFLAGS

2014-10-15  Tsukasa OI  <li@livegrid.org>

	AX_GCC_ARCHFLAG: add workaround for Clang
	LLVM Clang does not fail if -mcpu=UNKNOWN or -mtune=UNKNOWN is
	specified. This will result in "no CPU tuning".

	This commit resolves the issue by adding workaround for Clang.

2014-10-15  Tsukasa OI  <li@livegrid.org>

	AX_GCC_ARCHFLAG: reorder option checking for Clang
	LLVM Clang does not fail if -mcpu=UNKNOWN or -mtune=UNKNOWN is
	specified. This will result in "no CPU tuning".

	This fix changes order of option checking to support LLVM Clang.

2014-10-15  Tsukasa OI  <li@livegrid.org>

	AX_GCC_ARCHFLAG: rewrite x86 support
	x86 support is completely rewritten to simplify processor identification
	and make CPUID identification robust.

2014-10-15  Vaclav Zeman  <vhaisman@gmail.com>

	AX_GCC_VAR_ATTRIBUTE: support init_priority attribute

2014-10-15  Peter Simons  <simons@cryp.to>

	AX_PERL_MODULE_VERSION: fix typo
	Other unfixed issues remain. See <https://savannah.gnu.org/patch/index.php?8507>.

2014-10-15  Daniel Muellner  <daniel@danifold.net>

	AX_BOOST_PYTHON: major re-write
	See https://savannah.gnu.org/patch/index.php?8540 for details.

2014-10-15  Alex Henrie  <alexhenrie24@gmail.com>

	AX_HAVE_QT: Only check $PATH and qmake for Qt variables
	The old logic for detecting Qt without $PATH or qmake was never very
	reliable and the last change to this macro broke it entirely. If the
	Qt variables cannot be found via $PATH and qmake, then it would be best
	to manually define them in the makefile.

2014-10-15  Thomas Jahns  <jahns@dkrz.de>

	Fix quoting problem in AX_TLS.
	* This change also eliminates a variable only assigned/used once.

2014-10-15  Timothy Brown  <tbrown@freeshell.org>

	Bug fix and improvements to ax_f90_library.m4.
	1) The message uses a lower case "f" for the word fortran. However
	   most other autoconf macros use "F".

	2) The search path prepends $prefix, yet does not check to see
	   if this "NONE" (the default). When it is NONE, the find command
	   complains (as a directory called NONE normally does not exist).

	3) Removed a white space between the "-L" and the directory for
	   the LDFLAGS search path.

	4) The "action-found" and "action-not-found" logic was incorrect.
	   The default test is for not found, which would execute the users
	   supplied found action. Swapped these around.

2014-10-15  Jimmy Jazz  <Jimmy.jazz@gmx.net>

	AX_LUA: fix initialization of ac_cv_header_lua_h.

2014-10-15  Luke Mewburn  <luke@mewburn.net>

	AX_AT_CHECK_PATTERN: executes a test similar to AT_CHECK(), except that stdout and stderr are awk regular expressions
	Further details can be found at <https://savannah.gnu.org/patch/?8492>.

2014-10-15  Moritz Klammler  <moritz@klammler.eu>

	AX_OPENMP: Prevent false negative due to -Wunused-variable

2014-10-15  Eric Bavier  <bavier@member.fsf.org>

	ax_compiler_vendor.m4: relocate cray compiler.
	* m4/ax_compiler_vendor.m4 (vendors): Move cray before gnu.

2014-10-15  Jeremie Knuesel  <jeremie.knusel@sensefly.com>

	Fix AX_ENABLE_BUILDDIR in case of absolute configure path

2014-09-14  Peter Simons  <simons@cryp.to>

	AX_CODE_COVERAGE: avoid utf-8 characters in the documentation

	AX_CHECK_ENABLE_DEBUG: avoid utf-8 characters in the documentation

2014-09-14  Alex Henrie  <alexhenrie24@gmail.com>

	AX_HAVE_QT: auto-detect Qt 5 by querying $PATH and qmake
	The old logic for detecting Qt did not work for newer versions of Qt,
	nor did it work on newer Debian/Ubuntu because of multiarch. I've
	replaced the old hacks and heuristics with clean code that uses a Qt 5
	pro file to detect Qt's parameters from $PATH and qmake. Qt 4 and
	earlier do not support this kind of introspection, but any version of
	Qt can still be used by explicitly specifying its parameters.

	Submitted in <https://savannah.gnu.org/patch/index.php?8486>.

2014-09-14  Dinar Valeev  <dvaleev@suse.com>

	AX_BOOST_BASE: add ppc64le to the list of lib64 architectures

2014-09-14  Peter Simons  <simons@cryp.to>

	AX_PROG_DOXYGEN: fix makefile logic
	Submitted in <https://savannah.gnu.org/patch/index.php?8462>.

2014-09-14  Philip Withnall  <philip@tecnocode.co.uk>

	AX_CHECK_ENABLE_DEBUG: add an --enable-debug option which defines an ENABLE_DEBUG cpp variable if set
	Submitted in <https://savannah.gnu.org/patch/index.php?8452>.

2014-09-14  Peter Simons  <simons@cryp.to>

	AX_CODE_COVERAGE: new macro which contains all the necessary logic and Makefile rules for instrumenting a project with code coverage using lcov.
	Submitted in <https://savannah.gnu.org/patch/index.php?8451>.

2014-09-14  david.e.pi.3.14  <david.e.pi.3.14@gmail.com>

	AX_LIB_HDF5: don't overwrite the CPPFLAGS variable
	Submitted in <https://savannah.gnu.org/patch/index.php?8449>.

2014-09-14  Peter Simons  <simons@cryp.to>

	AX_BOOST_BASE: fix for x32 systems
	Submitted in <https://savannah.gnu.org/patch/index.php?8433>.

2014-09-14  Kirill A. Korinskiy  <catap@catap.ru>

	AX_BERKELEY_DB(_CXX): add --with-libdb option
	Main idea this patch is a specified a location where was installed libDB. On my
	OS X system DB was installed to /usr/local/opt/berkeley-db4 when I did it by
	home-brew and without this path I can't use this macross.

	Submitted in <https://savannah.gnu.org/patch/index.php?8416>.

2014-09-14  Enrico M. Crisostomo  <enrico.m.crisostomo@gmail.com>

	AX_CXX_HAVE_PLACEHOLDERS: check if std::placeholders is defined in <functional>
	Submitted it <https://savannah.gnu.org/patch/index.php?8414>.

2014-09-14  Peter Simons  <simons@cryp.to>

	AX_LIB_HDF5: add support for recognizing HDF5 built with ccache
	The ax_lib_hdf5.m4 autoconf macro uses awk to determine which compiler was used
	to build HDF5. This fails if HDF5 was built using ccache because "ccache" is
	then used as HDF5_CC instead of the actual compiler wrapped by ccache. The
	attached patch fixes that.

	Submitted in <https://savannah.gnu.org/patch/index.php?8450>.

2014-09-14  Enrico M. Crisostomo  <enrico.m.crisostomo@gmail.com>

	AX_CXX_HAVE_REF: remove dependency on AX_CXX_NAMESPACES

	AX_CXX_HAVE_MEM_FN: remove dependency on AX_CXX_NAMESPACES

	AX_CXX_HAVE_IS_PLACEHOLDER: remove dependency on AX_CXX_NAMESPACES

	AX_CXX_HAVE_IS_BIND_EXPRESSION: remove dependency on AX_CXX_NAMESPACES

2014-09-13  Enrico M. Crisostomo  <enrico.m.crisostomo@gmail.com>

	AX_CXX_HAVE_HASH: remove dependency on AX_CXX_NAMESPACES

	AX_CXX_HAVE_FUNCTION: remove dependency on AX_CXX_NAMESPACES

2014-09-13  Tsukasa OI  <li@livegrid.org>

	AX_CC_MAXOPT: add support for ICC 11.0 and later
	This commit adds support for Intel C++ Compiler 11.0 and later.
	It also adds support for latest Intel processors.

	AX_CC_MAXOPT: make CPUID patterns robust
	This fixes CPUID patterns to make them robust.
	It also contains minor additions of Intel CPUs.

2014-09-13  Enrico M. Crisostomo  <enrico.m.crisostomo@gmail.com>

	AX_CXX_HAVE_CREF: remove dependency on AX_CXX_NAMESPACES

2014-09-13  Thomas Jahns  <jahns@dkrz.de>

	AX_EXECINFO: new macro to test execinfo size type
	<execinfo.h> has been available on a number of systems now, but unfortunately
	different systems use different types to represent the size of the backtrace,
	with netBSD and FreeBSD using size_t and Linux, Mac OS X. To build calls that
	work with both implementations without warning, this macro not only checks if
	the execinfo header is available but also what type is used for the len
	argument of backtrace_symbols and the return value of backtrace.

	All in all this macro defines

	    HAVE_EXECINFO_H if execinfo.h can be included,
	    backtrace_size_t to the len argument type, i.e. int or size_t,
	    HAVE_BACKTRACE to 1 if the function can be linked to,

	and append any library needed to LIBS (e.g. some BSD's need -lexecinfo).

	Submitted in <https://savannah.gnu.org/patch/index.php?8525>.

2014-09-13  Enrico M. Crisostomo  <enrico.m.crisostomo@gmail.com>

	AX_CXX_HAVE_BIT_XOR: remove dependency on AX_CXX_NAMESPACES

2014-09-13  Olaf Lenz  <olenz@icp.uni-stuttgart.de>

	AX_CXX_VAR_PRETTYFUNC: new macro to determine the function name
	This new macro determines the best way to get the name of the current function
	for different C++-compilers and -dialects (in the spirit of _FILE_ and _LINE_).

	The patch also fixes some problems in AX_C_VAR_FUNC.

	Submitted in <https://savannah.gnu.org/patch/index.php?8524>.

2014-09-13  Enrico M. Crisostomo  <enrico.m.crisostomo@gmail.com>

	AX_CXX_HAVE_BIT_OR: remove dependency on AX_CXX_NAMESPACES

	AX_CXX_HAVE_BIT_AND: remove dependency on AX_CXX_NAMESPACES

	AX_CXX_HAVE_BIND: remove dependency on AX_CXX_NAMESPACES

	AX_CXX_HAVE_BAD_FUNCTION_CALL: remove dependency on AX_CXX_NAMESPACES

2014-09-13  ryanvm  <ryanvm@gmail.com>

	AX_CC_MAXOPT: default to -O2 for MSVC
	Right now, ax_cc_maxopt.m4 ends up falling back onto -O3 when invoked
	with MSVC. We should default to -O2 instead.

2014-09-13  Enrico M. Crisostomo  <enrico.m.crisostomo@gmail.com>

	AX_CXX_HAVE_REFERENCE_WRAPPER: remove dependency on AX_CXX_NAMESPACES

2014-08-03  Reuben Thomas  <rrt@sc3d.org>

	ax_lua.m4: rewrite _AX_LUA_FND_PREFX_PTH
	Rewrite in Lua for robustness and brevity.

	Also make it understand the Lua style of ?-pattern path.

	Patch from Gary Vaughan (gary@gnu.org)

2014-08-02  Reuben Thomas  <rrt@sc3d.org>

	m4: fix one-argument AX_PROG_LUA invocation
	* m4/ax_lua.m4 (_AX_LUA_CHK_VER): If version pattern match fails
	return nil, then treat the "toobig" version number as math.huge.

2014-07-24  Reuben Thomas  <rrt@sc3d.org>

	ax_lua.m4: use redirections portably
	* m4/ax_lua.m4 ( _AX_LUA_CHK_IS_INTRP): For portability, replace
	  `&>` with `>/dev/null 2>&1`.

	ax_lua.m4: fix a package module entry typo.
	* m4/ax_lua.m4 (AX_PROG_LUA): s/package\.cpathd/package.cpath/.

2014-07-23  Reuben Thomas  <rrt@sc3d.org>

	ax_lua.m4: refix a line broken by the previous commit

2014-05-23  Reuben Thomas  <rrt@sc3d.org>

	ax_lua.m4: various under-the-hood improvements
	Use Lua interpreter for its own version analysis, for shorter and more
	readable code.

	Add fallback header support when cross-compiling.

	Fix a GNUism in a grep call.

	(All via Gary Vaughan <gary@gnu.org>)

2014-03-14  Jonathan Gray  <jsg@jsg.id.au>

	AX_PROG_FLEX: avoid use of grep empty string escape extension (fix for OpenBSD)

2014-03-08  Karlson2k (Evgeny Grin)  <k2k@narod.ru>

	AX_COUNT_CPUS: add support for Win32 (and Win64)

2014-02-28  Dmitrij D. Czarkoff  <czarkoff@gmail.com>

	AX_LUA: OpenBSD support

2014-02-28  Peter Simons  <simons@cryp.to>

	AX_PREFIX_CONFIG_H: cosmetic

2014-02-28  Reuben Thomas  <rrt@sc3d.org>

	ax_prefix_config_h.m4: update documentation
	Remove references to earlier AC_PREFIX_CONFIG_H macro, of which the
	net no longer has more than the faintest trace. Clarify the purpose at
	the start of the documentation, and improve the English a little.

2014-02-24  Peter Simons  <simons@cryp.to>

	AX_RUBY_EXT: fix formatting of the license text

2014-02-24  Thomas Klausner  <tk@giga.or.at>

	AX_PERL_EXT: report back the installation prefix as PERL_EXT_PREFIX

2014-02-24  Reinhard Prix  <reinhard.prix@aei.mpg.de>

	AX_EXT: handle case where AX_GCC_X86_CPUID(0x00000001) returns 'unknown'

2014-02-24  Sebastian Freundt  <hroptatyr@fresse.org>

	ax_zoneinfo.m4: put AIX zoneinfo path into search path
	This changeset will allow AX_ZONEINFO to find the zoneinfo files
	on AIX >=6.1.

2014-02-24  Li-Wen Hsu  <lwhsu@lwhsu.org>

	AX_LUA: FreeBSD support

2014-02-24  Peter Simons  <simons@cryp.to>

	AX_PYTHON_DEVEL: add SYSLIBs to PYTHON_EXTRA_LIBS
	This patch is needed when the python library has been built statically. The
	math symbols like sin, cos, etc are left undefined in the .a file so we must
	inform the user of the library to link against libm, whose linker
	argument (-lm) is defined under SYSLIBS.

	Further details are at <https://savannah.gnu.org/patch/?8309>.

2014-02-24  Enrico M. Crisostomo  <enrico.m.crisostomo@gmail.com>

	AX_CXX_HAVE_REF: initial version

	AX_CXX_HAVE_MEM_FN: initial version

	AX_CXX_HAVE_IS_PLACEHOLDER: initial version

	AX_CXX_HAVE_IS_BIND_EXPRESSION: initial version

	AX_CXX_HAVE_HASH: initial version

	AX_CXX_HAVE_FUNCTION: initial version

	AX_CXX_HAVE_CREF: initial version

	AX_CXX_HAVE_BIT_XOR: initial version

	AX_CXX_HAVE_BIT_OR: initial version

	AX_CXX_HAVE_BIT_AND: initial version

	AX_CXX_HAVE_BIND: initial version

	AX_CXX_HAVE_BAD_FUNCTION_CALL: initial version

	AX_CXX_HAVE_REFERENCE_WRAPPER: initial version

2014-02-07  Alexander Afanasyev  <alexander.afanasyev@ucla.edu>

	AX_BOOST_BASE: additional fix lib detection on multi-arch systems
	On 32-bit platforms, ${host_cpu} corresponds to a specific cpu, such as
	i386, i486, i586, i686, while Ubuntu 13.10 assumes that for all 32-bit
	platforms libraries are located in lib/i386-gnu-linux folder.

2014-02-07  Leo Davis  <ldavis@speechfxinc.com>

	M4sugar and M4sh added to AX_PROG_JAR, AX_PROG_JAVA, AX_PROG_JAVAC, and AX_PROG_JAVADOC. Also fixed a path discrepancy with AX_JAVA_OPTIONS.
	The discrepancy is AX_JAVA_OPTIONS sets up a variable JAVAPREFIX
	which is described to the user as the "prefix where the Java runtime
	is installed".  Unfortunately, that directory doesn't contain any
	executables, but $JAVAPREFIX/bin does.

	This incorrect path was passed in the value-if-not-found parameter
	of AC_CHECK_PROGS which is incorrect.  I fixed the path and pass it
	in to the path parameter.

2014-02-07  Leo Davis  <ldavis@speechfxinc.com>

	Added M4sh to AX_PROG_JAVAH.
	Removed the changequote also.

2014-02-07  Alexey Sokolov  <sokolov@google.com>

	AX_CXX_COMPILE_STDCXX_11: fix "mandatory" option and add more C++11 feature tests
	See <https://savannah.gnu.org/patch/index.php?8287> for further details.

2014-02-06  Reuben Thomas  <rrt@sc3d.org>

	ax_lib_curl.m4: fix a couple of tiny typos

2014-01-15  Mike Frysinger  <vapier@gentoo.org>

	AX_REQUIRE_DEFINED: new helper for requiring macros exist
	In cases where we want to require that a macro exists, but not call it,
	introduce a new AX_REQUIRE_DEFINED helper.  The existing AC_REQUIRE macro
	will call its argument and does not allow for passing of additional args
	to the macro.

	Once we have this in place, cut a few callers over to it to fix bugs where
	they'd accidentally call other helpers w/out any flags.

2013-12-19  Peter Simons  <simons@cryp.to>

	Add NEWS item and adapt the macro documentation for our HTML renderer.

2013-12-19  Gabriele Svelto  <gabriele.svelto@gmail.com>

	Add a macro to check GCC-compatible variable attributes

	Add a macro for checking GCC-compatible function attributes

	Add a macro for checking GCC-compatible built-in functions

2013-12-15  Cory Fields  <cory-nospam-@coryfields.com>

	AX_BOOST_BASE: fix lib detection on multi-arch systems
	Fixes lib detection on Ubuntu 13.10 x86_64 and likely elsewhere as well.

2013-12-10  Jeremiah Willcock  <jewillco@osl.iu.edu>

	AX_CREATE_PKGCONFIG_INFO: fix cut-and-paste error
	See <http://savannah.gnu.org/patch/?8238> for further details.

2013-12-10  Karl Wette  <karl.wette@ligo.org>

	AX_CHECK_{PREPROC,COMPILE,LINK}_FLAG: add optional INPUT argument
	- for supplying an alternative input source to AC_{PREPROC,COMPILE,LINK}_IFELSE
	- defaults to AC_LANG_PROGRAM(), so fully backward-compatible

2013-12-10  Peter Simons  <simons@cryp.to>

	AX_GCC_ARCHFLAG: fix recognition of UltraSparc IIi
	Further details can be found at <http://savannah.gnu.org/patch/?8235>.

2013-12-01  Akim Demaille  <akim@lrde.epita.fr>

	AX_PREFIX_CONFIG_H: remove debug code accidentally committed earlier

2013-11-26  Akim Demaille  <akim@lrde.epita.fr>

	AX_PREFIX_CONFIG_H: fix several cases of under-quotation

2013-10-27  Olaf Lenz  <olenz@icp.uni-stuttgart.de>

	AX_PROG_CXX_MPI: recognize an MPI C++ compiler
	Further details are at <http://savannah.gnu.org/patch/?8218>.

2013-10-19  Diab Jerius  <djerius@cfa.harvard.edu>

	AX_AM_OVERRIDE_VAR: allow "overriding" of user provided variables for Automake
	See <http://savannah.gnu.org/patch/?8213> for further details.

2013-10-19  Peter Simons  <simons@cryp.to>

	AX_COMPILER_VENDOR: add support for detection of Fujitsu compilers
	See <http://savannah.gnu.org/patch/index.php?8212> for further details.

2013-10-19  Sveinung Kvilhaugsvik  <sveinung84@users.sourceforge.net>

	AX_TRY_RUN_JAVA and AX_TRY_COMPILE_JAVA: Don't delete unrelated files and folders during clean up.

	AX_PROG_SCALA: find the path to and version of Scala

	AX_FIND_SCALA_STDLIB: add support for finding the jar containing the Scala Standard Library

2013-10-18  Peter Simons  <simons@cryp.to>

	AX_{SAVE,RESTORE,SWITCH}_FLAGS: re-instate the copyright notice for Stanford

2013-10-06  Peter Simons  <simons@cryp.to>

	AX_{SAVE,RESTORE,SWITCH}_FLAGS: cosmetic changes to fix the texinfo pretty-printer

2013-10-05  Bastien ROUCARIÈS  <roucaries.bastien@gmail.com>

	Add more flags to AX_SAVE_FLAGS
	Add more flags to save/restore

2013-10-05  Bastien ROUCARIÈS  <roucaries.bastien@gmail.com>

	Improve save/restore flags
	Add generic list of flags to save/restore

	Add a namespace prefix in order to nest save/restore

2013-10-03  Peter Simons  <simons@cryp.to>

	Fix #serial number.

2013-10-03  Sveinung Kvilhaugsvik  <sveinung84@users.sourceforge.net>

	Add /usr/share/java to ax_xtra_classpath's search path.

	Use AC_PROG_SED in stead of AC_CHECK_PROG(SED, sed)

2013-10-03  Peter Simons  <simons@cryp.to>

	AX_FIND_JUNIT: fix #serial number

	AX_FIND_HAMCREST: fix #serial number

2013-10-03  Sveinung Kvilhaugsvik  <sveinung84@users.sourceforge.net>

	Add support for detecting a Scala compiler

	Add support for finding the jars of JUnit and Hamcrest.
	If JUnit don't include its dependency Hamcrest it will look for it.

	Fix spelling of "available".

2013-10-03  Daniel Richard G  <skunk@iSKUNK.ORG>

	AX_PTHREAD: add support for Clang
	Further details can be found at <http://savannah.gnu.org/patch/?8186>.

2013-10-02  Peter Simons  <simons@cryp.to>

	Bump #serial number after recent changes.

2013-09-29  Bastien ROUCARIÈS  <roucaries.bastien@gmail.com>

	Correct a typo in ax_with_curses.m4
	s/AX_MSG_ERROR/AC_MSG_ERROR/g

2013-09-12  Peter Simons  <simons@cryp.to>

	AX_GCC_LIBRARIES_DIR: mark obsolete because it depends on the obsolete AX_GCC_OPTION macro

	AX_GCC_VERSION: mark obsolete because it depends on the obsolete AX_GCC_OPTION macro

2013-08-31  Arto Bendiken  <arto@bendiken.net>

	AX_PROG_JAVA_WORKS: add current directory to -classpath list
	See <http://savannah.gnu.org/patch/?8171> for further details.

2013-08-24  Daniel Casimiro  <dan.casimiro@gmail.com>

	Boost: add macros to detect Boost.Log and Boost.Coroutine

2013-08-24  Peter Simons  <simons@cryp.to>

	AX_PROG_PERL_VERSION: fix detection of recent perl versions
	Recent perl versions have parens around the version string. See
	http://savannah.gnu.org/patch/?8144 for further details.

2013-08-24  Kevin Cernekee  <cernekee@gmail.com>

	AX_JNI_INCLUDE_DIR: Try searching $JAVA_HOME first
	JAVA_HOME is a standard way to indicate the path to the JDK.  If it
	isn't defined, fall back to the old $JAVAC method.

	Also, if javac is already in the PATH, don't force the user to
	explicitly set $JAVAC.

2013-08-24  Kevin Cernekee  <cernekee@gmail.com>

	AX_JNI_INCLUDE_DIR: Use AC_CHECK_FILE for jni.h existence checks
	Using AC_CHECK_FILE provides helpful diagnostic output to the user in
	case the check fails:

	    checking for /foo/bar/jdk1.23/include/jni.h... no
	    checking for /foo/bar/include/jni.h... no
	    configure: error: cannot find JDK header files

2013-08-24  Arto Bendiken  <arto@bendiken.net>

	AX_PROG_JAVAH: fix AC_CANONICAL_TARGET warnings
	Further detail is available at <http://savannah.gnu.org/patch/?8168>.

2013-07-16  Peter Simons  <simons@cryp.to>

	ax_cxx_namespaces.m4: avoid non-ASCII characters in comment section

2013-07-16  Bastien Roucariès  <roucaries.bastien+autoconf@gmail.com>

	AX_CXX_NAMESPACES: prefer AC_COMPILE_IFELSE internally

2013-07-06  Michael Petch  <mpetch@capp-sysware.com>

	AX_EXT: determine if the OS actually supports AVX
	AX_EXT checks for different SIMD variants on a CPU. It checks for AVX, but
	doesn't go far enough to actually be useful in some cases. It is possible to be
	on a CPU with AVX support and the OS doesn't support it. We should be checking
	that such support exists. This is via an additional check of cpuinfo's ECX
	register bit 27. Then one needs to call xgetbv and if EAX&0b110 = 0b110 then
	AVX is supported by the CPU and OS.

	Further details are at <http://savannah.gnu.org/patch/?8084>.

2013-07-05  Michael Petch  <mpetch@capp-sysware.com>

	AX_EXT, AX_GCC_ARCHFLAG: improve support for 64-bit FreeBSD

2013-06-19  Andreas Schwab  <schwab@linux-m68k.org>

	AX_BOOST_BASE: add aarch64 to the list of lib64 architectures

2013-06-12  Janne Blomqvist  <blomqvist.janne@gmail.com>

	AX_LIB_HDF5: fix typo
	See <https://savannah.gnu.org/patch/?8069> for further details.

2013-06-05  Peter Simons  <simons@cryp.to>

	AX_XSDCXX: minor cosmetic change

2013-06-05  Andreas Oberritter  <obi@saftware.de>

	ax_prog_flex: change grep syntax to accept e.g. "flex.real" in case a wrapper or symlink is used.

2013-06-05  Timothy Brown  <tbrown@freeshell.org>

	AX_LIB_HDF5: various updates
	 - Added variables HDF5_CC and HDF5_FC that one could use to override CC and FC.

	 - Added the variable HDF5_LIBS.

	 - Modified the test of H5CC to make sure it is a file, as a directory returns
	   true to "test -x" if it is searchable.

	 - Tried to combine all the tests to get CFLAGS, LDFLAGS etc to be more robust.

	See <https://savannah.gnu.org/patch/?8026> for further details.

2013-06-05  Laszlo Kajan  <lkajan@rostlab.org>

	AX_XSDCXX: find the CodeSynthesis XSD executable and headers

2013-06-05  Daniel Müllner  <muellner@math.stanford.edu>

	AX_PYTHON_DEVEL: don't override LOCALMODLIBS
	According to

	  https://lists.ubuntu.com/archives/ubuntu-devel/2010-March/030430.html

	it is wrong to use LOCALMODLIBS in the flags.

	See <http://savannah.gnu.org/patch/index.php?8065> for further details.

2013-06-05  Sebastian Freundt  <freundt@fresse.org>

	AX_ZONEINFO: improve portability
	This patch improves portability of ax_zoneinfo.m4 shell code. Backticks
	are used instead of $(...) subshelling. Generated temporary files are
	deleted after use. Quoting inside backtick assignments is done properly.
	For convenience an AC_ARG_VAR is provided so users can set TZDIR on the
	configure line.

	Further details are at <http://savannah.gnu.org/patch/index.php?8029>.

2013-04-20  Mike Frysinger  <vapier@gentoo.org>

	AX_ENABLE_DEFAULT_ACLOCALDIR: fix configure flag
	The first arg to AC_ARG_ENABLE needs to omit the "enable"/"disable" part.
	Otherwise the current code ends up using the flags:

		--enable-enable-default-aclocaldir
		--disable-enable-default-aclocaldir

	Also convert to AS_HELP_STRING to keep the help string simple.

2013-04-07  Peter Simons  <simons@cryp.to>

	AX_CHECK_GLUT: cosmetic markup fix for better HTML rendering

	AX_CHECK_GLU: cosmetic markup fix for better HTML rendering

2013-04-07  Bastien ROUCARIÈS  <roucaries.bastien@gmail.com>

	Improve ax_check_glut
	- Use modern construct
	- test link/compile/headers
	- add more comments

	Fix a typo
	replace _AX_CHECK_GL_SAVE_FLAGS by _AX_CHECK_GLU_SAVE_FLAGS

	Simplify required macro by ax_check_glu.m4
	ax_check_glu does not require information about c compiler.

	Fix detection of gl by pkg-config
	* fix detection by pkg-config and run when available
	* fixe a typo s/GL_FLAG/GL_CFLAGS/g

	Improve glu detection
	* use pkg-config if available
	* in all the case test tesselation callback
	* do not try to run with c++ glu is implicitly a c lib

	Improve ax_check_glu.m4
	- remove obsolete text
	- bump serial
	- add myself under copyright
	- use internal ax_sav_flags/ax_restore_flags

	Partial revert "Dropped obsolete macros from the distribution."
	This reverts commit 01738c00a51efab548b7270108d0ed8084a08ac7 particularly
	m4/ax_check_glu.m4 and m4/ax_check_glut.m4.

2013-04-05  Timothy Brown  <tbrown@freeshell.org>

	AX_LIB_SAMTOOLS: address review comments by Peter Johansson

	AX_LIB_TABIX: address review comments by Peter Johansson

2013-04-04  Daniel Mullner  <muellner@math.stanford.edu>

	AX_PYTHON_DEVEL: improve support for MacOS X

2013-04-01  Roy Stogner  <roystgnr@ices.utexas.edu>

	AX_CXX_COMPILE_STDCXX_11: address review comments from Zack Weinberg

2013-04-01  Peter Simons  <simons@cryp.to>

	AX_CHECK_GL: forgot to bump the serial number in my last commit

	AX_CHECK_GL: avoid use of non-ASCII characters in the macro documentation

2013-04-01  Hib Eris  <hib@hiberis.nl>

	Do not use AC_CANONICAL_SYSTEM in ax_prog_c{c,xx}_for_build.m4
	AC_CANONICAL_SYSTEM requires AC_CANONICAL_TARGET which is bad
	practice for packages that do not build compilers.

	Using AC_CANONICAL_HOST performs only the subset of AC_CANONICAL_SYSTEM
	relevant to the host type.

2013-04-01  Bastien Roucariès  <roucaries.bastien+autoconf@gmail.com>

	AX_CHECK_GL: updated version of the formerly obsoleted macro

2013-03-29  Timothy Brown  <tbrown@freeshell.org>

	AX_LIB_SAMTOOLS: initial version
	See <http://savannah.gnu.org/patch/?7983> for further details.

	AX_LIB_TABIX: initial version
	See <http://savannah.gnu.org/patch/?7984> for further details.

2013-03-29  Roy Stogner  <roystgnr@ices.utexas.edu>

	AX_CXX_COMPILE_STDCXX_11: test code now includes the "auto" keyword
	Furthermore, the macro now uses AC_LANG_PUSH/POP rather than AC_LANG_ASSERT,
	which makes it more robust to use.

	An optional second argument makes it possible to test for C++11 and return the
	result with an AC_DEFINE/AC_SUBST/AM_CONDITIONAL without erroring out if
	support is not found.

	This new version should be nearly backwards-compatible with the old; the
	obvious exception being when compilers which implement a subset of C++11 not
	including "auto" are used with codes for which that subset would have been
	sufficient.

	Further details can be found at <http://savannah.gnu.org/patch/?7985>.

2013-03-29  Daniel Richard G  <skunk@iSKUNK.ORG>

	AX_PTHREAD: fix support for AIX
	See <http://savannah.gnu.org/patch/?7973> for further details.

2013-03-26  Daniel Mullner  <muellner@math.stanford.edu>

	AX_PYTHON_DEVEL: use distutils to detect proper suffix for shared libraries
	See <https://savannah.gnu.org/patch/?7953> for further details.

2013-03-26  Peter Simons  <simons@cryp.to>

	AX_BOOST_PYTHON: avoid non-ASCII character in macro documentation

2013-03-25  Daniel Müllner  <muellner@math.stanford.edu>

	AX_BOOST_PYTHON: extend macro to work reliably with its default arguments
	See <http://savannah.gnu.org/patch/?7980> for further details.

	AX_BOOST_PYTHON: switch Python detection to AX_PYTHON_DEVEL
	See <http://savannah.gnu.org/patch/?7979> for further details.

2013-03-25  Peter Simons  <simons@cryp.to>

	AX_LIB_EXPAT don't overwrite $LIBS
	Furthermore, linker flags are now returned in $EXPAT_LDFLAGS instead of
	$EXPAT_LIBS. See <http://savannah.gnu.org/patch/?7968> for more details.

2013-03-25  Daniel Müllner  <muellner@math.stanford.edu>

	AX_PYTHON: use "distutils" instead of "locate" to find Python header files
	Further details are at <http://savannah.gnu.org/patch/?7966>.

2013-03-25  Julian Taylor  <jtaylor.debian@googlemail.com>

	AX_PYTHON_DEVEL: add platform specific include directory to PYTHON_CPPFLAGS
	required for ubuntu 13.04

2013-03-25  Tsukasa Oi  <li@livegrid.org>

	AX_GCC_ARCHFLAG: fix wrong CPU detection
	AX_GCC_X86_CPUID does not guarantee that result is always 4*8-digit.
	This commit fixes CPU detection issue caused by the wrong assumption
	by fixing case patterns.

2013-03-23  Christophe Tournayre  <turn3r@users.sourceforge.net>

	AX_EXT: add support for AVX SIMD instructions

2013-02-26  Peter Simons  <simons@cryp.to>

	AX_BOOST_ASIO: fix misspelled $BOOST_LDFLAGS variable
	Further details are at <http://savannah.gnu.org/patch/index.php?7959>.

2013-02-19  Daniel Müllner  <muellner@math.stanford.edu>

	AX_PYTHON_DEVEL: improve support on ArchLinux
	See <http://savannah.gnu.org/patch/?7953> for further details.

2013-02-17  Daniel Müllner  <muellner@math.stanford.edu>

	AX_PYTHON: make AX_PYTHON work on Arch Linux
	See <http://savannah.gnu.org/patch/?7951> for further details.

2013-02-10  Peter Simons  <simons@cryp.to>

	AX_LUA: re-format the macro's documentation so that the HTML and Texinfo renderer can deal with it

2013-02-08  Reuben Thomas  <rrt@sc3d.org>

	ax_lua.m4: fix some English typos.

2013-02-06  Reuben Thomas  <rrt@sc3d.org>

	ax_lua.m4: rewrite by Tim Perkins adding path searching and version checking.

2013-02-06  Antoine Brodin  <antoine@FreeBSD.org>

	AX_JNI_INCLUDE_DIR: add support for FreeBSD
	Further details can be found on the maintainers mailing list at:

	  http://lists.gnu.org/archive/html/autoconf-archive-maintainers/2013-02/msg00014.html

2013-02-02  Peter Simons  <simons@cryp.to>

	AX_LIB_EV: strip trailing whitespace

	AX_PTHREAD: improve support for AIX
	See <http://savannah.gnu.org/patch/index.php?7911> for further details.

2013-02-01  Misty De Meo  <mistydemeo@gmail.com>

	AX_BOOST_FILESYSTEM: adapt 2ec785001bc685dafcd792e49765dcbd2ae9bd38 to this macro
	Use 'ls -r' rather than non-portable tool 'tac'.

	Simplify filepattern in ls expression so dylib (on OSX) are also
	detected.

2013-02-01  Peter Simons  <simons@cryp.to>

	AX_LIB_EV: initial version
	This macro checks for libev in a pkg-config-like manner. This is to unifty
	behaviour between distros that come with libev.pc and systems (e.g. upstream)
	that don't. See <http://savannah.gnu.org/patch/?7938> for further details.

2013-01-04  Daniel Trebbien  <dtrebbien@gmail.com>

	AX_OPENMP: fix Mac OS X support
	The macro was failing to detect the OpenMP flags for g++ on Mac OS 10.7 because
	the AC_TRY_LINK test program was failing to link:

	  Undefined symbols for architecture x86_64:
	    "_gomp_thread_attr", referenced from:
	        _initialize_env in libgomp.a(env.o)
	  ld: symbol(s) not found for architecture x86_64
	  collect2: ld returned 1 exit status

	As explained at [1], without resorting to a non-portable hack, the test program
	needs to actually use an OMP pragma.

	[1] http://stackoverflow.com/questions/8983038/linker-errors-after-enabling-openmp-on-mac

2013-01-04  Thierry Reding  <thierry.reding@avionic-design.de>

	AX_PROG_CXX_FOR_BUILD: Initial version
	Add an AX_PROG_CXX_FOR_BUILD macro based on AX_PROG_CC_FOR_BUILD that
	tries to detect the C++ compiler to use for the build host when cross-
	compiling.

2013-01-04  Thierry Reding  <thierry.reding@avionic-design.de>

	Unbreak AX_PROG_CC_FOR_BUILD
	Instead of pushing the cross_compiling and ac_tool_prefix definitions,
	override them by assignment. Pushing the definition will cause the
	variable names to be replaced instead of the content.

	While at it, remove the AC_TRY_COMPILER redefinition as it was removed
	in autoconf 2.50. Also push LDFLAGS to prevent flags specific to the
	host tools from leaking into the build tools. Furthermore, consistently
	pop definitions in the reverse order than they were pushed.

2013-01-04  Peter Simons  <simons@cryp.to>

	AX_PYTHON: bump serial number and document changes in NEWS file

2013-01-04  Gilles Espinasse  <g.esp@free.fr>

	Add code for testing more recent python versions

2013-01-04  Gilles Espinasse  <g.esp@free.fr>

	Fix python detection

	I saw that on libnl-3.2.12
	checking for python build information...
	checking for python2.6... python2.6
	checking for main in -lpython2.6... yes
	checking python2.6/Python.h usability... yes
	checking python2.6/Python.h presence... yes
	checking for python2.6/Python.h... yes
	./configure: line 12065: test: !=: unary operator expected
	checking for python2.5... (cached) python2.6
	checking for main in -lpython2.6... (cached) yes
	checking for python2.6/Python.h... (cached) yes
	./configure: line 12065: test: !=: unary operator expected
	checking for python2.4... (cached) python2.6
	checking for main in -lpython2.6... (cached) yes
	checking for python2.6/Python.h... (cached) yes
	./configure: line 12065: test: !=: unary operator expected
	checking for python2.3... (cached) python2.6
	checking for main in -lpython2.6... (cached) yes
	checking for python2.6/Python.h... (cached) yes
	./configure: line 12065: test: !=: unary operator expected
	checking for python2.2... (cached) python2.6
	checking for main in -lpython2.6... (cached) yes
	checking for python2.6/Python.h... (cached) yes
	./configure: line 12065: test: !=: unary operator expected
	checking for python2.1... (cached) python2.6
	checking for main in -lpython2.6... (cached) yes
	checking for python2.6/Python.h... (cached) yes
	./configure: line 12065: test: !=: unary operator expected
	checking for python... (cached) python2.6
	checking for main in -lpython2.6... (cached) yes
	checking for python2.6/Python.h... (cached) yes
	./configure: line 12065: test: !=: unary operator expected
	  results of the Python check:
	    Binary:      python2.6
	    Library:     python2.6
	    Include Dir: no

2012-11-14  Peter Simons  <simons@cryp.to>

	Update version numbers for the upcoming release.

2012-10-28  Reuben Thomas  <rrt@sc3d.org>

	ax_lua.m4: major update
	AX_LUA_VERSION is removed (use AX_PROG_LUA instead)

	AX_PROG_LUA now takes version numbers in the form output by the Lua
	interpreter, and uses AX_COMPARE_VERSION (AX_LUA_HEADERS_VERSION
	continues to take the form used in the headers).

	Use just one style of testing empty strings consistently.

	Put the macros in the source in the same order as in the
	documentation, which is a more logical order.

	Bump the serial number to 17.

2012-10-27  Peter Simons  <simons@cryp.to>

	Alan W. Irwin doesn't want to receive e-mail concerning the macros he submitted a long time ago.

	Andrew Collier's e-mail address has become invalid.

2012-10-11  Peter Simons  <simons@cryp.to>

	AX_COUNT_CPUS: improve style and clean-up use of AS_IF
	See <http://savannah.gnu.org/patch/?7860> for further details.

2012-09-30  Peter Simons  <simons@cryp.to>

	Update NEWS file and bump #serial numbers after recent changes.

2012-09-30  Peter Johansson  <trojkan@gmail.com>

	Use 'ls -r' in order to try newer version before older ones. Simplify ls pattern so also dylibs are detected.

	Use 'ls -r' rather than non-portable tool 'tac'. Simplify filepattern in ls expression so dylib (on OSX) are also detected.

2012-09-07  Christopher Gilbreth  <cngilbreth@gmail.com>

	AX_BLAS: improve the detection of the Intel Math Kernel Library (MKL)
	New versions of the MKL cannot be linked with "-lmkl -lguide -lpthread", but
	instead require variations on "-lmkl_intel_lp64 -lmkl_sequential -lmkl_core
	-lpthread",depending on architecture, compiler & other variables. See
	<http://software.intel.com/en-us/articles/intel-mkl-link-line-advisor/>.

	The present patch detects the architecture (x86_64 or i686) and compiler
	(gfortran or others), but not the interface layer (assumes lp64 for x86_64),
	threading (assumes sequential), static vs. dynamic (assumes dynamic), etc.

	Tested on a number of different systems using gfortran and ifort.

	See <http://savannah.gnu.org/patch/?7807> for further details.

2012-09-07  Leo Davis  <ldavis@speechfxinc.com>

	AX_CHECK_CLASS did not use the `uudecode' found by AX_PROG_JAVA_WORKS.
	See <http://savannah.gnu.org/patch/?7835> for further details.

	AX_PROG_JAVA_WORKS would never find a 'uudecode' that could decode base64, even if one was on the path.
	See <http://savannah.gnu.org/patch/?7835> for further details.

	AX_PROG_JAVA had old macro name documentation.
	See <http://savannah.gnu.org/patch/?7835> for further details.

	AX_TRY_RUN_JAVA had old macro name documentation and was missing an AU_ALIAS. I renamed the .m4 file to match the documented macro name.
	See <http://savannah.gnu.org/patch/?7835> for further details.

	AX_INCLUDE_STRCASECMP: initial version
	The macro detects which header file defines the strcasecmp() function.
	See <http://savannah.gnu.org/patch/?7836> for further details.

2012-09-07  Peter Simons  <simons@cryp.to>

	AX_LIB_ORACLE_OCCI: initial version
	The macro detects the availability of the Oracle OCCI API of particular version
	or newer. Further details can be found at <http://savannah.gnu.org/patch/?7834>.

	AX_CHECK_POSTGRES_DB: version bump and cosmetic

2012-09-07  Olivier Mehani  <olivier.mehani@nicta.com.au>

	Add -Idir to CPPFLAGS rather than CFLAGS

2012-09-07  Olivier Mehani  <olivier.mehani@nicta.com.au>

	Substantial rewrite of AX_CHECK_POSTGRES_DB.
	It still behaves the same by default, AC_DEFINing HAVE_LIBPQ and setting
	variables PQINCPATH and PQLIBPATH, while erroring when either header or
	library is found in the default or specified paths.

	The logic is however different, where the specified prefixes and/or
	incdir and libdir are temporarily added to CFLAGS and LDFLAGS. The
	normal detection logic (AC_CHECK_HEADER and AC_CHECK_LIB) is used next,
	only, and once.

	In addition, two optional arguments to the macro, ACTION-IF-FOUND and
	ACTION-IF-NOT-FOUND are now available to extend the logic. The default
	ACTION-IF-FOUND is to do nothing (apart from defining the variables and
	substitutions, which is always done). The default ACTION-IF-NOT-FOUND is
	to error out; it is replaced by the ACTION-IF-NOT-FOUND if specified
	to, e.g., gracefully remove configure PGSQL out when it's only optional.

	Bump serial from 5 to 6.

2012-09-07  Olivier Mehani  <olivier.mehani@nicta.com.au>

	Use AS_HELP_STRING in ax_check_postgres_db.m4

2012-09-07  Tudor Bosman  <tudorb@gmail.com>

	AX_CXX_RVALUE_REFERENCES: initial version
	See <http://savannah.gnu.org/patch/?7833> for further details.

2012-09-07  Peter Simons  <simons@cryp.to>

	AX_BLAS: add support for the (free-software, BSD-licensed) OpenBLAS library, a descendant of GotoBLAS (http://xianyi.github.com/OpenBLAS/).
	See <http://savannah.gnu.org/patch/?7828> for further details.

2012-07-31  Peter Johansson  <trojkan@gmail.com>

	AX_CHECK_ZLIB: Fix typo. Assign LDFLAGS correctly in action-if-found.

2012-07-22  John Stumpo  <stump@jstump.com>

	AX_CC_MAXOPT: use $enableval, not $withval, in AC_ARG_ENABLE call

2012-07-22  Diego Elio Pettenò  <flameeyes@flameeyes.eu>

	AX_BOOST_SYSTEM, AX_BOOST_FILESYSTEM: inverse the order of search for libraries
	With the original macros, the oldest versioned library is used, but
	for most distribution this is detrimental, as the old versions are
	kept for compatibility, and not to be linked against. By using tac we
	reverse the order of the libraries, preferring an unversioned one
	(usually the latest available on the system), and then proceeding in
	descending order.

	Together with this, also try to simplify the sed syntax. It's of note
	that even though tac might not be very portable, the sed syntax used
	is also not so portable, so it might be worth working this around in a
	different way.

2012-07-22  Sebastian Freundt  <freundt@fresse.org>

	AX_ZONEINFO: find compiled zoneinfo files
	See <http://savannah.gnu.org/patch/index.php?7814> for further details.

2012-07-22  Peter Johansson  <trojkan@gmail.com>

	AX_CHECK_ZLIB: cosmetic indentation fix
	Adding some quoting and replacing "test x -a y" with more portable
	"test x && test y".

	AX_CHECK_ZLIB: change the behavior so macro proceeds to compile and link tests even if zlib.h was not found in the "usual locations". If end-user has provided CPPFLAGS and LDFLAGS as needed for compilation/linking to succeed, there is no reason to error out.

	AX_CHECK_ZLIB: fix help output so it is inline with other macros that uses AS_HELP_STRING.

	AX_CHECK_ZLIB: extend the interface to the typical ([action-if-found], [action-if-not-found])-style, so user can define how macro should behave when macro is successful or failed. If not provided the macro will behave as previously. I also clarified in DESCRIPTION what this behaviour is.

	AX_CHECK_ZLIB: the current version only looks for zlib if --with-zlib was provided [by user]. This patch changes that so the search and test are also performed in default mode.

2012-06-18  Mike Frysinger  <vapier@gentoo.org>

	AC_REQUIRE AX_APPEND_FLAG when appropriate.
	A bunch of m4 files use AX_APPEND_FLAG, but don't AC_REQUIRE, which
	can lead to runtime errors instead of compile time errors when the
	macro is missing.

2012-06-16  Gabriele Svelto  <gabriele.svelto@gmail.com>

	Replace the obsolete AC_FD_CC macro with AS_MESSAGE_LOG_FD.
	See <http://savannah.gnu.org/patch/?7793> for further details.

2012-06-15  Olivier Mehani  <olivier.mehani@nicta.com.au>

	AX_PROG_RUBY_VERSION: updated documentation
	Replace mention of deprecated AX_WITH_RUBY with example use of AX_WITH_PROG.

2012-06-15  Daniel Richard G  <skunk@iSKUNK.ORG>

	AX_PRINTF_SIZE_T: initial version
	See <http://savannah.gnu.org/patch/?7787> for further details.

2012-05-09  Sebastian Hegler  <sebastian.hegler@tu-dresden.de>

	AX_LIB_CGAL_CORE: fixed "no AC_LANG_SOURCE call detected in body" warning

2012-05-09  Fernando Mut  <fermut@gmail.com>

	AX_BLAS: added the libraries "-lguide -lpthread" for the Intel MKL library test
	These two libraries are needed to avoid unresolved symbols.

	See <http://savannah.gnu.org/patch/?7770> for further details.

2012-04-24  Sebastian Hegler  <sebastian.hegler@tu-dresden.de>

	AX_BOOST_SERIALIZATION: add support for MacOS/BSD sed
	Further details can be found at <http://savannah.gnu.org/patch/?7768>.

2012-04-04  Zack Weinberg  <zackw@panix.com>

	AX_CXX_COMPILE_STDCXX_11: new submission
	This is a revised version of AX_CXX_COMPILE_STDCXX_0X. The major changes
	are:

	 - Automatically sets CXXFLAGS to enable support for C++11, and errors out if
	   no C++11 mode can be found. (Note: currently only supports GCC-style -std=
	   switches.) Does not define any preprocessor macros.

	 - Support for other compilers' mode switches will be much easier to add.

	 - Can be instructed to avoid using C++11-with-extensions compilation modes, or
	   C++11-without-extensions modes, as appropriate.

	 - Autoupdate clean.

	 - Better AC_MSG_CHECKING messages.

	 - Consistently refers to C++11 rather than C++0x.

	See <http://savannah.gnu.org/patch/?7734> for further details.

2012-04-04  Zack Weinberg  <zackw@panix.com>

	AX_CXX_DELETE_METHOD: check whether the C++11 '= delete' syntax is supported
	Further details are at <https://savannah.gnu.org/patch/?7735>.

2012-04-04  Xiyue Deng  <manphiz@gmail.com>

	AX_BOOST_LOCALE: new submission
	See <http://savannah.gnu.org/patch/?7743> for further details.

2012-04-04  Peter Simons  <simons@cryp.to>

	AX_BOOST_PYTHON: use consistent word-wrapping in documentation

	AX_BOOST_*: bumped serial numbers

2012-04-04  Xiyue Deng  <manphiz@gmail.com>

	AX_BOOST_CHRONO: new submission
	See <http://savannah.gnu.org/patch/?7721> for further details.

	AX_BOOST_*: fixed detection of dynamic libraries on Mac OS X (*.dylib)
	See <http://savannah.gnu.org/patch/?7719> for further details.

2012-04-04  Anders Kaseorg  <andersk@mit.edu>

	AX_CHECK_LIBRARY: do not use m4_ifnblank
	m4_ifnblank requires autoconf 2.64, and doesn’t seem necessary here.

2012-04-04  Markus Elfring  <Markus.Elfring@web.de>

	AX_PTHREAD: deletion of unreferenced variable "host_cpu"
	The CPU did not play a role in the current setting adjustments by this script.
	The variable "host_cpu" was therefore deleted and the corresponding pattern
	selection was a bit simplified.

2012-02-04  Tsukasa Oi  <li@livegrid.org>

	AX_GCC_ARCHFLAG: add new Intel/AMD CPU support

2012-02-03  Reuben Thomas  <rrt@sc3d.org>

	Update example .h code to match gnulib style rules (no useless parens).

2012-01-30  Reuben Thomas  <rrt@sc3d.org>

	m4/ax_lua.m4: test lua_load instead of lua_call in AX_LUA_LIBS, to work with Lua 5.2.

2012-01-10  Christoph Junghans  <junghans@mpip-mainz.mpg.de>

	AX_COUNT_CPUS: fixed endless recursion bug
	See <http://savannah.gnu.org/patch/?7697> for further details.

2011-12-02  Stephan Sürken  <absurd@olurdix.de>

	AX_BERKELEY_DB_CXX: Add 'AC_LANG_ASSERT(C++)' (as suggested by Amir Taaki, thanks!).
	This will basically improve the error reporting when the macro is called
	without LANG=C++; is also suggested in autoconf documentation (see:
	http://www.gnu.org/s/hello/manual/autoconf/Language-Choice.html).

2011-11-22  Rhys Ulerich  <rhys.ulerich@gmail.com>

	Fix inadvertent breakage from commit cfea4ee52f7

2011-11-21  Peter Simons  <simons@cryp.to>

	AX_PTHREAD: added missing -mt option for Oracle/Sun CC on Solaris
	Further details are available at <http://savannah.gnu.org/patch/?7666>.

2011-11-21  Michael Terry  <michael.terry@canonical.com>

	AX_BOOST_PYTHON: fixed under-quoted use of $CPPFLAGS
	See <http://savannah.gnu.org/patch/?7673> for further details.

2011-11-21  Jonathan Wakely  <zilla@kayari.org>

	AX_CXX_HEADER_STDCXX_0X: updated the list of headers required by C++11 (the standard formerly known as C++0x)
	Further details are available at <http://savannah.gnu.org/patch/index.php?7664>.

2011-11-21  Peter Simons  <simons@cryp.to>

	AX_WITH_CURSES: fixed broken AS_IF() test that prevented $CURSES_LIB from being used
	See <http://savannah.gnu.org/patch/index.php?7651> for further details.

2011-10-22  Peter Simons  <simons@cryp.to>

	AX_EXT: fixed compiler tests and added support for detection of SSE4.1, SSE4.2, AVX extensions
	See <http://savannah.gnu.org/patch/?7633> for further details.

2011-10-22  Mateusz Loskot  <mateusz@loskot.net>

	AX_LIB_GDAL: new submission
	This macro provides tests for the availability of the GDAL/OGR library.
	Further details are available at <http://savannah.gnu.org/patch/?7639>.

2011-09-26  Peter Simons  <simons@cryp.to>

	AX_LIB_SQLITE3: replace C++-style commend with C-style to improve portability
	See <http://savannah.gnu.org/patch/?7623> for further details.

2011-09-25  Peter Simons  <simons@cryp.to>

	AX_ENABLE_BUILDDIR: fixed Darwin support
	Further details are available at <http://savannah.gnu.org/patch/?7619>.

2011-09-19  Peter Simons  <simons@cryp.to>

	Dropped obsolete macros from the distribution.

2011-09-17  Peter Simons  <simons@cryp.to>

	AX_LIB_MYSQLCPPCONN: test for the MySQL Connector/C++ libraries

	AX_LIB_TRACE: test for the libtrace libraries

	AX_DEFINE_DIR: cosmetic changes to wrap-wrapping

2011-09-16  Reuben Thomas  <rrt@sc3d.org>

	AX_DEFINE_DIR: Obsolete: it doesn't comply with the GCS.

2011-09-06  Reuben Thomas  <rrt@sc3d.org>

	AX_FUNC_FORK: Not actually useful. Use AX_CHECK_FUNC(fork) instead.

	AX_SNPRINTF_OFLOW: Make obsolete, in favour of gnulib's snprintf module.

2011-09-05  Aaron Griffith  <aargri@gmail.com>

	AX_PROG_DOXYGEN: cleaned up use of AM_CONDITIONAL
	Previously, calls to AM_CONDITIONAL were inside shell flow control
	structures. The automake manual notes that running AM_CONDITIONAL
	conditionally will confuse automake. In this case, later use of the
	AM_COND_IF to check if Doxygen was found would result in the
	conditional appearing to be false, even if it's not.

	http://www.gnu.org/s/hello/manual/automake/Usage-of-Conditionals.html

2011-09-03  Reuben Thomas  <rrt@sc3d.org>

	Tidy up assignment to lua_min_version and lua_max_version.
	Fix error messages to always use the above vars, not the original
	parameters passed to the macros.

2011-08-29  Peter Simons  <simons@cryp.to>

	AX_LIB_SQLITE3: bumped serial number

	AX_LIB_SQLITE3: find the library with the C compiler

2011-08-24  Peter Simons  <simons@cryp.to>

	AX_CHECK_{GL,GLU,GLUT}: these macro are no longer maintained here; marked obsolete

	AX_CHECK_SUNPRO_C: cosmetic, no functional change

	AX_LANG_COMPILER_MS: cosmetic, no functional change

2011-08-23  Yusuke Tsutsumi  <tsutsumi.yusuke@gmail.com>

	AX_CHECK_MYSQL: re-factoring and several bug fixes

2011-08-14  Stanislav Sedov  <stas@FreeBSD.org>

	AX_RUBY_EXT: initial version

	AX_PERL_EXT: initial version

2011-08-02  Chun-Chung Chen  <cjj@u.washington.edu>

	AX_PTHREAD: fixed mis-placed brackets

2011-08-01  Chun-Chung Chen  <cjj@u.washington.edu>

	AX_LIB_HDF5: HAVE_HDF5 was defined even when the library is not detected
	The following codes are executed unless --without-hdf5 is used, even
	when the HDF5 library is not installed or detected:

	  AC_SUBST([HDF5_VERSION])
	  AC_SUBST([HDF5_CFLAGS])
	  AC_SUBST([HDF5_CPPFLAGS])
	  AC_SUBST([HDF5_LDFLAGS])
	  AC_SUBST([HDF5_FFLAGS])
	  AC_SUBST([HDF5_FLIBS])
	  AC_DEFINE([HAVE_HDF5], [1], [Defined if you have HDF5 support])

	To remedy the situation, these have been moved into the conditional
	block where HDF5 is actually detected.

2011-08-01  Chun-Chung Chen  <cjj@u.washington.edu>

	AX_PTHREAD: fixed Autoconf warnings about underquoted arguments

2011-07-30  Peter Simons  <simons@cryp.to>

	AX_GCC_INSTALL_DIR, AX_GCC_LIBRARIES_DIR, AX_GCC_VERSION, and AX_GXX_VERSION are non-functional and have been marked obsolete, because they depend on the obsolete AX_GCC_OPTION macro, which has been removed from the archive.

2011-07-28  John Zaitseff  <J.Zaitseff@zap.org.au>

	AX_WITH_CURSES: major re-write
	I re-wrote the AX_WITH_CURSES macro, and added the macros AX_WITH_CURSES_PANEL,
	AX_WITH_CURSES_MENU, and AX_WITH_CURSES_FORM for the following reasons:

	 - The checks are far more rigorous and now work with many more systems. In
	   particular, Debian Sid, Debian 6.0 (Squeeze), Ubuntu 11.04 (Natty), Ubuntu
	   10.04 (Lucid), Fedora 15, FreeBSD 8.2 and Cygwin have all been confirmed as
	   working.

	 - The old version required Ncurses to be present even when linking with
	   NcursesW. This has been fixed.

	 - Multiple header filenames are checked for each library as these seem to be
	   different in every system. The old version did not do these checks and hence
	   failed on many systems (eg, FreeBSD and Cygwin).

	 - A number of feature checks have been added: X/Open Enhanced functionality
	   checks, colour function checks, obsolete function checks, etc.

	 - The additional macros check for auxiliary libraries associated with Curses:
	   Panel, Menu and Form, again with checks against NcursesW, Ncurses and plain
	   Curses.

	 - Extensive documentation has been added, particularly useful for the beginner
	   (ie, exactly what needs to be put where for a working Curses check).

2011-07-17  Peter Simons  <simons@cryp.to>

	Fixed minor spelling errors detected by gnulib's QA module.

	AX_BOOST_FILESYSTEM: fixed cut-and-paste error
	See <http://savannah.gnu.org/patch/?7576> for further details.

2011-07-08  Peter Simons  <simons@cryp.to>

	Updated serial numbers, and re-formatted the macro to be consistent with the rest of the archive.

2011-07-02  Maarten Bosmans  <mkbosmans@gmail.com>

	ax_cflags_*: Use AX_APPEND_FLAG macro

	Use one implementation for C/C++ in ax_cflags_*.m4

	AX_COMPILER_VENDOR: Make the list of vendors and corresponding symbols clearer
	Also deprecate the macros AX_CHECK_SUNPRO_C and AX_LANG_COMPILER_MS in favor
	of the more generic AX_COMPILER_VENDOR.

	ax_append_flag: Split file into one macro per file

2011-06-30  Nick Bowler  <nbowler@elliptictech.com>

	ax_check_openssl: Fix underquoted macro arguments.
	Several of the macros used in AX_CHECK_OPENSSL have underquoted
	arguments.  In particular, autoconf complains loudly about the
	unquoted AC_LANG_PROGRAM argument to AC_LINK_IFELSE:

	  configure.ac:10: warning: AC_LANG_CONFTEST: no AC_LANG_SOURCE call detected in body
	  ../../lib/autoconf/lang.m4:194: AC_LANG_CONFTEST is expanded from...
	  ../../lib/autoconf/general.m4:2662: _AC_LINK_IFELSE is expanded from...
	  ../../lib/autoconf/general.m4:2679: AC_LINK_IFELSE is expanded from...
	  m4/ax_check_openssl.m4:38: AX_CHECK_OPENSSL is expanded from...
	  configure.ac:10: the top level

	Fix that up, and fix up the others while we're at it.

2011-06-28  Anders Kaseorg  <andersk@mit.edu>

	AX_CHECK_FLAG: Fix to work with autoconf 2.59
	• AS_VAR_PUSHDEF([FLAGS], [something containing FLAGS]) caused an
	  infinite loop before v2.65~21.
	• AS_VAR_APPEND was new in v2.63b~224.
	• AS_VAR_IF was new in v2.63~27.
	• AS_ECHO was new in AUTOCONF-2.61a~45, and AC_PROG_GREP in
	  AUTOCONF-2.59c~744, but their use here is more idiomatically
	  replaced with a case pattern anyway.
	• Before AUTOCONF-2.60b~8, the variable name passed to AC_CACHE_CHECK,
	  AS_VAR_GET, AS_VAR_SET, and AS_VAR_SET_IF must be left unquoted.

2011-06-25  Peter Simons  <simons@cryp.to>

	AX_CFLAGS_GCC_OPTION: deprecated in favor of AX_CHECK_COMPILE_FLAG

	Added a proper 'obsolete' section to AX_C_CHECK_FLAG, AX_CHECK_LINKER_FLAGS, AX_CPP_CHECK_FLAG, AX_CXX_CHECK_FLAG, AX_CXXCPP_CHECK_FLAG, and AX_LD_CHECK_FLAG.

	Bumped serial numbers of AX_CFLAGS_*_OPTION, AX_CHECK_{COMPILER,LINKER}_FLAGS, and edited the formatting of the documentation for consistency. Also documented the recent changes in the NEWS file.

2011-06-25  Maarten Bosmans  <mkbosmans@gmail.com>

	Implement AX_*_CHECK_FLAG on top of ax_check_flag.m4 macros
	The PROLOGUE and BODY arguments were almost never used, so there's no need to
	keep them. Just emit a warning if they are nonempty.

	Implement AX_CHECK_*_FLAGS on top of ax_check_flag.m4 macros
	The implementation takes care to empty the CFLAGS, to mimic previous behaviour,
	but the new behaviour of AX_CHECK_COMPILE_FLAG should be better for most situations.

	ax_cflags_*_option.m4: Use AX_APPEND_FLAG macro to append the flag

	ax_cflags_*_option.m4: Use AX_CHECK_COMPILE_FLAG macro to do most of the work
	This gets rid of the for loop and the string splitting using sed.  For
	gcc_option the logic is now contained in a much easier to follow if statement.

	Add ax_check_flag.m4

	ax_cflags_*_option.m4: Consolidate CFLAGS and CXXFLAGS macros
	Combine duplicate AX_CFLAGS_ and AX_CXXFLAGS_ macros into one AX_FLAGS macro and
	change language in the language_specific macro.

	ax_cflags_*_option.m4: Consolidate _OLD and _NEW macros
	Combine duplicate _OLD and _NEW macros into one _PRIVATE macro and switch
	arguments in the main macro.

2011-06-21  Maarten Bosmans  <mkbosmans@gmail.com>

	AX_PTHREAD: define HAVE_PTHREAD_PRIO_INHERIT if PTHREAD_PRIO_INHERIT is set at compile-time

2011-06-21  Peter Simons  <simons@cryp.to>

	AX_WITH_RUBY: dropped obsolete macro

	AX_WITH_PYTHON: dropped obsolete macro

	AX_WITH_PERL: dropped obsolete macro

	AX_WITH_GUILE: dropped obsolete macro

	AX_GCC_OPTION: dropped obsolete macro

	AX_C_PRINTF_THSEP: dropped obsolete macro

	AX_C_IFDEF: dropped obsolete macro

	AX_CFLAGS_WARN_ALL_ANSI: dropped obsolete macro

2011-06-15  Michael Hofmann  <michael.hofmann@informatik.tu-chemnitz.de>

	Bugfix in MPI Fortran macros for fixed form code.

2011-06-15  Yusuke Tsutsumi  <tsutsumi.yusuke@gmail.com>

	AX_CHECK_MYSQL: new submission
	I am submitting an Autoconf Macro I've been developing for the past
	couple months - ax_check_mysql.m4. I'm aware that multiple other MySQL
	macros exist, but mine is specifically geared toward MySQL plugin
	development and installation. Specifically:

	 - Automatically Detects binary, include, and plugin directories for most
	   typical MySQL installations.

	 - Provides methods for one to designate the directories manually, or point to
	   a root directory containing a MySQL installation.

	See <http://savannah.gnu.org/patch/?7553> for further details.

2011-06-15  Maarten Bosmans  <mkbosmans@gmail.com>

	AX_PTHREAD: add check for PTHREAD_PRIO_INHERIT
	See <http://savannah.gnu.org/patch/?7552> for further details.

2011-06-15  Maarten Bosmans  <mkbosmans@gmail.com>

	AX_CHECK_DEFINE: various bug fixes
	 - Change macro names to CHECK_DEFINE and alias the old name CHECK_DEFINED.
	   This makes the names in sync with the help comments on top.

	 - Update obsolete AC_TRY_COMPILE to AC_COMPILE_IFELSE.

	 - Include header name in cache value and in output message.

	 - Switch #ifndef to #ifdef. That macro could not have worked previously.

	See <http://savannah.gnu.org/patch/?7551> for further details.

2011-06-15  Olaf Lenz  <olenz@icp.uni-stuttgart.de>

	AX_PROG_{CC,CXX,FC}_MPI: new submissions
	The new macros AX_PROG_CC_MPI, AX_PROG_CXX_MPI, AX_PROG_F77_MPI, and AX_PROG_FC_MPI
	address several shortcomings found in AX_MPI. Further details can be found at
	<http://lists.gnu.org/archive/html/autoconf-archive-maintainers/2011-05/msg00004.html>,
	<http://lists.gnu.org/archive/html/autoconf-archive-maintainers/2011-06/msg00003.html>.

2011-06-15  Reuben Thomas  <rrt@sc3d.org>

	Fix trivial comment typo.

2011-05-09  Andreas Röver  <andreas_roever@web.de>

	AX_BOOST_THREAD: fixes two bugs that prevented cross-compilation for Windows on Unix
	 - In the OS selection switches, where the special cases for mingw are
	   selected, it says ming32 but should be mingw32.

	 - Those switches are supposed to be dependent on the os you compile for but
	   the switch uses the build_os variable.

2011-04-29  Daniel Richard G  <skunk@iSKUNK.ORG>

	AX_VAR_TIMEZONE_EXTERNALS: updated for Autoconf 2.68

	AX_FUNC_WHICH_GETHOSTBYNAME_R: updated for Autoconf 2.68

	AX_PTHREAD: updated for Autoconf 2.68

2011-04-06  Philipp Thomas  <pth@suse.de>

	AX_HAVE_QT: fixed Autoconf warning
	See <http://savannah.gnu.org/patch/index.php?7511> for further details.

2011-04-01  Peter Simons  <simons@cryp.to>

	AX_HAVE_QT: use AS_HELP_STRING
	See <http://savannah.gnu.org/patch/index.php?7510> for further details.

	AX_HAVE_QT: remove spurious semicolon

2011-04-01  Peter Simons  <simons@cryp.to>

	AX_HAVE_QT: libraries come last, not first
	The linker call in ax_have_qt.m4 names libraries before the objects.
	This will fail when --as-needed is in effect. This patch moves the
	libraries to the end of the command line.

	See <http://savannah.gnu.org/patch/?7514> for further details.

2011-03-29  Reuben Thomas  <rrt@sc3d.org>

	Get Lua interpreter version in a more robust way (works with LuaJIT).

2011-03-25  Reuben Thomas  <rrt@sc3d.org>

	Don't use -a or -o argument to test in ax_lua.m4.

	Add missing letter in comment.

2011-03-17  Peter Simons  <simons@cryp.to>

	AX_PATH_GENERIC has been extended to allow setting LIBRARY_LIBS and LIBRARY_CFLAGS variables on configure command line or in the environment to override the normal values returned by `library-config --libs` and `--cflags` respectively. See <http://savannah.gnu.org/patch/?7490> for further details.

	AX_LIB_EXPAT: store found library in EXPAT_LIBS instead if EXPAT_LDFLAGS
	This change is necessary to avoid build failures when linking with --as-needed.
	See <http://savannah.gnu.org/patch/?7489> for further details.

	AX_WITH_PROG, AX_WITH_CURSES: synchronize serial numbers with Git

	AX_WITH_PROG, AX_WITH_CURSES: pseudo-bump #serial number
	These macros have serial numbers greater than the number of commits that
	modified them. Since we cannot decrease serial numbers once they've been
	assigned, the macros need two (effectively empty) commits to synchronize
	their serial number with Git.

2011-03-17  Murray Cumming  <murrayc@murrayc.com>

	AX_PKG_SWIG: fix the configure check so it can find swig 2 as swig2.0
	Ubuntu Maverick and Ubuntu Natty install swig 2 as /usr/bin/swig2.0
	because they do not yet want to upgrade their normal swig package. This
	lets our macro find that too.

2011-03-13  Reuben Thomas  <rrt@sc3d.org>

	Use && not -a in tests.

	Quote first argument of AC_DEFINE.

2011-03-01  Henrik Uhrenholt  <henrik.uhrenholt.gpl@gmail.com>

	AX_PROG_SPLINT: various improvements
	* Added splint URL
	* Added AC_REQUIRE([AX_ADD_AM_MACRO_STATIC])
	* Added support for running splint on LTLIBRARIES

2011-02-27  Peter Simons  <simons@cryp.to>

	AX_LUA: normalize formatting of the documentation

2011-02-26  Reuben Thomas  <rrt@sc3d.org>

	Add AX_PROG_LUA macro, and improve behaviour of single version number given to mean “exactly this version” rather than “this verison or greater”.

	Add Lua 5.2 support (trivial!).
	Remove --with-lua-prefix (use CPPFLAGS &c. instead).

2011-02-06  Mike Frysinger  <vapier@gentoo.org>

	AX_CREATE_PKGCONFIG_INFO: don't add user CPPFLAGS/LDFLAGS to pc files
	CPPFLAGS and LDFLAGS are settings that come from the user.  These
	should not be placed into .pc files.  Since this helper already
	provides variables for getting cflags/ldflags into the .pc file,
	just punt the user sourcing.

2011-02-03  Henrik Uhrenholt  <henrik.uhrenholt.gpl@gmail.com>

	AX_PROG_SPLINT: initial version
	Further details at <http://savannah.gnu.org/patch/?7453>.

2011-02-02  Peter Simons  <simons@cryp.to>

	AX_BERKELEY_DB_CXX: fixed transliteration of Sürken from Surken to Suerken

2011-01-27  Gary Funck  <gary@intrepid.com>

	AX_BOOST_BASE, AX_BOOST_REGEX: improved error messages

2011-01-22  Stephan Sürken  <absurd@olurdix.de>

	AX_BERKELEY_DB_CXX: variant of AX_BERKELEY_DB, adapted to check for C++ headers and libs
	This macro is based on AX_BERKELEY_DB by Vaclav Slavik with small
	adaptions to check for C++ header and libs instead of C by Stephan
	Sürken. See <http://savannah.gnu.org/patch/?7446> for further details.

2011-01-03  Peter Simons  <simons@cryp.to>

	AX_EXT_HAVE_LIB: fixed bug introduced in previous patch

2011-01-02  Peter Simons  <simons@cryp.to>

	AX_LIB_CGAL_CORE: dropped trailing empty line at the end of the file

2010-12-25  Dan Horák  <dan@danny.cz>

	AX_BOOST_BASE: accept also non-x86 64-bit architectures
	See <http://savannah.gnu.org/patch/?7428> for further details.

2010-12-23  Bastien Chevreux  <bach@chevreux.org>

	AX_CHECK_ZLIB: honor --with-zlib option
	See <http://savannah.gnu.org/patch/?7411> for further details.

2010-12-18  Peter Simons  <simons@cryp.to>

	AX_CHECK_JAVA_HOME: added support for MacOS X
	See <http://savannah.gnu.org/patch/?7408> for further details.

2010-12-18  Diego Elio Pettenò  <flameeyes@gmail.com>

	AX_PROG_FLEX, AX_PROG_BISON: use version information for detection
	Rather than reimplementing (partial) basename functionality, follow the
	suggestion by the Autoconf manual to check for the output of --version for
	the program's name.

	Also, make the macro use m4_ifnblank rather than use an unconditional :
	no-op operation.

2010-12-18  Sergio Belkin  <sebelk@gmail.com>

	AX_EXT_HAVE_LIB: allow macro to be called more than one time
	See <http://savannah.gnu.org/patch/?7403> for further details.

2010-11-25  Václav Haisman  <V.Haisman@sh.cvut.cz>

	AX_C_IFDEF: fixed Autoconf warnings
	See <http://savannah.gnu.org/patch/?7405> for further details.

	AX_CFLAGS_SUN_OPTION: fixed Autoconf warnings
	See <http://savannah.gnu.org/patch/?7405> for further details.

2010-11-23  Riccardo Murri  <riccardo.murri@gmail.com>

	AX_CXX_RESTRICT_THIS: detect whether the C++ compiler can qualify a member function with restricted "this" pointer
	See <http://savannah.gnu.org/patch/?7397> for further details.

2010-11-18  Cristian Rodríguez  <cristian.rodriguez@opensuse.org>

	ax_cxx_compile_stdcxx_0x stopped working since GCC 4.5 due to changes in the standard
	Please refer to <http://savannah.gnu.org/patch/?7387> for further details.

2010-11-16  Reuben Thomas  <rrt@sc3d.org>

	Mark AX_GCC_OPTION obsolete, in agreement with author.

	Bump version of GPL, as per authors' request.

	Bump version of GPL, as per authors' request.

2010-11-16  Peter Simons  <simons@cryp.to>

	AX_CREATE_PKGCONFIG_INFO: bumped serial number after recent changes

2010-11-16  Reuben Thomas  <rrt@sc3d.org>

	Bump version of GPL, as per authors' consent.

	Bump version of GPL, as per authors' consent.

2010-11-15  Reuben Thomas  <rrt@sc3d.org>

	Bump GPL version on Guido Draheim's (sole-author) macros.

2010-11-12  Peter Simons  <simons@cryp.to>

	AX_CXX_CPPFLAGS_STD_LANG: bumped serial number after recent edits

2010-11-12  Rhys Ulerich  <rhys.ulerich@gmail.com>

	Correct recent AX_CXX_CPPFLAGS_STD_LANG update
	No idea what I was thinking on the mistaken syntax...

2010-11-11  Rhys Ulerich  <rhys.ulerich@gmail.com>

	Move AX_CXX_{CPP,CXX,LD}FLAGS_STD_LANG to AX_COMPILER_VENDOR
	Nested quoting within AX_CXX_COMPILER_VENDOR gives warnings on
	newer autoconf versions.  Switching which compiler-detection
	script these macros use.

	Implementation changeover simple-- just need to account for a
	difference in 'dec' vs 'compaq' compiler identifier.

2010-11-08  Peter Simons  <simons@cryp.to>

	Updated the NEWS file describe ax_asm_inline.m4 and ax_forceinline.m4.
	Furthermore, updated both macros to use word wrapping boundaries consistent
	with the rest of the archive.

2010-11-07  Rhys Ulerich  <rhys.ulerich@gmail.com>

	Add new macro AX_FORCEINLINE

	Merge branch 'master' of ssh://git.sv.gnu.org/srv/git/autoconf-archive

	Add new macro AX_ASM_INLINE

2010-11-04  Sebastian Hegler  <sebastian.hegler@tu-dresden.de>

	AX_LIB_CGAL_CORE: test for the CGAL_Core library
	See <http://savannah.gnu.org/patch/?7370> for further details.

2010-11-04  Diego Elio Petteno`  <flameeyes@gmail.com>

	AX_CHECK_LIBRARY, AX_TLS: correct the spelling of author's surname

2010-11-03  Diego Elio Pettenò  <flameeyes@gmail.com>

	AX_CHECK_LIBRARY: add a new macro for generic library checking
	This macro allows to check a pair of header file and library needed for the
	library to be used. This can then be used to replace a number of identical
	tests on a number of projects, some of which are simply wrong.

2010-11-03  Peter Simons  <simons@cryp.to>

	AX_JNI_INCLUDE_DIR: recognize <jni.h> even if it's a symlink (like on Mac OS X)
	Further details are available at <http://savannah.gnu.org/patch/?7360>.

2010-10-20  Peter Simons  <simons@cryp.to>

	m4/ax_tls.m4: avoid non-ASCII character in copyright section

	AX_LIB_HDF5: word-wrap documentation to conform to our repository-wide maximum line length

2010-10-20  Rhys Ulerich  <rhys.ulerich@gmail.com>

	ax_lib_hdf5: improve {C,CPP,LD,F}FLAGS + Fortran
	Newer compiler wrapper versions stop providing as
	much useful information.  After attempting to pull
	everything from them, we now look for -L/-I information
	in the compiler wrapper's -show output.

	This greatly improves HDF5_FFLAGS.  Also, added HDF5_FLIBS
	to capture the Fortran-specific link line details.

2010-10-14  Rhys Ulerich  <rhys.ulerich@gmail.com>

	AX_SPLIT_VERSION: add AC_PROG_SED as a prerequisite

2010-10-13  Luke Mewburn  <lukem@netbsd.org>

	AX_PROG_DOXYGEN: implemented missing "DX_DOT_FEATURE(ON|OFF)" feature
	See <http://savannah.gnu.org/patch/?7340> for further details.

2010-10-13  Sebastian Hegler  <sebastian.hegler@tu-dresden.de>

	AX_BOOST_BASE: improved BOOST_LDFLAGS detection
	The macro optimistically assembled BOOST_LDFLAGS from an empty variable,
	resulting in a wrong value for BOOST_LDFLAGS, making all following
	ax_boost* macros fail.

	See <http://savannah.gnu.org/patch/?7337> for further details.

2010-10-13  Rhys Ulerich  <rhys.ulerich@gmail.com>

	AX_LIB_HDF5: added ability to request either a serial or a parallel HDF5 installation and to detect whether or not a Fortran-ready installation is present.
	See http://savannah.gnu.org/patch/?7338 for further details.

2010-10-07  Rhys Ulerich  <rhys.ulerich@gmail.com>

	AX_CFLAGS_WARN_ALL: removed obsolete Autoconf constructs and added AX_FCFLAGS_WARN_ALL
	See <http://savannah.gnu.org/patch/?7335> for further details.

2010-10-05  Reuben Thomas  <rrt@sc3d.org>

	Obsolete macros that are trivial wrappers of AX_WITH_PROG.

2010-09-24  Václav Haisman  <V.Haisman@sh.cvut.cz>

	AX_COMPILER_VENDOR: adding support for Clang compiler

2010-09-24  Jaroslav Hajek  <hajek@hajek.vzlu.local>

	AX_BLAS: avoid caching issues

2010-09-24  Peter Simons  <simons@cryp.to>

	Updated NEWS file, bumped serial numbers after recent changes, and remedied minor cosmetic issues.

2010-09-24  Jim Meyering  <meyering@redhat.com>

	build: m4-quote use of AC_LANG_PROGRAM to avoid warning from new autoconf
	Using autoconf-2.68 would evoke many new warnings like this:

	  configure.ac:78: warning: AC_LANG_CONFTEST: no AC_LANG_SOURCE call detected in body
	  ../../lib/autoconf/lang.m4:194: AC_LANG_CONFTEST is expanded from...
	  ../../lib/autoconf/general.m4:2591: _AC_COMPILE_IFELSE is expanded from...
	  ../../lib/autoconf/general.m4:2607: AC_COMPILE_IFELSE is expanded from...
	  ../../lib/m4sugar/m4sh.m4:606: AS_IF is expanded from...
	  ../../lib/autoconf/general.m4:2032: AC_CACHE_VAL is expanded from...
	  ../../lib/autoconf/general.m4:2053: AC_CACHE_CHECK is expanded from...
	  ax/ax_boost_thread.m4:35: AX_BOOST_THREAD is expanded from...
	  configure.ac:78: the top level

	Autoconf was unable to detect the existing use of AC_LANG_SOURCE
	because it was underquoted.  Fix that.

2010-09-24  Jim Meyering  <meyering@redhat.com>

	replace TAB SP{8} by TAB TAB, repeatedly

	replace SP*-TAB by TAB, now that we know there are fewer than 8 SP
	git grep -l ' 	'|xargs perl -pi -e 's/ +\t/\t/'

	change SP-TAB inside a [...] expression to TAB-SP
	git grep -l '\[ 	.*\]' \
	  | xargs perl -pi -e 's/\[ \t([^]]*\])/[\t $1/g'

	replace SP{8}TAB by TABTAB

2010-09-22  Reuben Thomas  <rrt@sc3d.org>

	Add AX_CC_FOR_BUILD for cross-compilation support.

	Change AX_LUA_LIB_VERSION to AX_LUA_HEADERS_VERSION, as that's what we're really checking; add AX_LUA_READLINE.

2010-09-17  Harald van Dijk  <truedfx@gentoo.org>

	AX_PREFIX_CONFIG_H: added support for system shell "dash"
	The AX_PREFIX_CONFIG_H macro doesn't work with dash, the bug is already
	noted in the source file. As of autoconf 2.62, AS_ECHO can be used to
	print strings that may contain backslashes or look like options. This
	patch updates AX_PREFIX_CONFIG_H to use it.

	The comment in the source file refers to $ECHO from libtool, but this
	requires libtool.m4 which is not part of autoconf, and AS_ECHO is. On
	the other hand, libtool.m4 (at least the one on my system) only requires
	autoconf 2.58 or higher, so depending on how much you value
	compatibility with older autoconf versions, that may be a better choice.

	See <http://savannah.gnu.org/patch/?7317> for further details.

2010-09-15  Jaroslav Hajek  <hajek@hajek.vzlu.local>

	AX_BLAS_F77_FUNC: fixed a small typo

	AX_BLAS_F77_FUNC: check for correct integer size

	AX_BLAS_F77_FUNC: save and restore $LIBS variable

2010-09-07  Diego Elio Pettenò  <flameeyes@gmail.com>

	AX_TLS: add support for actions on found/not-found
	Converts to AS_CASE/AS_IF; update doc to note that ICC is also supported.

2010-08-26  Peter Simons  <simons@cryp.to>

	AX_CFLAGS_GCC_OPTION: use AS_VAR_COPY() if available, but don't require it
	Peter Kjellerstedt noticed a problem when using the updated macro with an older
	version of autoconf (e.g. 2.61 as used by debian). AS_VAR_COPY() seems to be a
	relatively new addition to the API, and did not exist in 2.61.

2010-08-25  Peter Simons  <simons@cryp.to>

	AX_CFLAGS_GCC_OPTION: bumped serial number

2010-08-25  Peter Kjellerstedt  <pkj@axis.com>

	AX_CFLAGS_GCC_OPTION: Use an actually existing gcc option as example

2010-08-25  Peter Kjellerstedt  <pkj@axis.com>

	AX_CFLAGS_GCC_OPTION: Correct handling of indirectly named sh vars
	With autoconf 2.67 a use of AX_CFLAGS_GCC_OPTION() like this

	    AX_CFLAGS_GCC_OPTION([-fvisibility=hidden], AM_CFLAGS)

	with an option containing a non-literal character like = suddenly
	breaks. This was due to directly accessing variables defined with
	AS_VAR_PUSHDEF(), rather than using AS_VAR_SET() and AS_VAR_COPY().

2010-08-19  Peter Simons  <simons@cryp.to>

	AX_LIB_MYSQL: dropped trailing white space

	AX_MPI: cosmetic changes to the formatting of the documentaion

2010-08-18  Peter Simons  <simons@cryp.to>

	AX_BOOST_BASE: prefer more portable `...` syntax over $(...) for running sub-shells

	Bumped boost macro serial numbers.

2010-08-18  Jaap Eldering  <eldering@A-Eskwadraat.nl>

	On x86_64 architecture search both lib64 and lib dirs.

	Add check to see if any library is found.

2010-08-18  Peter Simons  <simons@cryp.to>

	AX_LIB_MYSQL: bumped serial number

2010-08-18  Wim Lewis  <wiml@hhhh.org>

	AX_LIB_MYSQL: If mysql_config isn't found, see if we can find mysql_config5.

	Bug fixes for AX_LIB_MYSQL: - omit spurious "-o test" which would cause $MYSQL_CONFIG to be ignored sometimes - $MYSQL_CONFIG is a precious var - don't set HAVE_MYSQL if we checked the version and discovered it's too old

2010-08-10  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>

	AX_MPI: Fix recommendation for compiling everything with MPI.
	Fix typos when compiling everything with MPI. Update description to
	include defaulting CC to MPICC if only the latter was set. See

	  http://lists.gnu.org/archive/html/autoconf-archive-maintainers/2010-08/msg00000.html

	for further details.

2010-08-10  Peter Simons  <simons@cryp.to>

	AX_LIB_SQLITE3: fixed a trivial typo, no functional change

	AX_CHECK_GNU_MAKE: remove extraneous new-line in macro header
	According to <http://savannah.gnu.org/patch/?7259>, the extraneous
	newline causes trouble in some versions of Autoconf/Automake.

2010-08-10  Jaap Eldering  <eldering@a-eskwadraat.nl>

	AX_BOOST_BASE: fix under-quoted shell variable

2010-07-16  Olaf Meeuwissen  <olaf.meeuwissen@avasys.jp>

	The boost macros for iostreams, regex, serialization, signals, system, test_exec_monitor, unit_test_framework, wave, and wserialization have been patched not to rely on being executed by a 'bash' shell.

2010-06-15  Philip Allison  <philip.allison@smoothwall.net>

	AX_PTHREAD: fix compiler warning in AC_TRY_LINK test program
	The test program generated by AX_PTHREAD's AC_TRY_LINK invocation generates a
	compiler warning (on Linux, using GCC 4). When building with "-Wall -Werror" in
	CFLAGS, as done during development to catch unexpected warnings, this turns
	into a compiler error; hence, all of the AC_TRY_LINK invocations fail, and the
	macro fails to detect any suitable compiler/linker flags for pthreads usage.

	A sample from config.log showing the error follows.

	  configure:16038: result: no
	  configure:15936: checking whether pthreads work without any flags
	  configure:16029: gcc -o conftest -O3 -g -Wall -Werror -pipe -fvisibility=hidden -Wl,-O1 -Wl,--as-needed conftest.c >&5
	  cc1: warnings being treated as errors
	  conftest.c: In function 'main':
	  conftest.c:31: error: 'th' is used uninitialized in this function

	This patch fixes the issue by placing pthread_create before pthread_join in the
	test program.

2010-06-04  Peter Simons  <simons@cryp.to>

	AX_CHECK_ZLIB: dropped trailing white space

	AX_CHECK_OPENSSL: minor cosmetic change to unbreak the gen-authors.sh script

2010-06-03  Peter Simons  <simons@cryp.to>

	AX_BOOST_DATE_TIME, AX_BOOST_FILESYSTEM: avoid use of shell constructs that don't work with "dash"

2010-06-02  Peter Simons  <simons@cryp.to>

	AX_PTHREAD: fixed typo in local variable that broke the macro on Darwin
	Thanks to Markus Elfring for pointing that out.

2010-06-02  Timothy Brown  <tbrown@freeshell.org>

	AX_LIB_HDF5: added support for showconfig output from HDF5 version 1.8.4

2010-06-02  Dustin J. Mitchell  <dustin@zmanda.com>

	Remove spurious space after -L in ax_check_openssl.m4, thanks to Pavel Volkovitskiy in <https://savannah.gnu.org/patch/?7215>

2010-05-14  Torsten Landschoff  <torsten@landschoff.net>

	AX_PKG_SWIG: Fix the version detection of AX_PKG_SWIG to support SWIG >= 2.0.
	The version detection in the AX_PKG_SWIG macro was incorrect and failed
	to accept SWIG 2.0 where SWIG >= 1.3.x is requested.

	Patch submitted in <http://savannah.gnu.org/patch/?7187>.

2010-05-12  Timothy Brown  <tbrown@freeshell.org>

	AX_LIB_HDF5: test whether the HDF5 library is available or not
	Submitted in <http://savannah.gnu.org/patch/?7179>.

2010-04-23  Peter Simons  <simons@cryp.to>

	AX_PYTHON_EMBED: bumped serial number after recent changes

2010-04-22  Ilya Etingof  <ilya@glas.net>

	Fix typo in ax_python_embed -o correctly defun AX_PYTHON_INSIST

2010-04-20  Peter Simons  <simons@cryp.to>

	AX_LUA: updated serial number to match the number of commits to this macro

2010-04-20  Mike Park  <MikePark.rb@GMail.com>

	AX_F90_MODULE_FLAG: test module include path with no space between -I and path
	(for compaq alpha fort compiler)

2010-04-02  Joel Smith  <js-gnuaca@jk1.net>

	AX_PREFIX_CONFIG_H: Removed extra spaces (which break prefixed macros)

2010-03-12  Reuben Thomas  <rrt@sc3d.org>

	Run Lua with empty LUA_INIT, to avoid picking up user settings.

2010-03-10  Mateusz Loskot  <mateusz@loskot.net>

	AX_LIB_LIBKML: Detect Google's libkml library <http://code.google.com/p/libkml/>.
	Initial version. See <https://savannah.gnu.org/patch/?7109> for further details.

2010-03-04  Peter Johansson  <trojkan@gmail.com>

	AX_CHECK_ZLIB: fix bogus result message
	When calling configure without any --with-zlib or --without-zlib, the
	configure output was

	  checking if zlib is wanted... checking for inflateEnd in -lz... yes
	  checking zlib.h usability... yes
	  checking zlib.h presence... yes

	while I expected

	  checking if zlib is wanted... yes
	  checking for inflateEnd in -lz... yes
	  checking zlib.h usability... yes
	  checking zlib.h presence... yes

	This patch fixes this.

2010-03-01  Peter Simons  <simons@cryp.to>

	ALL: update web site URL to http://www.gnu.org/software/autoconf-archive/MACRO-NAME.html

2010-02-23  Peter Simons  <simons@cryp.to>

	Dropped e-mail address obscuration from the following macros, because the invalid syntax breaks the texi2html generator:
	  m4/ax_c_arithmetic_rshift.m4
	  m4/ax_c_referenceable_passed_va_list.m4
	  m4/ax_prog_fasm.m4
	  m4/ax_prog_fasm_opt.m4
	  m4/ax_prog_hla.m4
	  m4/ax_prog_hla_opt.m4
	  m4/ax_prog_masm.m4
	  m4/ax_prog_masm_opt.m4
	  m4/ax_prog_nasm.m4
	  m4/ax_prog_nasm_opt.m4
	  m4/ax_prog_tasm.m4
	  m4/ax_prog_tasm_opt.m4
	  m4/ax_prog_yasm.m4
	  m4/ax_prog_yasm_opt.m4
	  m4/ax_sys_perlsharpbang.m4

2010-02-19  Peter Simons  <simons@cryp.to>

	AX_*_JAVA_*: fixed use of $EXEEXT
	Further details can be found at <http://savannah.nongnu.org/patch/?6948>.

2010-02-15  Thomas Treichl  <Thomas.Treichl@gmx.net>

	AX_PTHREAD: provide "-pthreads" on 10.6 OS X systems
	See <http://savannah.nongnu.org/patch/?7071> for further details.

2010-02-13  Dustin J. Mitchell  <dustin@zmanda.com>

	AX_MPIP: add new macro
	See https://savannah.nongnu.org/patch/?7092 for further details.

2010-02-08  Francesco Salvestrini  <salvestrini@gmail.com>

	Replaced obsolete AC_HELP_STRING with AS_HELP_STRING

2010-02-02  Guido U. Draheim  <guidod@gmx.de>

	AX_SYS_LARGEFILE_SENSITIVE: on x64 targets some largefile tests aren't made -> provide defaults

2010-01-25  Peter Simons  <simons@cryp.to>

	Assigned all macros a unique serial number.
	The serial number corresponds to the number of commits that have
	modified the macro in the Archive's Git repository. Refer to
	http://www.gnu.org/software/libtool//manual/automake/Serials.html to
	find out why these numbers are useful.

2010-01-12  Filippo Giunchedi  <filippo@esaurito.net>

	AX_RESTORE_FLAGS, AX_SAVE_FLAGS: initial versions
	Shamelessly copied from the great VLC.

2010-01-05  Peter Simons  <simons@cryp.to>

	Augmented the text of the all-permissive license by an express warranty disclaimer.
	This has been suggested by the FSF on http://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-Files.html.

	AX_PTHREAD: minor changes to the AC_TRY_LINK command so that the code compiles when -Wall and -Werror are set

	AX_CXX_VERBOSE_TERMINATE_HANDLER: replaced by a more generic implementation that's not limited to GNU libstdc++
	Submitted by Kevin Locke in <https://savannah.nongnu.org/patch/?7005>.

2010-01-01  Mike Frysinger  <vapier@gentoo.org>

	AX_BOOST_BASE: fix host boost search when cross-compiling
	The AX_BOOST_BASE macro likes to do searches in the host paths (/usr and
	such) which is obviously incorrect for cross-compiling.  So disable these
	fallback searches when cross-compiling.

2009-12-28  Peter Simons  <simons@cryp.to>

	AX_BOOST_BASE: add ACTION-IF-FOUND/ACTION-IF-NOT-FOUND-style API
	Changes on 2009-12-02 by Peter Adolphs:

	 - fixed broken indentation (tabs/spaces)
	 - added ACTION-IF-FOUND and ACTION-IF-NOT-FOUND
	 - notice instead of error when boost was not found
	 - changed help message

	Changes on 2009-11-28 by Tim Niemueller:

	 - fixed problem with lib dir for 64Bit systems

2009-12-27  Peter Simons  <simons@cryp.to>

	AX_PATH_BDB: spell Rafal Rzepecki's name correctly
	More details can be found in e000442ec25f72576b75ea32e342fb1e503a944e.

	AX_C_PRINTF_THSEP: deprecated because of technical flaws
	See http://savannah.nongnu.org/patch/?6848 for further details.

2009-12-25  Neil Mayhew  <neil_mayhew@users.sourceforge.net>

	AX_CHECK_ICU: added support for icu-specific CPPFLAGS
	This macro uses the icu-config utility which treats CPPFLAGS separately
	from CFLAGS and CXXFLAGS. Clients should be able to obtain the value of
	CPPFLAGS, which is not currently possible. This patch fixes that.

	Note that this behavior is slightly different from PKG_CHECK_MODULES,
	since the underlying pkg-config doesn't distinguish between CFLAGS and
	CPPFLAGS. Using CFLAGS instead of CPPFLAGS with icu-config leads to
	problems, such as header files not found, and compilation errors since
	icu has its own slightly quirky ideas about what kind of strict warnings
	should be used, even though these are not required for using the ICU
	headers.

	Clients should typically use ICU_CPPFLAGS rather than ICU_CFLAGS or
	ICU_CXXFLAGS if they just want to be able to find headers.

2009-12-25  Peter Simons  <simons@cryp.to>

	AX_C_IFDEF: deprecated in favor of the standard Autoconf macro AC_CHECK_DECL

2009-12-23  Peter Simons  <simons@cryp.to>

	Consistently indent quoted paragraphs with two blanks.

	Replaced all tab characters in macro header sections with an appropriate number of blanks.

2009-12-17  Peter Simons  <simons@cryp.to>

	AX_CXX_HELPFUL_TERMINATE_HANDLER: initial version
	Submitted by Kevin Locke in <https://savannah.nongnu.org/patch/index.php?7005>:

	 | As a compliment (or possibly replacement) to the current
	 | AX_CXX_VERBOSE_TERMINATE_HANDLER macro, I present the
	 | AX_CXX_HELPFUL_TERMINATE_HANDLER macro. Rather than specifically looking for
	 | the GNU libstdc++ verbose_terminate_handler, this macro uses a test program
	 | which throws an uncaught exception then checks if the output contains
	 | information about the exception. This way it can detect helpful terminate
	 | handlers other than the current one provided with GNU libstdc++.
	 |
	 | The design of this macro is not perfect. Most importantly, the logic for
	 | capturing and testing the output of the test program is not very elegant. I
	 | had first attempted to check for output from within the test program (by
	 | redirecting std::cerr, capturing SIGABRT, etc.) but it was excessively ugly
	 | and not very portable. The result is that the logic in the macro itself is a
	 | little more awkward so that the test program is trivial. I think it was a
	 | good trade, but feedback is welcome.

2009-12-17  Dustin J. Mitchell  <dustin@zmanda.com>

	rename occurrences of AC_PROG_SWIG to AX_PKG_SWIG

2009-12-16  Peter Simons  <simons@cryp.to>

	ax_pkg_swig.m4: cosmetic changes

2009-12-16  Matthew William Cox  <matt@mattcox.ca>

	modernize the name of cache variables in ax_ext
	The name space structure for cache variables should now contain _cv_.
	I've left them in the AX name space, so the cache variables used by
	ax_ext are now named ax_cv_...

2009-10-25  Alan Jenkins  <alan-jenkins@tuffmail.co.uk>

	ax_enable_builddir: improve quality of generated top-level Makefile
	The top-level Makefile is generated by mangling rules, "a: b".  We
	already avoid mangling "a := b".  But we should also exclude "a = :".

	Apparently this was causing unbalanced parenthesis errors on some
	systems.

	Reported-by: Mike Frysinger <vapier@gentoo.org>

2009-10-08  Dustin J. Mitchell  <dustin@zmanda.com>

	Rename AC_PROG_SWIG to AX_PKG_SWIG, set SWIG='' when not found, and add action-if-[not-]found options

2009-10-05  Reuben Thomas  <rrt@sc3d.org>

	Fix incorrect setting of ax_cv_curses when curses was not found.

2009-10-04  Reuben Thomas  <rrt@sc3d.org>

	Merge branch 'master' of git://git.sv.gnu.org/autoconf-archive

	Remove --with-lua-{includes,libraries} as the GNU Coding Standards say CPPFLAGS and LDFLAGS should be used for this sort of thing.

2009-09-21  Peter Simons  <simons@cryp.to>

	AX_LATEX_*: Deprecated because of licensing issues.

	AX_CFLAGS_FORCE_C89: cosmetic, no functional change

	AX_GCC_LIBRARIES_DIR: cosmetic, no functional change

2009-09-21  Reuben Thomas  <rrt@sc3d.org>

	Merge branch 'master' of git://git.sv.gnu.org/autoconf-archive

	Add AX_CFLAGS_FORCE_C89.

2009-09-19  Francesco Salvestrini  <salvestrini@gmail.com>

	Merge branch 'master' of ssh://salvestrini@git.sv.gnu.org/srv/git/autoconf-archive

2009-09-19  Peter Simons  <simons@cryp.to>

	AX_PROG_PERL_MODULES: cosmetic in the documentation, no functional changes

2009-09-18  Peter Simons  <simons@cryp.to>

	Fixed trivial typos.

	AX_CHECK_ALLOCATED_CTIME: don't cast char* to void* when calling free(2)
	The cast is redundant and gnulib complains about it, too.

	AX_AM_MACROS_STATIC: drop trailing whitespace

2009-09-18  Francesco Salvestrini  <salvestrini@gmail.com>

	Fixed AX_GCC_INSTALL_DIR

	Fixed AX_GCC_LIBSUPCXX

	Introduced AX_GCC_LIBRARIES_DIR

2009-08-24  Peter Simons  <simons@cryp.to>

	AX_LATEX_*: marked obsolete because of issues with LGPL license
	The AX_LATEX_* family of macros is distributed under the LPGL license.
	Use of that license is discouraged for Autoconf macros, because it might
	impose licensing restrictions on the generated configure script. All
	other macros in the Archive that are licensed under LGPL or GPL feature
	an explicit Autoconf Exception that lifts those limitations, but the
	LaTeX macros did not. Unfortunately, all attempts to contact the author
	with a request to remedy the situation have been been unsuccessful.

	Dropped obsolete macros from the repository.
	These macros have been replaced by newer versions and are no longer required.
	Where applicable, the newer versions feature an AU_ALIAS() forwarder that
	redirects invocations of the obsolete macro to the current one.

2009-08-20  Peter Johansson  <peterandrejohansson@gmail.com>

	AX_AM_MACROS_STATIC: include date stamp in the generated file

2009-08-13  Reuben Thomas  <rrt@sc3d.org>

	Add AU_ALIAS calls to new files for all recently renamed macros.

2009-08-12  Peter Simons  <simons@cryp.to>

	AX_FUNC_WHICH_GETSERVBYNAME_R: cosmetic, no functional change

2009-08-12  Bogdan Drozdowski  <bogdandr # op . pl>

	Improved portability.

	Re-released these macros under LGPL with an Autoconf exception.

2009-08-11  Peter Simons  <simons@cryp.to>

	Revert "Add AU_ALIAS calls to obsolete macros."
	Commit b456074a0da5f319a512c043e6c5102e078923f4 adds AU_ALIAS calls that
	forward from the obsolete macro names to the new ones. However, at this point
	it's uncertain whether that usage of AU_ALIAS actually works as intended. In
	order to avoid breaking things until the issue has been clarified, the change
	is reverted.

2009-08-11  Reuben Thomas  <rrt@sc3d.org>

	Add AU_ALIAS calls to obsolete macros.

2009-08-10  Peter Simons  <simons@cryp.to>

	AX_PATH_GENERIC: fixed credits to Angus Lee

2009-08-10  Reuben Thomas  <rrt@sc3d.org>

	More renamings missed previously.

2009-08-08  Francesco Salvestrini  <salvestrini@gmail.com>

	AX_WITH_PROG: Fixed excessive quoting accidentally introduced earlier

2009-08-07  Peter Simons  <simons@cryp.to>

	AX_PROG_PERL_MODULES: add the ability to check for minimum required version
	See https://savannah.nongnu.org/patch/?6889 for further details.

	Ensure that all LaTeX macros use AX_LATEX_TEST instead of the obsolete _ACLTX_TEST.

	_AC_C_IFDEF: rename to AX_C_IFDEF

	Center the URL at the top of every file and use consistent word-wrapping.

	Dropped renamed versions of those macros that were obsolete to begin with.
	The macros AC_CHECK_CURL, AC_CHECK_TAGLIB, AC_COMPILE_WARNINGS,
	AC_PROMPT_USER, AC_PROMPT_USER_NO_DEFINE, and VL_PROG_CC_WARNINGS were
	obsolete and are about to be deleted. There seems to be no point in
	creating renamed, obsolete copies of those macros with an AX_ prefix.

2009-08-07  Reuben Thomas  <rrt@sc3d.org>

	Merge branch 'master' of git://git.sv.gnu.org/autoconf-archive

	Rename macros with no prefix to have an AX_ prefix.

	Rename files to match macro names.
	Also rename AC_C_COMPILE_VALUE to AX_C_COMPILE_VALUE.

	Fix some ax_ to AX_.

	Rename SMR_WITH_BUILD_PATH to AX_WITH_BUILD_PATH.

	Rename SG_AFS to AX_AFS.

	Rename RSSH_* prefixes to AX_* prefixes.

	Rename RLC_XERXESC to AX_XERCESC.

	Rename MS_* prefixes to AX_* prefixes.

	Rename MERK_SIP_DEVEL to AX_SIP_DEVEL.
	Also add a FIXME to use AX_COMPARE_VERSION rather than perl.

	Rename MDL_* prefixes to AX_* prefixes.

2009-08-06  Reuben Thomas  <rrt@sc3d.org>

	Rename KLM_SYS_WEAK_ALIAS to AX_SYS_WEAK_ALIAS.

	Rename IMMDX_LIB_METIS to AX_LIB_METIS.

2009-08-06  Peter Simons  <simons@cryp.to>

	VL_*: removed duplicate OBSOLETE MACRO section accidentally introduced earlier

2009-08-06  Reuben Thomas  <rrt@sc3d.org>

	Rename gl_TRILINOS_ABSOLUTE_HEADER to AX_ABSOLUTE_HEADER.

	Rename CT_CHECK_POSTGRES_DB to AX_CHECK_POSTGRES_DB.

	Rename BNV_HAVE_QT to AX_HAVE_QT.
	Remove inline old revision history.

	Rename MNI_CXX_HAVE_KOENIG_LOOKUP to AX_CXX_HAVE_KOENIG_LOOKUP.

	Rename file to match macro name.

	Rename MP_WITH_CURSES to AX_WITH_CURSES.

	Rename AC_ prefixes to AX_ (only in names of aa macros!).

2009-08-06  Reuben Thomas  <rrt@sc3d.org>

	Rename AZ_PYTHON_* to AX_PYTHON_*.
	Since there is already an ax_python.m4, use the name
	az_python_embed.m4, since the macros are aimed at embedding python.

	Punctuate "Mac OS X" with spaces.

2009-08-06  Reuben Thomas  <rrt@sc3d.org>

	Add python2.6 to list of binaries looked for.

	Fix 'Renamed to' lines' case of macro names.

	Rename AM_ prefixes (those of aa macros only!) to AX_.

	Rename ACLTX_ prefixes to AX_LATEX_ prefixes.

	Rename ACX_ prefixes to AX_ prefixes.

	Rename AG_ prefixes to AX_ prefixes.

	Change remaining dps_ and etr_ prefixes to ax_.

	Rename ADL_* prefixes to AX_ prefixes.

	Rename more occurrences of vl_* to ax_*.

	Rename DPS_ prefixed macros to AX_ prefixed macros.
	Note: dps_check_plugin.m4 becomes ax_check_java_plugin.m4 to match the
	name of the macro.

	Rename ETR_ prefixed macros to AX_ prefixed macros.

	Remove references to obsoleted macros.

	Rename VL_* macros to AX_* macros.

2009-08-04  Peter Simons  <simons@cryp.to>

	AX_PATH_GENERIC: use consistent word-wrapping

	AX_LIB_TAGLIB: use consistent word-wrapping

	AX_LIB_ORBIT2: use consistent word-wrapping

	AX_LIB_CURL: use consistent word-wrapping

	AC_PROMPT_USER_NO_DEFINE: use consistent word-wrapping

	AC_PROMPT_USER: use consistent word-wrapping

	AC_PATH_GENERIC: use consistent word-wrapping

	RSSH_CHECK_OFF64_T: re-released under all-permissive license
	In <42fca37f5f6a9deb6fa1d0867359d629.squirrel@wmail.gradsoft.ua>, Ruslan kindly
	agreed to distribute his macro under the all-permissive license.

2009-08-03  Peter Simons  <simons@cryp.to>

	Obsoleted AC_COMPILE_WARNINGS, AX_CFLAGS_WARN_ALL_ANSI, and VL_PROG_CC_WARNINGS.
	The functionality provided by these macros overlaps with AX_CFLAGS_WARN_ALL.
	See <f92540e30908010651s6ff80471v1b0f43064183aa50@mail.gmail.com> on the
	autoconf-archive-maintainers mailing list for further details.

2009-08-03  Dustin J. Mitchell  <dustin@zmanda.com>

	Merge branch 'master' of git://git.sv.gnu.org/autoconf-archive

2009-08-01  Reuben Thomas  <rrt@sc3d.org>

	AX_MAINTAINER_MODE_AUTO_SILENT: fixed a few small typos in the documentation

2009-08-01  Francesco Salvestrini  <salvestrini@gmail.com>

	give credit to the authors of the macros that inspired these improved versions

	AC_PATH_GENERIC: work around for 1-dot problem

2009-07-31  Peter Simons  <simons@cryp.to>

	AC_CHECK_CURL: marked obsolete

	AC_CHECK_TAGLIB: marked obsolete

	CHECK_SSL: marked obsolete

	AC_PATH_GENERIC: marked obsolete

2009-07-31  Francesco Salvestrini  <salvestrini@gmail.com>

	New ORBit2 related macro (using AX_PATH_GENERIC)

	Renewed version of AC_CHECK_TAGLIB (using AX_PATH_GENERIC)

	Renewed version of AC_CHECK_CURL (using AX_PATH_GENERIC)

	Rearranged AC_PATH_GENERIC in order to use AX_COMPARE_VERSION

2009-07-30  Reuben Thomas  <rrt@sc3d.org>

	AX_WITH_PROG: fixed handling of '--without-foo' arguments
	Submitted in <https://savannah.nongnu.org/patch/?6876>.

2009-07-27  Peter Simons  <simons@cryp.to>

	AC_CXX_HAVE_STD: removed stray '}' character in comments

	AX_HAVE_EPOLL: fixed minor typo in comments

	AC_LIBTOOLIZE_CFLAGS: avoid use of non-ascii characters in comments

	AC_FUNC_SNPRINTF: avoid use of non-ascii characters in comments

	AC_FUNC_MEMMOVE: avoid use of non-ascii characters in comments

	AC_CXX_LDFLAGS_STD_LANG: avoid use of non-ascii characters in comments

	AC_CXX_CXXFLAGS_STD_LANG: avoid use of non-ascii characters in comments

	AC_CXX_CPPFLAGS_STD_LANG: avoid use of non-ascii characters in comments

	AC_CXX_COMPILER_VENDOR: avoid use of non-ascii characters in comments

	_AC_C_IFDEF: avoid use of non-ascii characters in comments

2009-07-22  Peter Simons  <simons@cryp.to>

	AX_SPLIT_VERSION: fixed minor two typos in the documentation
	Thanks to Reuben Thomas for pointing those out.

2009-07-21  Reuben Thomas  <rrt@sc3d.org>

	MP_WITH_CURSES: allows the user to set CURSES_LIB in the environment
	This patch also fixes a code typo, where LIBS was used instead of
	mp_save_LIBS in the last test.

	MP_WITH_CURSES: fixed typo in the documentation

2009-07-21  Guido U. Draheim  <guidod@gmx.de>

	AX_CFLAGS_NO_WRITABLE_STRINGS: bugfix
	Imported from ac-archive.cvs.sourceforge.net.

2009-07-20  Peter Simons  <simons@cryp.to>

	AC_PATH_GENERIC: cosmetic markup fixes
	The synopsis must be written in one line (or the HTML generator will fail).

2009-07-18  Dustin J. Mitchell  <dustin@zmanda.com>

	update copyright years

	remove Amanda-specific reference to $LOCSYSPATH

2009-07-17  Filippo Giunchedi  <filippo@esaurito.net>

	AX_RUBY_DEVEL: use proper variable for error

2009-06-23  Bert Wesarg  <bert.wesarg@googlemail.com>

	ac_path_generic.m4: make LIBRARY-config, --cflags, and --libs customizable

	ac_path_generic.m4: add AC_ARG_VAR()s
	Add AC_ARG_VAR() for _CONFIG, _CFLAGS, and _LIBS.

	ac_path_generic.m4: use AS_HELP_STRING() in AC_ARG_WITH()
	Quoting looks strange but result is correct.

2009-06-22  Diab Jerius  <dj@head.cfa.harvard.edu>

	VL_LIB_READLINE: set LIBS correctly in case of a cache hit
	The macro didn't set LIBS appropriately if there is a cache hit. It only
	sets it if there is a cache miss.

	I've modified the code to set LIBS in the stanza which checks to see if
	$vl_cv_lib_readline has been set.  This required resetting LIBS in the
	AC_CACHE_CHECK "COMMANDS-TO-SET-IT" argument so that the appropriate
	libs wouldn't be included twice if there was a cache miss.

2009-06-16  Dustin J. Mitchell  <dustin@zmanda.com>

	AX_CHECK_OPENSSL: initial submission
	See https://savannah.nongnu.org/patch/?6849 for details.

2009-06-10  Peter Johansson  <trojkan@gmail.com>

	AX_COMPARE_VERSION: use AC_REQUIRE to declare dependency on AC_PROG_AWK

2009-06-10  Peter Simons  <simons@cryp.to>

	AC_PYTHON_DEVEL: avoid wiping the user settings of $CPPFLAGS and $LIBS
	Submitted by aoz.syn@gmail.com in <http://savannah.nongnu.org/patch/?6847>.

2009-06-04  Krzysztof Burghardt  <krzysztof@burghardt.pl>

	AX_LIB_NOKALVA: check for the existence of OSS Nokalva
	http://savannah.nongnu.org/patch/?6842

2009-06-04  Peter Simons  <simons@cryp.to>

	MP_WITH_CURSES: use standard word-wrapping boundaries

	AX_DIST_RPM: use standard word-wrapping boundaries

2009-04-30  Bill Blough  <bblough@gmail.com>

	AX_LIB_XALAN: initial version
	Detect the Apache Xalan C++ XSLT processor. This is a derivative work based on
	AX_LIB_XERCES by Mateusz Loskot.

2009-04-30  Reuben Thomas  <rrt@sc3d.org>

	MP_WITH_CURSES: add support for ncursesw
	http://savannah.nongnu.org/patch/?6819

2009-04-29  Guido U. Draheim  <guidod@gmx.de>

	AX_CREATE_PKGCONFIG_INFO: add support for datarootdir
	Imported from ac-archive.cvs.sourceforge.net.

2009-04-28  Allan Caffee  <allan.caffee@gmail.com>

	AX_DIST_RPM: Do not break VPATH builds
	AX_DIST_RPM was breaking VPATH builds since it was expecting the spec
	template to be in the build directory during configure time.  Obviously
	this breaks distcheck which checks, among other things, VPATH builds.

	AX_DIST_RPM: Do not hard code the spec template
	The spec template was hard coded in and the macro was ignoring the
	template given by the caller.

	AX_DIST_RPM: Remove use of @NAME@ and @VER@.
	It appears that at one point the previously values were being
	substituted in at make time but this is no longer the case.  Modify the
	example to use the @PACKAGE@ and @VERSION@ variables instead.

	AX_DIST_RPM: Update the example spec file in comment.
	The example should use the `License' tag rather than the legacy `Copyright'
	tag.

2009-04-28  Peter Simons  <simons@cryp.to>

	all: macro home pages now reside on savannah (but old links still work)

2009-04-27  Peter Simons  <simons@cryp.to>

	AC_LIB_ID3, AC_LIB_UPNP: release under all-permissive license
	Commit 9da70c52df7bf9fa78d8a27465fa6be4b75e586a should have done that
	over a years ago, but apparently something went wrong.

2009-04-26  Peter Simons  <simons@cryp.to>

	ALL: consistency edits (see NEWS)
	 * Consistently refer to this project as Autoconf Archive.

	 * Removed the LAST MODIFICATION section, because that information is redundant
	   in the presence of Git.

	 * COPYLEFT has been renamed to LICENSE: some licenses, like all-permissive,
	   are no copylefts.

2009-04-26  Peter Simons  <simons@cryp.to>

	Dropped obsolete macros.
	These macros were marked as obsolete for quite a while and are now
	subsequently deleted. This means that the generated distribution archive
	longer contains them either. The respective homepage and download URLs
	on the web server, however, will remain valid for the foreseeable
	future.

2009-04-24  Peter Simons  <simons@cryp.to>

	Bump last-modified dates.

2009-04-24  Matteo Settenvini  <matteo@member.fsf.org>

	AC_PYTHON_DEVEL: added support for python 3

2009-04-24  Allan Caffee  <allan.caffee@gmail.com>

	AX_INSTALL_FILES: fix an improperly escaped double quote
	A bug in quotation was causing AX_INSTALL_FILES and dependent macros to
	break.  This regression was introduced in 9c650e.

2009-04-23  Peter Simons  <simons@cryp.to>

	AUTHORS: Updated author list and copyright headers.

2009-04-23  Mike Frysinger  <vapier@gentoo.org>

	AX_CHECK_LINKER_FLAGS: new func based on AX_CHECK_COMPILER_FLAGS

	AX_CHECK_COMPILER_FLAGS: quote flag name with []
	If a flag contains a comma in it, then it will not be properly passed to
	the AS_TR_SH function.  The $1 needs to be quoted as [$1] to fix this.

2009-04-20  Gabriele Bartolini  <gabriele.bartolini@devise.it>

	AX_PROG_MD5SUM: released under all-permissive license

2009-04-20  Peter Simons  <simons@cryp.to>

	Synchronize last-modified-date with GIT repository.
	The last-modified-date of these macros didn't match their respective
	last-modified-date in the GIT repository. A version bump remedies this
	inconsistency. In hindsight, these dates should have bumped when the
	distribution format changed; all macros had to be touched at this point
	anyway.

	consistency edits
	Cosmetic edits to update copyright headers and word-wrap documentation.

2009-04-20  Allan Caffee  <allan.caffee@gmail.com>

	AX_CVS,AX_DIST_MSI: Rewritten to use AX_ADD_AM_MACRO_STATIC.
	These changes have not been tested very well since I don't have the software
	setup to use either one.  It's also worth mentioning that AX_DIST_MSI appears
	to use GNU Make syntax which will cause Automake to complain unless portability
	warnings are disabled.

	Please feel free to modify this patch and commit message as necessary.

2009-04-20  Allan Caffee  <allan.caffee@gmail.com>

	AX_DIST_RPM (and dependent macros) Modified to use AX_ADD_AM_MACRO_STATIC.
	The macros AX_UPLOAD, AX_INSTALL_FILES, and AX_EXTRA_DIST which are often used
	in conjunction with AX_DIST_RPM were also updated to use
	AX_ADD_AM_MACRO_STATIC.

	Thanks go to Ralf Wildenhues for the idea of adding local cleanup and
	distribution targets as prerequisites the *-local/*-hook targets.

2009-04-20  Allan Caffee  <allan.caffee@gmail.com>

	AX_ADD_AM_MACRO_STATIC: Added a new macro and helpers.
	This new macro adds some text to the file aminclude_static.am when *Autoconf*
	is run.  The current macro AX_ADD_AM_MACRO writes text to the file
	`aminclude.am' when _configure_ is run.  Unfortunately this means that a) the
	existing macro append Make code rather than Automake code as the name would
	imply and b) only works for implementations of Make which allow includes, BSD
	Make and GNU Make are the only ones that come to mind.

	Hopefully this new macro will eventually replace the existing one altogether
	because it allows Automake to do the actual work thereby offering more portable
	Makefiles and pushing logic out of configure conditionals and into
	AM_CONDITIONALs.  However, in an attempt to avoid breaking existing Autoconf
	scripts those macros have been left unchanged for the time being.

2009-04-20  Gabriele Bartolini  <gabriele.bartolini@devise.it>

	AX_PROG_MD5SUM: initial version

2009-04-19  Peter Simons  <simons@cryp.to>

	AUTHORS: updated after recent changes to AX_ENABLE_BUILDDIR

2009-04-19  Alan Jenkins  <alan-jenkins@tuffmail.co.uk>

	AX_ENABLE_BUILDDIR: Add support for "dist-bzip2" target and friends
	We already get a special toplevel Makefile rule for "dist", which
	copies the tarball from the build directory to the source directory.

	Many projects publish tarballs compressed using Bzip2 to save a bit
	more bandwidth.  Automake provides a "dist-bzip2" rule for this
	purpose, and many others for different compression methods.
	Unfortunately the rules don't all match the file extensions (dist-bzip
	makes .bz2).  So for dist-foo rules, just copy *all* the tarballs.
	Ugly, but useful.

2009-04-19  Alan Jenkins  <alan-jenkins@tuffmail.co.uk>

	AX_ENABLE_BUILDDIR: Fix "make distclean" toplevel Makefile target
	$ ./configure; make
	...
	MAKE i686-pc-linux-gnu : 0 * distclean
	make[1]: Entering directory `/home/alan/bootup/src/module-init-tools/build'
	rm -f doc/*.tmp manpage.refs manpage.links
	make[1]: Leaving directory `/home/alan/bootup/src/module-init-tools/build'
	MAKE i686-pc-linux-gnu : 0 * distclean (all local builds)
	# rm -r .
	# (sleep 3)
	rm -r .
	rm: cannot remove directory `.'

	The problem is the method used to determine which builddirs are local,
	and therefore should removed by "make distclean".  It relies on them
	starting with "./", but they don't :-).  Instead, we can assume that
	non-local directories will start with "/" or "../".

2009-04-19  Alan Jenkins  <alan-jenkins@tuffmail.co.uk>

	AX_ENABLE_BUILDDIR: Prevent multiple dist-all targets in top-level Makefile
	$ ./configure; make
	...
	Makefile:852: target `dist-all' given more than once in the same rule.

	The macro generates additional X-all targets, meaning "make target X in
	all build directories".  My source Makefile includes a rule like this:

	    dist dist-all: ...

	It gets converted to

	    dist dist-all dist-all:

	When what we really want is this

	    dist dist-all:

2009-04-19  Alan Jenkins  <alan-jenkins@tuffmail.co.uk>

	AX_ENABLE_BUILDDIR: Fix ":=" assignments in top-level generated Makefile
	The sed script which generates the top-level Makefile from the Makefile
	in the build directory is flawed.  It treats an assignment of the form
	"TESTSUITE := ..." as a makefile rule - because it contains ":".

	$ make
	...
	MAKE  : 1 * TESTSUITE
	make[1]: Entering directory `/home/alan/bootup/src/module-init-tools/build'
	make[1]: *** No rule to make target `TESTSUITE'.  Stop.

	Fix the sed script to skip the rule-related commands for lines which
	contain ":=".  As a cleanup, we can also skip the rule-related commands
	for lines which do not contain ":".  That simplifies those commands,
	because they don't need to test for ":" themselves.

2009-04-19  Alan Jenkins  <alan-jenkins@tuffmail.co.uk>

	AX_ENABLE_BUILDDIR: Fix builds configured from a subdirectory
	I would like to be able to bypass ENABLE_BUILDDIR and configure a
	subdirectory myself, without generating a toplevel Makefile.
	(This is for an unusual automated testsuite which tests behaviour
	with different configure options, and compiles with -DJUST_TESTING
	to build a testable version of the program).

	$ mkdir build; cd build; ../configure
	...
	config.status: executing buildir commands
	config.status: create top_srcdir/Makefile guessed from local Makefile
	config.status: build in yes (HOST=)
	...
	$ cd ..; make
	MAKE i686-pc-linux-gnu : 0 * all-all
	/bin/bash: line 9: cd: yes: No such file or directory
	make: *** [all-all] Error 1

	Also:
	./configure --disable-builddir
	...
	config.status: executing buildir commands
	config.status: keeping top_srcdir/Makefile from earlier configure
	...

	Which should really be:

	config.status: executing buildir commands
	config.status: leaving top_srcdir/Makefile untouched

2009-04-19  Alan Jenkins  <alan-jenkins@tuffmail.co.uk>

	AX_ENABLE_BUILDDIR: Fix path for config.guess
	Using this macro, I get a warning that config.guess can't be found.
	It doesn't cause a problem for me because I'm not cross-compiling
	for multiple hosts, but it is annoying.

		$ ./configure
		...
		$ make
		sh: Can't open ../config.guess
		...

	Reason: ".." is "$AUX".
	The top-level makefile is generated *after* the configure script reruns
	itself in the build directory.  At that point, AUX is equal to "..".

	Solution: use AM_AUX_DIR_EXPAND to generate an absolute version of
	ac_aux_dir.

2009-04-19  Toni Corvera  <outlyer@gmail.com>

	AX_BOOST_{THREAD,PROGRAM_OPTIONS}: replace non-portable shell constructs
	The mentioned files contain a non-portable shell construct, brace expansion
	(e.g. dash and FreeBSD's sh don't support it). I guess the other ax_boost_<lib>
	macro files contain similar stuff but I'm not using any other boost libs so I'd
	rather not mess with them.

2009-04-19  Michael McMaster  <email@michaelmcmaster.name>

	AX_C99_INLINE: initial version
	The macro determines whether the "inline" keyword of a C99 compiler is
	standards compliant or not.  I am using this macro support differences
	between gcc 4.2 (and earlier) and gcc 4.3 (and later) when using the
	"-std= c99" option.  It may also be useful for other compilers.  (For
	details of the differences between the compiler versions refer to
	http:// gcc.gnu.org/gcc-4.3/porting_to.html "Sematic change of extern
	inline")

	Example configure.ac:

	  AC_INIT([foo], [0.1])
	  AM_INIT_AUTOMAKE

	  AC_PROG_CC
	  AC_PROG_CC_C99
	  if test "$ac_cv_prog_cc_c99" == "no"; then
	    AC_MSG_ERROR([A C99 compiler is required.])
	  fi

	  AX_C99_INLINE

	  AC_CONFIG_HEADERS([config.h])
	  AC_CONFIG_FILES([Makefile])
	  AC_OUTPUT

	Example source file foo.h:

	  #ifdef HAVE_C99_INLINE
	  inline int myFunction(int a) { return a + 1; }
	  #else
	  static inline int myFunction(int a) { return a + 1; }
	  #endif

	Example source foo.c:

	  extern inline int myFunction(int a);

2009-04-19  Reuben Thomas  <rrt@sc3d.org>

	LUA: minor updates

2009-04-19  Andreas Saebjoernsen  <andreas.saebjoernsen@gmail.com>

	AX_BOOST: added support for Wave
	Updated macros due to link dependencies required in AC_CHECK_LIB.
	AX_BOOST_FILESYSTEM requires the BOOST_SYSTEM library while
	AX_BOOST_WAVE requires BOOST_THREAD_LIBRARY to link.

2009-04-19  Francesco Salvestrini  <salvestrini@users.sourceforge.net>

	Improved documentation.

	AX_PROG_BISON, AX_PROG_FLEX: bugfixes

2009-04-19  Bogdan  <bogdandr@op.pl>

	AC_PROTOTYPE: added proper call to AC_SUBST()
	This patch updates the AC_PROTOTYPE_DEFINES() function to call
	AC_SUBST() to substitute the correct values in the configure-generated
	files. This is required if you want to distribute a public header file
	that depends on some target system property.

2009-04-19  Francesco Salvestrini  <salvestrini@users.sourceforge.net>

	AX_GCC_VERSION: bugfix

2009-04-19  Peter Simons  <simons@cryp.to>

	AX_F90_*: update copyright lines

2009-04-19  Luc Maisonobe  <luc@spaceroots.org>

	AX_F90_*: fix cached variable warnings
	Autoconf 2.63 generates warnings when cached variable names have no _cv_
	in them.

2009-04-19  Mats Kindahl  <mats@sun.com>

	AX_PERL_EXT_FLAGS: embedding Perl into a project using Autotools

2009-04-19  Joshua Judson Rosen  <jrosen@ll.mit.edu>

	AX_PROG_DOXYGEN: bugfix
	A collegue of mine recently ran into a problem: some "[]" syntax appear
	to be leaking through when autoconf generated ./configure. Actually, it
	was that a string was over-quoted and was thus not being expanded when
	it should have. In some circumstances, it looks like the bug is `mostly
	silent' (save for some bogus output in config.log), but we have seen
	autoconf fail as a result of the "[]" being taken as an (invalid)
	regexp.

2009-04-05  Reuben Thomas  <rrt@sc3d.org>

	lua.m4: initial version

2009-04-05  Francesco Salvestrini  <salvestrini@users.sourceforge.net>

	AX_PROG_PERL_VERSION, AX_PROG_PYTHON_VERSION: improved documentation

2008-11-07  Sebastian Waschik  <sebastian.waschik@gmx.de>

	AC_CXX_HAVE_VECTOR_AT: bugfix
	Compilation of the test program failed even if the feature is available.

2008-11-07  Rhys Ulerich  <rhys.ulerich@gmail.com>

	Updated AX_TRILINOS macros.

2008-10-08  Peter Simons  <simons@cryp.to>

	AX_CHECK_GL: updated to latest versions from Braden McDaniel

2008-08-25  Dennis Felsing  <dennis@felsin9.DE>

	MP_WITH_CURSES: fix recently introduced bug

2008-08-24  Fabien Coelho  <autoconf.archive@coelho.net>

	AX_LIB_NETTLE: Support for another cryptographic library, "nettle".

2008-08-19  Rhys Ulerich  <rhys.ulerich@gmail.com>

	AX_TRILINOS_*: Test for the Trilinos libraries.
	AX_TRILINOS_AMESO, AX_TRILINOS_BASE, AX_TRILINOS_EPETRA, and
	AX_TRILINOS_TEUCHOS are modeled after the boost library macros.

	ACLTX_CLASS_CWEB: various improvements

2008-08-19  Fabien Coelho  <fabien.coelho@ensmp.fr>

	AC_LIB_*CRYPT*: renamed to ax_lib_*crypt*
	Renamed the recently submitted AC_LIB_*CRYPT* macro to use an AX_LIB
	prefix. Also, the AX_LIB_CRYPTO macro will now find the IDEA algorithm.

2008-08-06  Fabien COELHO  <fabien@coelho.net>

	AC_LIB_{BEECRYPT,CRYPTO,GCRYPT}: check for cryptographic libraries
	These 3 macros check for cryptographic libraries and list their
	available algorithms. It is quite basic, but it fits my needs.

2008-08-06  Rhys Ulerich  <rhys.ulerich@gmail.com>

	ACLTX_CLASS_CWEB: check the presence of the LaTeX cweb package
	This is a one-off version of Boretti's excellent ACLTX_CLASS autoconf
	macro. The macro checks for the presence of the LaTeX cweb package
	(http://www.ctan.org/tex-archive/help/Catalogue/entries/cweb-latex.html).
	The LaTeX cweb package requires some additional boilerplate that would
	normally be generated by CWEB:

	  \input cwebmac
	  \documentclass{cweb}
	  \begin{document}
	  \M{1}
	  \end{document}
	  \fi
	  \fin

2008-07-25  Jaroslav Hajek  <highegg@gmail.com>

	ACX_LAPACK: fix typo
	This patch for Steven Johnson's acx_lapack.m4 fixes a typo and adds a
	missing statement. I believe that the BLAS_LIBS="" statement should be
	there, so that if BLAS is not found, the rest of the test is skipped and
	LAPACK_LIBS is nullified, which makes sense.

2008-06-18  Jaroslav Hajek  <highegg@gmail.com>

	ACX_BLAS_F77_FUNC: bug fixes
	This patch corrects a few cosmetic bugs and adds also the missing checks
	for REAL and INTEGER return values (I have recently seen a case when
	only REALs were broken due to promoting them to double precision).

2008-06-02  Guido U. Draheim  <guidod@gmx.de>

	AX_CREATE_PKGCONFIG_INFO: fix misspelled variable name

2008-05-16  Julian Cummings  <cummings@cacr.caltech.edu>

	AC_COMPILE_CHECK_SIZEOF: bugfix
	There was a typo regarding the optional EXTRA_SIZES argument.

2008-05-16  Francesco Salvestrini  <salvestrini@users.sourceforge.net>

	AX_GCC_INSTALL_DIR and AX_GCC_LIB*: one update and three new submissions

2008-05-07  Peter Simons  <simons@cryp.to>

	AX_HAVE_EPOLL: cosmetic improvement to error message

2008-05-05  Francesco Salvestrini  <salvestrini@gmail.com>

	AX_WITH_*: improvements to the documentation

2008-05-03  Peter Simons  <simons@cryp.to>

	AX_HAVE_EPOLL: bugfix
	Don't print a warning when run an a non-Linux machine.

	AX_CONFIG_FEATURE: bugfix

2008-05-02  Peter Simons  <simons@cryp.to>

	AX_HAVE_EPOLL: bugfix
	Don't print a warning every time that macro is run on a non-Linux
	machine.

	AX_HAVE_ADNS: new submission

	AX_HAVE_{EPOLL,POLL,SELECT}: new submissions

2008-05-02  Francesco Salvestrini  <salvestrini@users.sourceforge.net>

	AX_WITH_{GUILE,PERL,PROG,PYTHON,RUBY}: improved documentation

2008-04-28  Peter Simons  <simons@cryp.to>

	AC_SET_VERSIONLEVEL: obsolete macro
	This macro appears to be broken. Any attempt to use, i.e.

	  AC_SET_VERSIONLEVEL([foo], [1.1.1])

	results in an error message: "m4_popdef: undefined macro: foo_MICRO". If
	someone knows how to fix this problem, please let me know.

2008-04-28  Peter Simons  <simons@cryp.to>

	AX_SET_VERSION_INFO: obsolete macro
	To the best of my understanding, this macro is based on a misconception
	about Libtool's -version-info flag.

	Apparently, the macro invocation AX_SET_VERSION_INFO([2.4.18]) is
	transformed into "-release 2" and "-version-info 4:18". However, those
	two flags contradict each other. The -release option specifies a version
	number in the sense that we all know and love, but -version-info does
	not: that flag implements a fairly sophisticated scheme meant to express
	binary interface compatibility which is supposed to *replace* -release
	versions. Deriving settings for both of those flags from one number
	doesn't make sense.

	See "6.2 Libtool's versioning system" for further details.

2008-04-23  Francesco Salvestrini  <salvestrini@gmail.com>

	AX_GCC_INSTALL_DIR: updated to use new AX_GCC_OPTION

2008-04-17  Peter Simons  <simons@cryp.to>

	AC_CXX_*: added various macros for testing C++98 and C++TR1 compliance
	Benjamin Kosnik kindly submitted his macro collection from libstdc++,

	  http://gcc.gnu.org/onlinedocs/libstdc++/manual/backwards.html#backwards.third

	..., for inclusion in the archive.

2008-04-12  Peter Simons  <simons@cryp.to>

	ALL: updated m4 distribution format
	The markup format distributed by the Autoconf Macro Archive underwent
	the following changes:

	 * All archive entries use '#' comment delimiters, rather than 'dnl',
	   because we would like those comments to go into the generated
	   configure script. It should be simple for everyone to determine
	   where the macro came from originally, who wrote it, and where the
	   latest version can be retrieved. To achieve this, every macro used
	   to start with a distinguished line that shows the URL of its
	   respective home page, i.e.:

	   | ##### http://autoconf-archive.cryp.to/ax_prog_acme.html

	   As it happens, the aclocal utility distributed with Automake
	   ignores all comment lines that start with a double hash '##', thus
	   those home page URLs will not make it into any automatically
	   generated aclocal.m4 file. Duh. To remedy the situation, the
	   following markup is now used instead:

	   | # =================================================================
	   | #        http://autoconf-archive.cryp.to/ax_prog_acme.html
	   | # =================================================================

	 * The 2.x versions of the GNU GPL and LGPL contain the following
	   clause:

	   | You should have received a copy of the <GNU LICENSE NAME> along
	   | with this program; if not, write to the Free Software Foundation,
	   | Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

	   Version 3.x, however, smartly refers the reader to the Web:

	   | You should have received a copy of the GNU General Public License
	   | along with this program. If not, see <http://www.gnu.org/licenses/>.

	   This patch changes all GPL2 and LGPL2 macros to do the same, i.e.
	   to refer to the GNU web site for the full text of the respective
	   license.

	 * Since all m4 files had to be changed in this commit anyway, the
	   opportunity was used to increase the auto-fill column for
	   documentation from 65 to 75 characters per line. It's a trivial
	   change, but it just looks nicer.

2008-03-31  Jaroslav Hajek  <highegg@gmail.com>

	ACX_BLAS_F77_FUNC, ACX_BLAS_WITH_F77_FUNC: initial submission
	Both macros were tested on a machine with gfortran but
	g77-compiled (system-supplied) BLAS and worked as expected.

2008-03-31  Steven G. Johnson  <stevenj@alum.mit.edu>

	ACX_BLAS: added recognition of Intel MKL and Apple vecLib library

2008-03-31  Francesco Salvestrini  <salvestrini@users.sourceforge.net>

	AX_GCC_VERSION, AX_GXX_VERSION: initial submission

2008-03-30  Sean Geoghegan  <seangeo@gmail.com>

	AX_LIB_SQLITE3: fixed a bug in the automatic directory detection
	The auto-detected CPP flags and LD flags for sqlite3 were being
	assigned to the wrong variables.

2008-03-30  Dilyan Palauzov  <Dilyan.Palauzov@aegee.org>

	BERKELEY_DB: silence autoheader 2.61 warning

2008-03-30  Thomas Porschberg  <thomas@randspringer.de>

	AX_BOOST_BASE: add support for --with-boost-libdir
	This patch originated in the PDFedit project [1]. It adds the capability to
	specify the library path explicitly using the `--with-boost-libdir=LIB_DIR'
	flag. This is required, for example, on platforms that offer both 32 and 64
	bit versions of the libraries, but in different directories.

	[1] http://sourceforge.net/projects/pdfedit

2008-03-01  Francesco Salvestrini  <salvestrini@users.sourceforge.net>

	MP_WITH_CURSES: removed autoheader warnings

	AX_PROG_FLEX: test whether AC_PROG_LEX found flex (initial version)

	AX_PROG_BISON: test whether AC_PROG_YACC found bison (initial version)

2008-03-01  Mateusz Loskot  <mateusz@loskot.net>

	AX_LIB_XERCES: updated

2008-02-21  Francesco Salvestrini  <salvestrini@gmail.com>

	AX_PATH_MISSING: added missing 'unset' and improved documentation

2008-02-20  Peter Simons  <simons@cryp.to>

	AX_RUBY_DEVEL: Corrected spelling of the author's name.
	It's Rafal Rzepecki, where the last 'l' really is an &lslash; from
	ISO-8859-2. Unfortunately, that character cannot be used easily in m4
	macros.

	Note that this macro has been derived from AC_PYTHON_DEVEL, but does not
	depend on it.

2008-02-20  Peter Simons  <simons@cryp.to>

	AX_LIB_XML_SECURITY: added link to project home page

2008-02-20  Alexander Petry  <petry@itwm.fhg.de>

	AX_LIB_XML_SECURITY: detect Apache Xml-Security C++ library (initial version)
	This macro is based on Mateusz Loskot's AX_LIB_XERCES.

2008-02-20  Daniel Casimiro  <dan.casimiro@gmail.com>

	AX_BOOST_SYSTEM: detect Boost.System library (initial version)

2008-02-20  Francesco Salvestrini  <salvestrini@gmail.com>

	AX_PATH_MISSING: added missing dereferencing

2008-02-12  Rafa Rzepecki  <divided.mind@gmail.com>

	AX_RUBY_DEVEL: detect Ruby development environment (initial version)

2008-01-29  Francesco Salvestrini  <salvestrini@users.sourceforge.net>

	Re-released recent additions under an all-permissive license and added listed Dustin J. Mitchell as joint copyright holder of AX_WITH_PROG.

2008-01-29  Mateusz Loskot  <mateusz@loskot.net>

	AX_LIB_POSTGRESQL: bugfix

2008-01-28  Francesco Salvestrini  <salvestrini@gmail.com>

	Major re-factoring of Perl, Guile, Python, and Ruby detection macros.
	The new submission AX_WITH_PROG generalizes the technique employed by the
	original AX_WITH_PYTHON to allow for detecting generic executables. Based on
	that macro, trivial wrappers are provided for finding installed versions of
	Perl, Guile, Python, and Ruby.

	NOTE: The earlier version of AX_WITH_PYTHON performed a version check. The
	AX_WITH_PROG-based macros don't do that. Instead, separate macros are available
	for Perl, Guile, Python, and Ruby that check the version of a given executable
	in a second, independent step.

2008-01-28  Sven Verdoolaege  <skimo@kotnet.org>

	AX_CREATE_PKGCONFIG_INFO: updated e-mail address

2008-01-28  Peter Simons  <simons@cryp.to>

	AX_COMPARE_VERSION: cosmetic change
	Removed the reference to AX_PATH_BDB from the documentation in order to
	generate a neater cross-reference graph. The macro's HTML page refers to
	that macro anyway.

2008-01-28  Duncan Simpson  <dps@simpson.demon.co.uk>

	DPS_LIBGCJ_JAR: find classpath built into gcj (initial version)

	DPS_XTRA_CLASSPATH: detect classpath required to find a class in a jar file (initial version)

	DPS_JAVA_CHECK_CLASS: test if a Java class is available (initial version)

	DPS_CHECK_PLUGIN: find a compatible version of plugin.jar (initial version)

2008-01-28  Andy Kitchen  <agimbleinthewabe@gmail.com>

	AX_LLVM: detect LLVM (initial version)

2008-01-28  Francesco Salvestrini  <salvestrini@gmail.com>

	AX_COMPARE_VERSION: Added AC_PROG_AWK call and replaced use of awk with $AWK.

2008-01-10  Dustin J. Mitchell  <dustin@zmanda.com>

	AC_CHECK_DOCBOOK_XSLT(_MIN): minor updates

2007-12-18  Jean-Louis Martineau  <martineau@zmanda.com>

	AC_CHECK_DOCBOOK_DTD: minor portability fix

2007-12-06  Mateusz Loskot  <mateusz@loskot.net>

	AX_LIB_EXPAT: initial submission

2007-12-06  Francesco Salvestrini  <salvestrini@users.sourceforge.net>

	AX_MISSING_PROG: improved the documentation

2007-12-03  Francesco Salvestrini  <salvestrini@users.sourceforge.net>

	AX_MISSING_PROG, AX_PATH_MISSING: re-factored for improved modularity
	Added a new macro AX_MISSING_PROG that wraps AM_MISSING_PROG (from
	Automake) and modified AX_PATH_MISSING to wrap AX_MISSING_PROG. The
	change is transparent for users of the previous version.

	The names used in the macro-chain are confusing, but I didn't find a
	better solution. Suggestions are welcome.

2007-12-03  Christophe Tournayre  <turn3r@users.sourceforge.net>

	AX_COUNT_CPUS: added MacOS X support

2007-11-30  Christophe Tournayre  <turn3r@users.sourceforge.net>

	AX_EXT: new submission to detect the supported SIMD extensions

	AX_CPU_VENDOR: new submission to detect the cpu vendor

	AX_CPU_FREQ: new submission to detect the cpu frequency

	AX_CACHE_SIZE: new submission to detect L1 and L2 cache sizes

2007-11-30  Mateusz Loskot  <mateusz@loskot.net>

	AX_LIB_FIREBIRD: new submission to detect the Firebird client library

	AX_LIB_ORACLE_OCI: various improvements
	Users who update from an earlier version should be aware of the fact that the
	result variable has been renamed from HAVE_ORACLE to HAVE_ORACLE_OCI.

2007-11-30  Francesco Salvestrini  <salvestrini@users.sourceforge.net>

	AX_{C,CPP,CXX,CXXPP,LD}_CHECK_FLAG: Check flags supported by the tool-chain.
	The new submissions generalize the functionality provided by AX_GCC_OPTION.

2007-11-22  Pierre Hebert  <pierrox@pierrox.net>

	BNV_HAVE_QT: provide QT_LRELEASE and QT_LUPDATE variables

2007-11-22  Bogdan Drozdowski  <bogdandr@op.pl>

	AX_GCC_OPTION: improved portability by providing a dummy file to compile

2007-11-22  Thomas Porschberg  <thomas@randspringer.de>

	AX_BOOST_*: bug fixes for MinGW and FC

2007-11-22  Mateusz Loskot  <mateusz@loskot.net>

	AX_LIB_XERCES: initial version

2007-09-09  Peter Simons  <simons@cryp.to>

	New macros to test for various assemblers, like nasm, yasm, etc.

2007-08-21  Peter Simons  <simons@cryp.to>

	AX_ENABLE_BUILDDIR: Bump modification date to obsolete the reverted version.

2007-08-21  Peter Simons  <simons@cryp.to>

	AX_ENABLE_BUILDDIR: Revert renaming of variable HOST to BUILD.
	Further discussion on the Autoconf mailing list has reached the
	following consensus: although BUILD is the right choice in most
	cases, in case of cross-compilation it is not. Cross-compilation
	needs HOST to be set, so the original version of this macro is
	the safer choice. This patch reverts commit
	41da8f494cd209a9836ebeae8f211cb84dde9153.

	An unpleasant property of HOST is that most shell environments
	define that variable to the local hostname. When configure uses
	$HOST as a default setting, however, that is not what it expects
	to find -- HOST is supposed to be config.guess tripple. Thus, the
	user is forced to specify HOST explicitly or to undefine $HOST in
	the shell before calling configure. That's a bit of mess. Bright
	ideas and patches are welcome.

2007-08-17  Julian Cummings  <cummings@cacr.caltech.edu>

	AX_COMPILER_VENDOR: added support for Pathscale compiler

2007-08-09  Julian Cummings  <cummings@cacr.caltech.edu>

	AX_F90_MODULE_FLAG: drop support for -module flag
	It turns out that in Version 3.0 of the Pathscale Fortran
	compiler they have "clarified" the meaning of the -module flag to
	only be for setting the directory where *.mod files are written.
	In version 3.0, you can only use -module once in a command line,
	and if you use it, then the compiler will look there first for
	module files to be read before looking in the -I directories.
	Thus, it really is best to just use the -I flag here and let the
	user add one specific -module option only if they want or need to
	redirect module output files.

	This commit reverts 5ba234dd8f69456238e7718d4f3a7c116639e373.

2007-08-04  raf  <raf@raf.org>

	AC_RAF_FUNC_WHICH_GETSERVBYNAME_R: update to GPL3 (with Autoconf exception)

2007-08-04  Alan Woodland  <ajw05@aber.ac.uk>

	AX_TLS: update license to GPL3 (with Autoconf exception)

2007-08-04  Oren Ben-Kiki  <oren@ben-kiki.org>

	AX_PROG_DOXYGEN: re-release all-permissive

2007-08-04  Tal Shalif  <tal@shalif.com>

	AC_PKG_MICO: re-release all-permissive

2007-08-04  Dustin J. Mitchell  <dustin@cs.uchicago.edu>

	AZ_PYTHON: re-release all-permissive
	Robert White agreed as well.

2007-08-04  Julian Cummings  <cummings@cacr.caltech.edu>

	AX_F90_MODULE_FLAG: support -module PGI compiler flag
	I have "-module " to the list of compiler options that is tried
	in order to support the PGI Fortran compiler. Without this
	change, the PGI compiler actually accepts "-I" and passes the
	test. However, this option is actually meant for setting the
	include file search path to find files that are included with the
	Fortran INCLUDE statement. Although the -I flag works in this
	case because there are no -module options on the command line,
	things will not work correctly if the user does bring in the
	-module option on the actual compile command line.

2007-08-04  Peter Simons  <simons@cryp.to>

	AX_ENABLE_BUILDDIR_UNAME: Obsoleted.
	This macro duplicates the functionality of the standard Autoconf macro
	AC_CANONICAL_BUILD. Kindly pointed out by Julian C. Cummings.

	AX_PREFIX_CONFIG_H: stripped invalid e-mail address
	Marten Svantesson's e-mail address has become invalid. If anyone
	knows how to reach him, please let me know.

2007-08-04  Julian Cummings  <cummings@cacr.caltech.edu>

	AX_ENABLE_BUILDDIR: Renamed variable HOST to BUILD.
	The patch universally replaces "host" with "build" and "HOST"
	with "BUILD". The rationale is that typically the user wishes to
	segregate builds based upon the BUILD target rather than the
	configuration HOST type. Now that these host and build variables
	are treated as more fully distinct in Autoconf, it makes sense to
	honor this distinction.

2007-07-31  Peter Simons  <simons@cryp.to>

	AC_PYTHON_DEVEL: re-released under GPL3 (with autoconf exception)

2007-07-31  Mark Pulford  <mark@kyne.com.au>

	MP_WITH_CURSES: re-released under GPL3 (with autoconf exception)

2007-07-31  Uwe Mayer  <merkosh@hadiko.de>

	MERK_PROG_TCL: re-released under GPL3 (with autoconf exception)

	AX_PROG_TCL: re-released under GPL3 (with autoconf exception)

2007-07-31  Kaveh Ghazi  <ghazi@caip.rutgers.edu>

	AC_COMPILE_CHECK_SIZEOF: re-released under GPL3 (with autoconf exception)

2007-07-29  Steven G. Johnson  <stevenj@alum.mit.edu>

	updated from GPL2 to GPL3 (with autoconf exception)

2007-07-29  Ruslan Shevchenko  <Ruslan@Shevchenko.Kiev.UA>

	RSSH_CHECK_OFF64_T: updated from LGPL2 to LGPL3

2007-07-29  Paul Gilmartin  <pg@sweng.stortek.com>

	CF_EBCDIC: updated license from gpl2 to gpl3 (with autoconf exception)

2007-07-29  Bruce Korb  <bkorb@gnu.org>

	AG_CHECK_*: re-released under all-permissive license

2007-07-29  Vaclav Slavik  <vaclav.slavik@matfyz.cz>

	BERKELEY_DB: re-released under all-permissive license

2007-07-29  Tim Toolan  <toolan@ele.uri.edu>

	AX_COMPARE_VERSION, AX_PATH_BDB, AX_PATH_MILTER: re-release all-permissive

2007-07-29  Oskar Liljeblad  <oskar@osk.mine.nu>

	AC_LIB_ID3, AC_LIB_UPNP: re-release under all-permissive license

2007-07-29  Dustin J. Mitchell  <dustin@cs.uchicago.edu>

	Use author attribution "Dustin J. Mitchell" consistently.

2007-07-29  Ville Laurikari  <vl@iki.fi>

	AC_LIB_READLINE, AC_PROG_CC_WARNINGS: update license from GPL2 to GPL3

2007-07-29  Peter Simons  <simons@cryp.to>

	Pruned invalid e-mail addresses.
	The following contributors have become unreachable:

	   Mark Elbrecht <snowball3@bigfoot.com>
	   Mark R. Bannister <markb@freedomware.co.uk>
	   Ilguiz Latypov <ilatypov@superbt.com>
	   Matthew D. Langston <langston@SLAC.Stanford.EDU>

2007-07-29  Peter Simons  <simons@cryp.to>

	AC_CXX_HAVE_EXT_HASH_MAP, AC_PATH_GENERIC, AC_PATH_LIB: remove invalid e-mail
	The e-mail addresses listed for Perceval Anichini and Angus Lees no longer
	work. If anyone knows how to reach them, please let me know.

2007-07-29  Dustin Mitchell  <dustin@cs.uchicago.edu>

	AX_PYTHON_CONFIG_VAR, AX_WITH_APXS, AX_WITH_PYTHON: release all-permissive

2007-07-28  Peter Simons  <simons@cryp.to>

	ax_c___attribute__.m4: dropped invalid e-mail address
	Christian Haggstrom's e-mail address chm@c00.info is unreachable.

2007-07-28  Thomas Porschberg  <thomas@randspringer.de>

	ax_boost_base.m4: recognize macports installation
	The update reflects that boost library is installed in /opt/local
	for mac users when using macports (macports.org). I got the
	advice from Ernest Turro.

2007-07-27  Peter Simons  <simons@cryp.to>

	AX_CFLAGS_GCC_OPTION: Cosmetic editing for improved HTML hyper-linking.

2007-07-26  Thomas Porschberg  <thomas@randspringer.de>

	AX_BOOST: obsoleted in favor of modular macros
	The macro AX_BOOST is deprecated. All users should use
	AX_BOOST_BASE and the specific macros like ax_boost_date_time.m4,
	etc.

	AX_BOOST_*: adapted for naming convention in Boost version 1.34

2007-07-26  Pete Greenwell  <pete@mu.org>

	AX_BOOST_ASIO: initial version
	The asio library is not yet a part of the latest boost library
	collection, but will be shipped with version 1.35.

2007-07-26  Stepan Kasal  <skasal@redhat.com>

	AX_C___ATTRIBUTE__: fixed for gcc4
	The macro did not work with current gcc. The problem is that gcc4
	does not swallow nested function, so the declaration and
	definition of the test function had to be moved from the body of
	main() to the prologue of conftest.c.

2007-07-24  Mikael Lepistö  <mikael.lepisto@tut.fi>

	ax_boost*.m4: fix library detection when compiling with -pedantic
	When running the Boost macros with the "-pedantic" compiler
	switch, they fail. It seems that the problem is a multiply
	defined "main" function in the generated test program. I changed
	the call to AC_CHECK_LIB to use "exit" instead of "main", which
	seems to work reliably.

2007-07-19  Alan Woodland  <ajw05@aber.ac.uk>

	AX_TLS: initial version
	The attached macro attempts to detect compiler support for TLS
	storage class extensions and how to use that extension. It then
	defines the macro TLS to the keyword it found.

2007-07-18  Peter Simons  <simons@cryp.to>

	AX_BOOST_*, AX_PYTHON: Michael Tindal's e-mail address is invalid.
	The address <mtindal@paradoxpoint.com> no longer works because the
	domain name paradoxpoint.com appears to have expired. If anyone knows
	how to reach Michael these days, please let me know. Thanks to Mikael
	Lepistö for bringing this problem to my attention.

2007-07-18  Mikael Lepistö  <mikael.lepisto@tut.fi>

	AX_PYTHON: added support for python 2.5

2007-06-27  Dustin J. Mitchell  <dustin@zmanda.com>

	Bug fix for Solaris 9.
	One of our users noticed some strange output on Solaris 9 from
	this macro. It looks like it was a fairly trivial typo, executing
	$1 (a list of headers) instead of $2 (optional shell commands).

2007-06-01  Peter Simons  <simons@cryp.to>

	release 2007-06-01

2007-06-01  Noah Slater  <nslater@bytesexual.org>

	AX_PATH_MISSING: Check whether a given program exists in path.

2007-05-15  Peter Simons  <simons@cryp.to>

	Use consistent author attribution for Zmanda Inc.

2007-05-12  Alex Pletzer  <pletzer@txcorp.com>

	There is an error at line:
	 | if test "$ax_flag" = "not found" ; then

	in ax_f90_module_flag.m4. It should read:

	 if test "$ax_f90_modflag" = "not found" ; then

2007-05-10  Peter Simons  <simons@cryp.to>

	ax_f90_module_extension.m4: portability fix
	Luc Maisonobe <luc.maisonobe@free.fr> wrote:

	 > Alexander Pletzer <pletzer@txcorp.com> found an error in the
	 > AX_F90_MODULE_EXTENSION. As far as I understand, due to some
	 > leading blanks in the fortran code snippet, some compilers
	 > switched to fixed form fortran and failed to compile the code.
	 > So he added a simple fortran90-only comment to make sure the
	 > compiler stay in F90 mode.

2007-05-09  Peter Simons  <simons@cryp.to>

	AC_CHECK_DOCBOOK_XSLT_MIN: consistency edits

	AC_CHECK_DOCBOOK_XSLT_MIN: new submission

2007-04-19  Peter Simons  <simons@cryp.to>

	Added submissions from Dustin J. Mitchell <dustin@zmanda.com>: AC_CHECK_DOCBOOK_DTD, AC_CHECK_DOCBOOK_XSLT, and AC_PROG_XSLTPROC.

2007-03-23  Peter Simons  <simons@cryp.to>

	ax_boost_thread.m4: improved platform recognition.

	ax_boost_test_exec_monitor.m4: Fixed usage description.

2007-03-22  Peter Simons  <simons@cryp.to>

	ax_boost_test_exec_monitor.m4: New submission from Dodji Seketeli.

2007-03-15  Peter Simons  <simons@cryp.to>

	ax_boost.m4, ax_boost_base.m4: Updated help messages.
	Thomas Porschberg updated the help messages to reflect the
	defaults correctly. Boost is now enabled unless specified
	otherwise.

2007-03-12  Peter Simons  <simons@cryp.to>

	ax_boost*.m4: Portability improvements.
	Joerg Sonnenberger reported a problem:

	 | This fails on a number of systems because in
	 |
	 |     AC_CHECK_LIB($ax_lib, main, [BOOST_REGEX_LIB=$ax_lib break])
	 |
	 | the BOOST_REGEX_LIB a local variable for break. Can you fix
	 | that macro to use two statements? Try running this with bash3
	 | in native mode for example.

	Thomas Porschberg submitted the new versions in
	<20070312215212.6da63127@jeschken.quark.de>.

2007-02-18  Peter Simons  <simons@cryp.to>

	Received new submission: rssh_check_off64_t.m4.

	Imported http://autoconf-archive.cryp.to/ release 2007-02-14.
